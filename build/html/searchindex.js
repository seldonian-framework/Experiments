Search.setIndex({"docnames": ["_autosummary/experiments", "_autosummary/experiments.baselines", "_autosummary/experiments.baselines.random_classifiers", "_autosummary/experiments.baselines.random_classifiers.WeightedRandomClassifierModel", "_autosummary/experiments.experiments", "_autosummary/experiments.experiments.BaselineExperiment", "_autosummary/experiments.experiments.Experiment", "_autosummary/experiments.experiments.FairlearnExperiment", "_autosummary/experiments.experiments.SeldonianExperiment", "_autosummary/experiments.generate_plots", "_autosummary/experiments.generate_plots.PlotGenerator", "_autosummary/experiments.generate_plots.RLPlotGenerator", "_autosummary/experiments.generate_plots.SupervisedPlotGenerator", "_autosummary/experiments.utils", "_autosummary/experiments.utils.MSE", "_autosummary/experiments.utils.batch_predictions", "_autosummary/experiments.utils.generate_episodes_and_calc_J", "_autosummary/experiments.utils.generate_resampled_datasets", "api", "index", "overview"], "filenames": ["_autosummary/experiments.rst", "_autosummary/experiments.baselines.rst", "_autosummary/experiments.baselines.random_classifiers.rst", "_autosummary/experiments.baselines.random_classifiers.WeightedRandomClassifierModel.rst", "_autosummary/experiments.experiments.rst", "_autosummary/experiments.experiments.BaselineExperiment.rst", "_autosummary/experiments.experiments.Experiment.rst", "_autosummary/experiments.experiments.FairlearnExperiment.rst", "_autosummary/experiments.experiments.SeldonianExperiment.rst", "_autosummary/experiments.generate_plots.rst", "_autosummary/experiments.generate_plots.PlotGenerator.rst", "_autosummary/experiments.generate_plots.RLPlotGenerator.rst", "_autosummary/experiments.generate_plots.SupervisedPlotGenerator.rst", "_autosummary/experiments.utils.rst", "_autosummary/experiments.utils.MSE.rst", "_autosummary/experiments.utils.batch_predictions.rst", "_autosummary/experiments.utils.generate_episodes_and_calc_J.rst", "_autosummary/experiments.utils.generate_resampled_datasets.rst", "api.rst", "index.rst", "overview.rst"], "titles": ["experiments", "experiments.baselines", "experiments.baselines.random_classifiers", "experiments.baselines.random_classifiers.WeightedRandomClassifierModel", "experiments.experiments", "experiments.experiments.BaselineExperiment", "experiments.experiments.Experiment", "experiments.experiments.FairlearnExperiment", "experiments.experiments.SeldonianExperiment", "experiments.generate_plots", "experiments.generate_plots.PlotGenerator", "experiments.generate_plots.RLPlotGenerator", "experiments.generate_plots.SupervisedPlotGenerator", "experiments.utils", "experiments.utils.MSE", "experiments.utils.batch_predictions", "experiments.utils.generate_episodes_and_calc_J", "experiments.utils.generate_resampled_datasets", "API", "Seldonian Experiments documentation", "Overview"], "terms": {"modul": [0, 1, 4, 9], "run": [0, 4, 5, 6, 7, 8, 10, 11, 12, 19, 20], "seldonian": [0, 4, 5, 8, 10, 11, 12], "gener": [0, 10, 11, 12, 16, 17, 19], "three": [0, 9, 10, 11, 12, 19], "plot": [0, 9, 10, 11, 12, 19], "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 20], "weight": [3, 7, 8], "base": [3, 5, 6, 7, 8, 10, 11, 12], "classificationmodel": 3, "__init__": [3, 5, 6, 7, 8, 10, 11, 12, 19], "implement": [3, 20], "classifi": [3, 20], "alwai": 3, "predict": [3, 7, 14, 19, 20], "posit": [3, 20], "ha": [3, 20], "prob": 3, "0": [3, 20], "5": [3, 20], "regardless": [3, 20], "input": [3, 17, 20], "__repr__": [3, 5, 6, 7, 8, 10, 11, 12, 19], "return": [3, 5, 6, 7, 8, 10, 11, 12, 16, 20], "repr": [3, 5, 6, 7, 8, 10, 11, 12], "self": [3, 5, 6, 7, 8, 10, 11, 12], "method": [3, 5, 6, 7, 8, 10, 11, 12, 20], "theta": [3, 10, 11, 12], "x": 3, "probabl": [3, 20], "have": [3, 20], "label": [3, 7, 10, 11, 12, 14, 17], "paramet": [3, 5, 6, 7, 8, 10, 11, 12, 14, 17, 20], "numpi": [3, 8], "ndarrai": [3, 8], "The": [3, 5, 6, 7, 8, 10, 11, 12, 17, 19, 20], "featur": [3, 7, 17], "each": [3, 5, 6, 7, 8, 10, 11, 12, 17, 20], "observ": 3, "type": [3, 16, 20], "float": [3, 5, 7, 8, 10, 11, 12, 16], "model_nam": [5, 6, 8, 12, 20], "results_dir": [5, 6, 7, 8, 10, 11, 12, 19], "baselin": [5, 6, 12, 19], "against": [5, 20], "which": [5, 6, 7, 8, 10, 11, 12, 17, 20], "compar": [5, 20], "str": [5, 6, 7, 8, 10, 11, 12, 17], "string": [5, 6, 8], "name": [5, 6, 7, 8, 10, 11, 12, 20], "model": [5, 6, 7, 8, 10, 11, 12, 15, 20], "e": [5, 6, 10, 11, 12, 17, 20], "g": [5, 6, 10, 11, 12, 20], "logistic_regress": [5, 6, 20], "parent": [5, 6, 7, 8, 17], "directori": [5, 6, 7, 8, 10, 11, 12, 17, 20], "save": [5, 6, 7, 8, 10, 11, 12, 17, 20], "ani": [5, 6, 7, 8], "experiment": [5, 6, 7, 8], "result": [5, 6, 7, 8, 10, 11, 12, 20], "aggregate_result": [5, 6, 7, 8, 19], "kwarg": [5, 6, 7, 8, 10, 11, 12, 14, 15, 16], "group": [5, 6, 7, 8], "togeth": [5, 6, 7, 8], "data": [5, 6, 7, 8, 10, 11, 12, 20], "trial": [5, 6, 7, 8, 10, 11, 12, 17, 20], "file": [5, 6, 7, 8, 10, 11, 12, 19], "singl": [5, 6, 7, 8, 20], "csv": [5, 6, 7, 8, 17, 20], "run_baseline_tri": [5, 19], "data_frac": [5, 7, 8, 10, 11, 12, 19], "trial_i": [5, 7, 8, 20], "current": [5, 8, 20], "onli": [5, 8, 20], "support": [5, 20], "supervis": [5, 12, 17, 20], "learn": [5, 17, 20], "fraction": [5, 7, 8, 10, 11, 12, 20], "overal": [5, 7, 8, 10, 11, 12], "dataset": [5, 7, 8, 10, 11, 12, 17, 20], "size": [5, 7, 8, 10, 11, 12, 20], "us": [5, 7, 8, 10, 11, 12, 13, 17, 19, 20], "int": [5, 7, 8, 10, 11, 12, 17], "index": [5, 7, 8], "run_experi": [5, 7, 8, 19], "write_trial_result": [5, 6, 7, 8, 19], "colnam": [5, 6, 7, 8], "trial_dir": [5, 6, 7, 8], "verbos": [5, 6, 7, 8, 11, 12], "fals": [5, 6, 7, 8, 11, 12, 20], "write": [5, 6, 7, 8], "out": [5, 6, 7, 8], "from": [5, 6, 7, 8, 10, 11, 12, 17, 20], "list": [5, 6, 7, 8, 10, 11, 12, 16, 20], "inform": [5, 6, 7, 8], "item": [5, 6, 7, 8], "These": [5, 6, 7, 8], "compris": [5, 6, 7, 8, 20], "header": [5, 6, 7, 8], "bool": [5, 6, 7, 8, 11, 12], "true": [5, 6, 7, 8, 10, 11, 12, 14, 20], "print": [5, 6, 7, 8], "filenam": [5, 6, 7, 8, 10, 11, 12], "object": [6, 10, 11, 12, 19], "fairlearn_epsilon_constraint": [7, 12], "fairlearn": [7, 12, 20], "valu": [7, 10, 11, 12, 20], "epsilon": 7, "threshold": [7, 20], "constraint": [7, 8, 10, 11, 12, 20], "evaluate_constraint_funct": [7, 8, 19], "y_pred": [7, 14], "test_label": 7, "fairlearn_constraint_nam": [7, 12], "epsilon_ev": 7, "eval_method": 7, "nativ": 7, "sensitive_featur": 7, "evalu": [7, 8, 10, 11, 12, 19, 20], "function": [7, 8, 10, 11, 12, 13, 17, 20], "1d": 7, "arrai": [7, 14, 20], "same": [7, 17, 20], "shape": [7, 17], "default": [7, 10, 11, 12, 20], "two": [7, 20], "option": [7, 8, 10, 11, 12, 17, 20], "column": 7, "ar": [7, 10, 11, 12, 17, 19, 20], "consid": [7, 20], "sensit": [7, 17], "get_fairlearn_predict": [7, 19], "mitig": 7, "x_test_fairlearn": 7, "get": 7, "consist": 7, "potenti": 7, "more": [7, 20], "than": [7, 20], "one": [7, 20], "predictor": 7, "For": [7, 20], "non": 7, "zero": 7, "we": [7, 20], "figur": [7, 20], "how": [7, 20], "mani": [7, 20], "point": [7, 20], "normal": 7, "1": [7, 10, 20], "across": 7, "all": [7, 10, 20], "test": [7, 20], "run_fairlearn_tri": [7, 19], "i": [8, 10, 11, 12, 16, 17, 19, 20], "qsa": 8, "quasi": [8, 20], "algorithm": [8, 10, 11, 12, 19, 20], "solut": [8, 10, 11, 12, 15, 20], "constraint_eval_fn": [8, 10, 11, 12, 19], "constraint_eval_kwarg": [8, 10, 11, 12, 19], "helper": 8, "determin": [8, 20], "whether": [8, 11, 12, 20], "wa": [8, 20], "safe": [8, 20], "ground": [8, 10, 11, 12, 16, 20], "truth": [8, 10, 11, 12, 16, 20], "found": [8, 20], "dure": 8, "candid": [8, 10, 11, 12], "select": [8, 10, 11, 12], "given": [8, 20], "an": [8, 10, 11, 12, 19], "empti": [8, 10, 11, 12, 20], "pars": [8, 10, 11, 12, 20], "tree": [8, 10, 11, 12, 20], "dict": [8, 10, 11, 12], "keyword": [8, 10, 11, 12], "argument": [8, 10, 11, 12, 20], "pass": [8, 10, 11, 12, 20], "run_qsa_tri": [8, 19], "make": [9, 10, 11, 12, 17, 19, 20], "spec": [10, 11, 12, 19], "n_trial": [10, 11, 12, 17, 19], "datagen_method": [10, 11, 12, 19], "perf_eval_fn": [10, 11, 12, 19], "n_worker": [10, 11, 12, 19], "perf_eval_kwarg": [10, 11, 12, 19], "batch_epoch_dict": [10, 11, 12], "perform": [10, 11, 12, 19, 20], "2": 10, "rate": [10, 20], "3": [10, 20], "failur": [10, 20], "v": 10, "amount": [10, 20], "specif": [10, 11, 12], "number": [10, 11, 12, 17, 20], "time": [10, 11, 12, 20], "error": [10, 11, 12, 14], "bar": [10, 11, 12], "proport": [10, 11, 12], "horizont": [10, 11, 12, 20], "axi": [10, 11, 12, 20], "resampl": [10, 11, 12, 17, 20], "obtain": [10, 11, 12, 20], "signatur": [10, 11, 12], "func": [10, 11, 12], "where": [10, 11, 12, 16], "worker": [10, 11, 12, 20], "multiprocess": [10, 11, 12], "If": [10, 11, 12, 19, 20], "provid": [10, 11, 12, 20], "extra": [10, 11, 12], "instruct": [10, 11, 12], "batch": [10, 11, 12], "n_epoch": [10, 11, 12], "frac": [10, 11, 12, 20], "make_plot": [10, 11, 12, 19, 20], "model_label_dict": [10, 11, 12], "fontsiz": [10, 11, 12], "12": [10, 11, 12], "legend_fonts": [10, 11, 12], "8": [10, 11, 12], "performance_label": [10, 11, 12], "accuraci": [10, 11, 12, 20], "performance_yscal": [10, 11, 12], "linear": [10, 11, 12], "performance_ylim": [10, 11, 12], "marker_s": [10, 11, 12], "20": [10, 11, 12], "save_format": [10, 11, 12], "pdf": [10, 11, 12], "show_titl": [10, 11, 12], "custom_titl": [10, 11, 12], "none": [10, 11, 12], "include_legend": [10, 11, 12], "savenam": [10, 11, 12], "dictionari": [10, 11, 12, 20], "kei": [10, 11, 12], "you": [10, 11, 12, 19, 20], "want": [10, 11, 12, 20], "shown": [10, 11, 12, 20], "legend": [10, 11, 12], "font": [10, 11, 12], "text": [10, 11, 12], "y": [10, 11, 12, 14], "path": [10, 11, 12], "disk": [10, 11, 12], "hyperparameter_and_setting_dict": 11, "plotgener": [11, 12, 19], "rl": [11, 20], "run_seldonian_experi": [11, 12, 19, 20], "attribut": [11, 12, 17], "assign": [11, 12], "displai": [11, 12], "stdout": [11, 12], "while": [11, 12, 20], "run_baseline_experi": [12, 19, 20], "run_fairlearn_experi": [12, 19], "fairlearn_sensitive_feature_nam": 12, "fairlearn_epsilon_ev": 12, "fairlearn_eval_kwarg": 12, "librari": [12, 13, 19, 20], "rest": 13, "calcul": [14, 16], "sampl": [14, 20], "mean": 14, "squar": 14, "x_test": 15, "expect": 16, "discount": 16, "episod": [16, 20], "j": 16, "save_dir": 17, "replac": [17, 20], "creat": [17, 20], "version": 17, "panda": 17, "datafram": 17, "origin": [17, 20], "file_format": 17, "format": 17, "pkl": [17, 20], "welcom": 19, "thi": [19, 20], "design": 19, "help": [19, 20], "safeti": [19, 20], "sourc": 19, "code": [19, 20], "host": 19, "github": 19, "heavi": 19, "engin": [19, 20], "core": [19, 20], "complet": 19, "new": [19, 20], "see": [19, 20], "overview": 19, "api": [19, 20], "random_classifi": 19, "weightedrandomclassifiermodel": 19, "baselineexperi": [19, 20], "fairlearnexperi": [19, 20], "seldonianexperi": 19, "generate_plot": 19, "rlplotgener": [19, 20], "supervisedplotgener": [19, 20], "util": 19, "mse": 19, "batch_predict": 19, "generate_episodes_and_calc_j": 19, "generate_resampled_dataset": 19, "document": 20, "explain": 20, "sa": 20, "detail": 20, "descript": 20, "what": 20, "machin": 20, "toolkit": 20, "homepag": 20, "heavili": 20, "depend": 20, "A": 20, "wai": 20, "It": 20, "involv": 20, "increas": 20, "primari": 20, "satisfi": 20, "behavior": 20, "sometim": 20, "come": 20, "cost": 20, "reduc": 20, "can": 20, "understand": 20, "trade": 20, "off": 20, "cannot": 20, "No": 20, "some": 20, "despit": 20, "quantiti": 20, "assum": 20, "access": 20, "real": 20, "world": 20, "problem": 20, "set": 20, "typic": 20, "doe": 20, "instead": 20, "adopt": 20, "strategi": 20, "bootstrap": 20, "order": 20, "approxim": 20, "show": 20, "gpa": 20, "discuss": 20, "scienc": 20, "paper": 20, "top": 20, "panel": 20, "left": 20, "middl": 20, "right": 20, "train": 20, "thoma": 20, "et": 20, "al": 20, "2019": 20, "fair": 20, "case": 20, "dispar": 20, "impact": 20, "classif": 20, "green": 20, "dot": 20, "dash": 20, "sever": 20, "standard": 20, "ml": 20, "red": 20, "do": 20, "includ": 20, "also": 20, "awar": 20, "blue": 20, "magenta": 20, "In": 20, "exampl": 20, "criteria": 20, "black": 20, "line": 20, "repres": 20, "confid": 20, "delta": 20, "05": 20, "regim": 20, "your": 20, "reinforc": 20, "produc": 20, "either": 20, "both": 20, "describ": 20, "here": 20, "follow": 20, "requir": 20, "often": 20, "interfac": 20, "contain": 20, "everyth": 20, "need": 20, "underli": 20, "etc": 20, "estim": 20, "uncertainti": 20, "multipli": 20, "within": 20, "differ": 20, "dimens": 20, "At": 20, "first": 20, "generate_episod": 20, "polici": 20, "parallel": 20, "when": 20, "multipl": 20, "avail": 20, "becaus": 20, "independ": 20, "other": 20, "embarrassingli": 20, "program": 20, "less": 20, "max": 20, "specifi": 20, "must": 20, "explicitli": 20, "nsf": 20, "them": 20, "built": 20, "custom": 20, "length": 20, "call": 20, "plot_gener": 20, "easi": 20, "develop": 20, "easili": 20, "add": 20, "own": 20, "ad": 20, "alreadi": 20, "logist": 20, "regress": 20, "random": 20, "p": 20, "everi": 20, "abov": 20, "would": 20, "simpli": 20, "block": 20, "like": 20, "That": 20, "thei": 20, "anoth": 20, "narrow": 20, "rang": 20, "progress": 20, "structur": 20, "insid": 20, "look": 20, "after": 20, "via": 20, "qsa_result": 20, "trial_data": 20, "data_frac_0": 20, "0010_trial_0": 20, "0010_trial_1": 20, "0010_trial_2": 20, "0010_trial_3": 20, "0010_trial_4": 20, "0022_trial_0": 20, "0022_trial_1": 20, "0022_trial_2": 20, "0022_trial_3": 20, "0022_trial_4": 20, "0046_trial_0": 20, "0046_trial_1": 20, "0046_trial_2": 20, "0046_trial_3": 20, "0046_trial_4": 20, "0050_trial_0": 20, "0100_trial_0": 20, "0100_trial_1": 20, "0100_trial_2": 20, "0100_trial_3": 20, "0100_trial_4": 20, "0215_trial_0": 20, "0215_trial_1": 20, "0215_trial_2": 20, "0215_trial_3": 20, "0215_trial_4": 20, "0464_trial_0": 20, "0464_trial_1": 20, "0464_trial_2": 20, "0464_trial_3": 20, "0464_trial_4": 20, "1000_trial_0": 20, "1000_trial_1": 20, "1000_trial_2": 20, "1000_trial_3": 20, "1000_trial_4": 20, "2154_trial_0": 20, "2154_trial_1": 20, "2154_trial_2": 20, "2154_trial_3": 20, "2154_trial_4": 20, "4642_trial_0": 20, "4642_trial_1": 20, "4642_trial_2": 20, "4642_trial_3": 20, "4642_trial_4": 20, "data_frac_1": 20, "0000_trial_0": 20, "0000_trial_1": 20, "0000_trial_2": 20, "0000_trial_3": 20, "0000_trial_4": 20, "resampled_dataset": 20, "resampled_data_trial0": 20, "resampled_data_trial1": 20, "resampled_data_trial2": 20, "resampled_data_trial3": 20, "resampled_data_trial4": 20, "np": 20, "logspac": 20, "10": 20, "log": 20, "space": 20, "start": 20, "001": 20, "end": 20, "As": 20, "50": 20, "boolean": 20, "flag": 20, "fail": 20, "content": 20, "6105_trial36": 20, "passed_safeti": 20, "6105402296585326": 20, "36": 20, "6746247014792527": 20, "level": 20, "folder": 20, "_result": 20, "logistic_regression_result": 20, "its": 20, "separ": 20, "curv": 20, "autom": 20, "loan": 20, "approv": 20, "system": 20, "tutori": 20}, "objects": {"": [[0, 0, 0, "-", "experiments"]], "experiments": [[1, 0, 0, "-", "baselines"], [4, 0, 0, "-", "experiments"], [9, 0, 0, "-", "generate_plots"], [13, 0, 0, "-", "utils"]], "experiments.baselines": [[2, 0, 0, "-", "random_classifiers"]], "experiments.baselines.random_classifiers": [[3, 1, 1, "", "WeightedRandomClassifierModel"]], "experiments.baselines.random_classifiers.WeightedRandomClassifierModel": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "__repr__"], [3, 2, 1, "", "predict"]], "experiments.experiments": [[5, 1, 1, "", "BaselineExperiment"], [6, 1, 1, "", "Experiment"], [7, 1, 1, "", "FairlearnExperiment"], [8, 1, 1, "", "SeldonianExperiment"]], "experiments.experiments.BaselineExperiment": [[5, 2, 1, "", "__init__"], [5, 2, 1, "", "__repr__"], [5, 2, 1, "", "aggregate_results"], [5, 2, 1, "", "run_baseline_trial"], [5, 2, 1, "", "run_experiment"], [5, 2, 1, "", "write_trial_result"]], "experiments.experiments.Experiment": [[6, 2, 1, "", "__init__"], [6, 2, 1, "", "__repr__"], [6, 2, 1, "", "aggregate_results"], [6, 2, 1, "", "write_trial_result"]], "experiments.experiments.FairlearnExperiment": [[7, 2, 1, "", "__init__"], [7, 2, 1, "", "__repr__"], [7, 2, 1, "", "aggregate_results"], [7, 2, 1, "", "evaluate_constraint_function"], [7, 2, 1, "", "get_fairlearn_predictions"], [7, 2, 1, "", "run_experiment"], [7, 2, 1, "", "run_fairlearn_trial"], [7, 2, 1, "", "write_trial_result"]], "experiments.experiments.SeldonianExperiment": [[8, 2, 1, "", "__init__"], [8, 2, 1, "", "__repr__"], [8, 2, 1, "", "aggregate_results"], [8, 2, 1, "", "evaluate_constraint_functions"], [8, 2, 1, "", "run_QSA_trial"], [8, 2, 1, "", "run_experiment"], [8, 2, 1, "", "write_trial_result"]], "experiments.generate_plots": [[10, 1, 1, "", "PlotGenerator"], [11, 1, 1, "", "RLPlotGenerator"], [12, 1, 1, "", "SupervisedPlotGenerator"]], "experiments.generate_plots.PlotGenerator": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "__repr__"], [10, 2, 1, "", "make_plots"]], "experiments.generate_plots.RLPlotGenerator": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "__repr__"], [11, 2, 1, "", "make_plots"], [11, 2, 1, "", "run_seldonian_experiment"]], "experiments.generate_plots.SupervisedPlotGenerator": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "__repr__"], [12, 2, 1, "", "make_plots"], [12, 2, 1, "", "run_baseline_experiment"], [12, 2, 1, "", "run_fairlearn_experiment"], [12, 2, 1, "", "run_seldonian_experiment"]], "experiments.utils": [[14, 3, 1, "", "MSE"], [15, 3, 1, "", "batch_predictions"], [16, 3, 1, "", "generate_episodes_and_calc_J"], [17, 3, 1, "", "generate_resampled_datasets"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "titleterms": {"experi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20], "baselin": [1, 2, 3, 20], "random_classifi": [2, 3], "weightedrandomclassifiermodel": 3, "baselineexperi": 5, "fairlearnexperi": 7, "seldonianexperi": 8, "generate_plot": [9, 10, 11, 12], "plotgener": 10, "rlplotgener": 11, "supervisedplotgener": 12, "util": [13, 14, 15, 16, 17], "mse": 14, "batch_predict": 15, "generate_episodes_and_calc_j": 16, "generate_resampled_dataset": 17, "api": 18, "seldonian": [19, 20], "document": 19, "tabl": 19, "content": 19, "overview": 20, "three": 20, "plot": 20, "gener": 20, "spec": 20, "object": 20, "n_trial": 20, "data_frac": 20, "datagen_method": 20, "n_worker": 20, "perf_eval_fn": 20, "perf_eval_kwarg": 20, "constraint_eval_fn": 20, "constraint_eval_kwarg": 20, "results_dir": 20, "file": 20, "an": 20}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"experiments": [[0, "module-experiments"]], "experiments.baselines": [[1, "module-experiments.baselines"]], "experiments.baselines.random_classifiers": [[2, "module-experiments.baselines.random_classifiers"]], "experiments.baselines.random_classifiers.WeightedRandomClassifierModel": [[3, "experiments-baselines-random-classifiers-weightedrandomclassifiermodel"]], "experiments.experiments": [[4, "module-experiments.experiments"]], "experiments.experiments.BaselineExperiment": [[5, "experiments-experiments-baselineexperiment"]], "experiments.experiments.Experiment": [[6, "experiments-experiments-experiment"]], "experiments.experiments.FairlearnExperiment": [[7, "experiments-experiments-fairlearnexperiment"]], "experiments.experiments.SeldonianExperiment": [[8, "experiments-experiments-seldonianexperiment"]], "experiments.generate_plots": [[9, "module-experiments.generate_plots"]], "experiments.generate_plots.PlotGenerator": [[10, "experiments-generate-plots-plotgenerator"]], "experiments.generate_plots.RLPlotGenerator": [[11, "experiments-generate-plots-rlplotgenerator"]], "experiments.generate_plots.SupervisedPlotGenerator": [[12, "experiments-generate-plots-supervisedplotgenerator"]], "experiments.utils": [[13, "module-experiments.utils"]], "experiments.utils.MSE": [[14, "experiments-utils-mse"]], "experiments.utils.batch_predictions": [[15, "experiments-utils-batch-predictions"]], "experiments.utils.generate_episodes_and_calc_J": [[16, "experiments-utils-generate-episodes-and-calc-j"]], "experiments.utils.generate_resampled_datasets": [[17, "experiments-utils-generate-resampled-datasets"]], "API": [[18, "api"]], "Seldonian Experiments documentation": [[19, "seldonian-experiments-documentation"]], "Table of contents": [[19, "table-of-contents"]], "Overview": [[20, "overview"]], "Seldonian experiments": [[20, "seldonian-experiments"]], "Three Plots": [[20, "three-plots"]], "Plot generator": [[20, "plot-generator"]], "Spec object": [[20, "spec-object"]], "n_trials": [[20, "n-trials"]], "data_fracs": [[20, "data-fracs"]], "datagen_method": [[20, "datagen-method"]], "n_workers": [[20, "n-workers"]], "perf_eval_fn": [[20, "perf-eval-fn"]], "perf_eval_kwargs": [[20, "perf-eval-kwargs"]], "constraint_eval_fns": [[20, "constraint-eval-fns"]], "constraint_eval_kwargs": [[20, "constraint-eval-kwargs"]], "results_dir": [[20, "results-dir"]], "Baselines": [[20, "baselines"]], "Files generated in an experiment": [[20, "files-generated-in-an-experiment"]]}, "indexentries": {"experiments": [[0, "module-experiments"]], "module": [[0, "module-experiments"], [1, "module-experiments.baselines"], [2, "module-experiments.baselines.random_classifiers"], [4, "module-experiments.experiments"], [9, "module-experiments.generate_plots"], [13, "module-experiments.utils"]], "experiments.baselines": [[1, "module-experiments.baselines"]], "experiments.baselines.random_classifiers": [[2, "module-experiments.baselines.random_classifiers"]], "weightedrandomclassifiermodel (class in experiments.baselines.random_classifiers)": [[3, "experiments.baselines.random_classifiers.WeightedRandomClassifierModel"]], "__init__() (weightedrandomclassifiermodel method)": [[3, "experiments.baselines.random_classifiers.WeightedRandomClassifierModel.__init__"]], "__repr__() (weightedrandomclassifiermodel method)": [[3, "experiments.baselines.random_classifiers.WeightedRandomClassifierModel.__repr__"]], "predict() (weightedrandomclassifiermodel method)": [[3, "experiments.baselines.random_classifiers.WeightedRandomClassifierModel.predict"]], "experiments.experiments": [[4, "module-experiments.experiments"]], "baselineexperiment (class in experiments.experiments)": [[5, "experiments.experiments.BaselineExperiment"]], "__init__() (baselineexperiment method)": [[5, "experiments.experiments.BaselineExperiment.__init__"]], "__repr__() (baselineexperiment method)": [[5, "experiments.experiments.BaselineExperiment.__repr__"]], "aggregate_results() (baselineexperiment method)": [[5, "experiments.experiments.BaselineExperiment.aggregate_results"]], "run_baseline_trial() (baselineexperiment method)": [[5, "experiments.experiments.BaselineExperiment.run_baseline_trial"]], "run_experiment() (baselineexperiment method)": [[5, "experiments.experiments.BaselineExperiment.run_experiment"]], "write_trial_result() (baselineexperiment method)": [[5, "experiments.experiments.BaselineExperiment.write_trial_result"]], "experiment (class in experiments.experiments)": [[6, "experiments.experiments.Experiment"]], "__init__() (experiment method)": [[6, "experiments.experiments.Experiment.__init__"]], "__repr__() (experiment method)": [[6, "experiments.experiments.Experiment.__repr__"]], "aggregate_results() (experiment method)": [[6, "experiments.experiments.Experiment.aggregate_results"]], "write_trial_result() (experiment method)": [[6, "experiments.experiments.Experiment.write_trial_result"]], "fairlearnexperiment (class in experiments.experiments)": [[7, "experiments.experiments.FairlearnExperiment"]], "__init__() (fairlearnexperiment method)": [[7, "experiments.experiments.FairlearnExperiment.__init__"]], "__repr__() (fairlearnexperiment method)": [[7, "experiments.experiments.FairlearnExperiment.__repr__"]], "aggregate_results() (fairlearnexperiment method)": [[7, "experiments.experiments.FairlearnExperiment.aggregate_results"]], "evaluate_constraint_function() (fairlearnexperiment method)": [[7, "experiments.experiments.FairlearnExperiment.evaluate_constraint_function"]], "get_fairlearn_predictions() (fairlearnexperiment method)": [[7, "experiments.experiments.FairlearnExperiment.get_fairlearn_predictions"]], "run_experiment() (fairlearnexperiment method)": [[7, "experiments.experiments.FairlearnExperiment.run_experiment"]], "run_fairlearn_trial() (fairlearnexperiment method)": [[7, "experiments.experiments.FairlearnExperiment.run_fairlearn_trial"]], "write_trial_result() (fairlearnexperiment method)": [[7, "experiments.experiments.FairlearnExperiment.write_trial_result"]], "seldonianexperiment (class in experiments.experiments)": [[8, "experiments.experiments.SeldonianExperiment"]], "__init__() (seldonianexperiment method)": [[8, "experiments.experiments.SeldonianExperiment.__init__"]], "__repr__() (seldonianexperiment method)": [[8, "experiments.experiments.SeldonianExperiment.__repr__"]], "aggregate_results() (seldonianexperiment method)": [[8, "experiments.experiments.SeldonianExperiment.aggregate_results"]], "evaluate_constraint_functions() (seldonianexperiment method)": [[8, "experiments.experiments.SeldonianExperiment.evaluate_constraint_functions"]], "run_qsa_trial() (seldonianexperiment method)": [[8, "experiments.experiments.SeldonianExperiment.run_QSA_trial"]], "run_experiment() (seldonianexperiment method)": [[8, "experiments.experiments.SeldonianExperiment.run_experiment"]], "write_trial_result() (seldonianexperiment method)": [[8, "experiments.experiments.SeldonianExperiment.write_trial_result"]], "experiments.generate_plots": [[9, "module-experiments.generate_plots"]], "plotgenerator (class in experiments.generate_plots)": [[10, "experiments.generate_plots.PlotGenerator"]], "__init__() (plotgenerator method)": [[10, "experiments.generate_plots.PlotGenerator.__init__"]], "__repr__() (plotgenerator method)": [[10, "experiments.generate_plots.PlotGenerator.__repr__"]], "make_plots() (plotgenerator method)": [[10, "experiments.generate_plots.PlotGenerator.make_plots"]], "rlplotgenerator (class in experiments.generate_plots)": [[11, "experiments.generate_plots.RLPlotGenerator"]], "__init__() (rlplotgenerator method)": [[11, "experiments.generate_plots.RLPlotGenerator.__init__"]], "__repr__() (rlplotgenerator method)": [[11, "experiments.generate_plots.RLPlotGenerator.__repr__"]], "make_plots() (rlplotgenerator method)": [[11, "experiments.generate_plots.RLPlotGenerator.make_plots"]], "run_seldonian_experiment() (rlplotgenerator method)": [[11, "experiments.generate_plots.RLPlotGenerator.run_seldonian_experiment"]], "supervisedplotgenerator (class in experiments.generate_plots)": [[12, "experiments.generate_plots.SupervisedPlotGenerator"]], "__init__() (supervisedplotgenerator method)": [[12, "experiments.generate_plots.SupervisedPlotGenerator.__init__"]], "__repr__() (supervisedplotgenerator method)": [[12, "experiments.generate_plots.SupervisedPlotGenerator.__repr__"]], "make_plots() (supervisedplotgenerator method)": [[12, "experiments.generate_plots.SupervisedPlotGenerator.make_plots"]], "run_baseline_experiment() (supervisedplotgenerator method)": [[12, "experiments.generate_plots.SupervisedPlotGenerator.run_baseline_experiment"]], "run_fairlearn_experiment() (supervisedplotgenerator method)": [[12, "experiments.generate_plots.SupervisedPlotGenerator.run_fairlearn_experiment"]], "run_seldonian_experiment() (supervisedplotgenerator method)": [[12, "experiments.generate_plots.SupervisedPlotGenerator.run_seldonian_experiment"]], "experiments.utils": [[13, "module-experiments.utils"]], "mse() (in module experiments.utils)": [[14, "experiments.utils.MSE"]], "batch_predictions() (in module experiments.utils)": [[15, "experiments.utils.batch_predictions"]], "generate_episodes_and_calc_j() (in module experiments.utils)": [[16, "experiments.utils.generate_episodes_and_calc_J"]], "generate_resampled_datasets() (in module experiments.utils)": [[17, "experiments.utils.generate_resampled_datasets"]]}})