Search.setIndex({"docnames": ["_autosummary/experiments", "_autosummary/experiments.base_example", "_autosummary/experiments.base_example.BaseExample", "_autosummary/experiments.baselines", "_autosummary/experiments.baselines.random_classifiers", "_autosummary/experiments.baselines.random_classifiers.WeightedRandomClassifierModel", "_autosummary/experiments.experiments", "_autosummary/experiments.experiments.BaselineExperiment", "_autosummary/experiments.experiments.Experiment", "_autosummary/experiments.experiments.FairlearnExperiment", "_autosummary/experiments.experiments.SeldonianExperiment", "_autosummary/experiments.generate_plots", "_autosummary/experiments.generate_plots.PlotGenerator", "_autosummary/experiments.generate_plots.RLPlotGenerator", "_autosummary/experiments.generate_plots.SupervisedPlotGenerator", "_autosummary/experiments.utils", "_autosummary/experiments.utils.MSE", "_autosummary/experiments.utils.batch_predictions", "_autosummary/experiments.utils.deterministic_accuracy", "_autosummary/experiments.utils.generate_episodes_and_calc_J", "_autosummary/experiments.utils.generate_resampled_datasets", "_autosummary/experiments.utils.probabilistic_accuracy", "api", "index", "overview"], "filenames": ["_autosummary/experiments.rst", "_autosummary/experiments.base_example.rst", "_autosummary/experiments.base_example.BaseExample.rst", "_autosummary/experiments.baselines.rst", "_autosummary/experiments.baselines.random_classifiers.rst", "_autosummary/experiments.baselines.random_classifiers.WeightedRandomClassifierModel.rst", "_autosummary/experiments.experiments.rst", "_autosummary/experiments.experiments.BaselineExperiment.rst", "_autosummary/experiments.experiments.Experiment.rst", "_autosummary/experiments.experiments.FairlearnExperiment.rst", "_autosummary/experiments.experiments.SeldonianExperiment.rst", "_autosummary/experiments.generate_plots.rst", "_autosummary/experiments.generate_plots.PlotGenerator.rst", "_autosummary/experiments.generate_plots.RLPlotGenerator.rst", "_autosummary/experiments.generate_plots.SupervisedPlotGenerator.rst", "_autosummary/experiments.utils.rst", "_autosummary/experiments.utils.MSE.rst", "_autosummary/experiments.utils.batch_predictions.rst", "_autosummary/experiments.utils.deterministic_accuracy.rst", "_autosummary/experiments.utils.generate_episodes_and_calc_J.rst", "_autosummary/experiments.utils.generate_resampled_datasets.rst", "_autosummary/experiments.utils.probabilistic_accuracy.rst", "api.rst", "index.rst", "overview.rst"], "titles": ["experiments", "experiments.base_example", "experiments.base_example.BaseExample", "experiments.baselines", "experiments.baselines.random_classifiers", "experiments.baselines.random_classifiers.WeightedRandomClassifierModel", "experiments.experiments", "experiments.experiments.BaselineExperiment", "experiments.experiments.Experiment", "experiments.experiments.FairlearnExperiment", "experiments.experiments.SeldonianExperiment", "experiments.generate_plots", "experiments.generate_plots.PlotGenerator", "experiments.generate_plots.RLPlotGenerator", "experiments.generate_plots.SupervisedPlotGenerator", "experiments.utils", "experiments.utils.MSE", "experiments.utils.batch_predictions", "experiments.utils.deterministic_accuracy", "experiments.utils.generate_episodes_and_calc_J", "experiments.utils.generate_resampled_datasets", "experiments.utils.probabilistic_accuracy", "API", "Seldonian Experiments documentation", "Overview"], "terms": {"modul": [0, 1, 3, 6, 11], "run": [0, 1, 2, 6, 7, 8, 9, 10, 12, 13, 14, 23, 24], "seldonian": [0, 6, 7, 10, 12, 13, 14], "gener": [0, 12, 13, 14, 19, 20, 23], "three": [0, 2, 11, 12, 13, 14, 23], "plot": [0, 2, 11, 12, 13, 14, 23], "contain": [1, 24], "base": [1, 2, 5, 7, 8, 9, 10, 12, 13, 14], "class": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 24], "exampl": [1, 2, 24], "spec": [2, 12, 13, 14, 23], "object": [2, 8, 12, 13, 14, 23], "__init__": [2, 5, 7, 8, 9, 10, 12, 13, 14, 23], "__repr__": [2, 5, 7, 8, 9, 10, 12, 13, 14, 23], "return": [2, 5, 7, 8, 9, 10, 12, 13, 14, 19, 24], "repr": [2, 5, 7, 8, 9, 10, 12, 13, 14], "self": [2, 5, 7, 8, 9, 10, 12, 13, 14], "method": [2, 5, 7, 8, 9, 10, 12, 13, 14, 24], "n_trial": [2, 12, 13, 14, 20, 23], "data_frac": [2, 7, 9, 10, 12, 13, 14, 23], "results_dir": [2, 7, 8, 9, 10, 12, 13, 14, 23], "perf_eval_fn": [2, 12, 13, 14, 23], "n_worker": [2, 12, 13, 14, 23], "1": [2, 9, 12, 18, 21, 24], "datagen_method": [2, 12, 13, 14, 23], "resampl": [2, 12, 13, 14, 20, 24], "verbos": [2, 7, 8, 9, 10, 13, 14], "fals": [2, 7, 8, 9, 10, 13, 14, 24], "baselin": [2, 7, 8, 14, 23], "include_fairlearn_model": 2, "fairlearn_kwarg": 2, "performance_label": [2, 12, 13, 14], "perform": [2, 12, 13, 14, 23, 24], "performance_yscal": [2, 12, 13, 14], "linear": [2, 12, 13, 14], "plot_savenam": 2, "none": [2, 12, 13, 14], "plot_fonts": 2, "12": [2, 12, 13, 14], "legend_fonts": [2, 12, 13, 14], "8": [2, 12, 13, 14], "thi": [2, 23, 24], "ani": [2, 7, 8, 9, 10], "model": [2, 7, 8, 9, 10, 12, 13, 14, 17, 18, 21, 24], "includ": [2, 24], "paramet": [2, 5, 7, 8, 9, 10, 12, 13, 14, 16, 18, 20, 21, 24], "first": [2, 24], "Then": 2, "produc": [2, 24], "weight": [5, 9, 10], "classificationmodel": 5, "implement": [5, 24], "classifi": [5, 24], "alwai": 5, "predict": [5, 9, 16, 18, 21, 23, 24], "posit": [5, 24], "ha": [5, 24], "prob": 5, "0": [5, 18, 24], "5": [5, 24], "regardless": [5, 24], "input": [5, 20, 24], "theta": [5, 12, 13, 14], "x": 5, "probabl": [5, 21, 24], "have": [5, 24], "label": [5, 9, 12, 13, 14, 16, 18, 20, 21], "numpi": [5, 10], "ndarrai": [5, 10], "The": [5, 7, 8, 9, 10, 12, 13, 14, 18, 20, 23, 24], "featur": [5, 9, 20], "each": [5, 7, 8, 9, 10, 12, 13, 14, 20, 24], "observ": 5, "type": [5, 19, 24], "float": [5, 7, 9, 10, 12, 13, 14, 19], "model_nam": [7, 8, 10, 14, 24], "against": [7, 24], "which": [7, 8, 9, 10, 12, 13, 14, 20, 24], "compar": [7, 24], "str": [7, 8, 9, 10, 12, 13, 14, 20], "string": [7, 8, 10], "name": [7, 8, 9, 10, 12, 13, 14, 24], "e": [7, 8, 12, 13, 14, 20, 24], "g": [7, 8, 12, 13, 14, 24], "logistic_regress": [7, 8, 24], "parent": [7, 8, 9, 10, 20], "directori": [7, 8, 9, 10, 12, 13, 14, 20, 24], "save": [7, 8, 9, 10, 12, 13, 14, 20, 24], "experiment": [7, 8, 9, 10], "result": [7, 8, 9, 10, 12, 13, 14, 24], "aggregate_result": [7, 8, 9, 10, 23], "kwarg": [7, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 21], "group": [7, 8, 9, 10], "togeth": [7, 8, 9, 10], "data": [7, 8, 9, 10, 12, 13, 14, 24], "trial": [7, 8, 9, 10, 12, 13, 14, 20, 24], "file": [7, 8, 9, 10, 12, 13, 14, 23], "singl": [7, 8, 9, 10, 24], "csv": [7, 8, 9, 10, 20, 24], "run_baseline_tri": [7, 23], "trial_i": [7, 9, 10, 24], "current": [7, 10, 24], "onli": [7, 10, 18, 24], "support": [7, 24], "supervis": [7, 14, 20, 24], "learn": [7, 20, 24], "fraction": [7, 9, 10, 12, 13, 14, 18, 24], "overal": [7, 9, 10, 12, 13, 14], "dataset": [7, 9, 10, 12, 13, 14, 20, 24], "size": [7, 9, 10, 12, 13, 14, 24], "us": [7, 9, 10, 12, 13, 14, 15, 18, 20, 21, 23, 24], "int": [7, 9, 10, 12, 13, 14, 20], "index": [7, 9, 10], "run_experi": [7, 9, 10, 23], "write_trial_result": [7, 8, 9, 10, 23], "colnam": [7, 8, 9, 10], "trial_dir": [7, 8, 9, 10], "write": [7, 8, 9, 10], "out": [7, 8, 9, 10], "from": [7, 8, 9, 10, 12, 13, 14, 20, 24], "list": [7, 8, 9, 10, 12, 13, 14, 19, 24], "inform": [7, 8, 9, 10], "item": [7, 8, 9, 10], "These": [7, 8, 9, 10], "compris": [7, 8, 9, 10, 24], "header": [7, 8, 9, 10], "bool": [7, 8, 9, 10, 13, 14], "true": [7, 8, 9, 10, 12, 13, 14, 16, 18, 21, 24], "print": [7, 8, 9, 10], "filenam": [7, 8, 9, 10, 12, 13, 14], "fairlearn_epsilon_constraint": [9, 14], "fairlearn": [9, 14, 24], "valu": [9, 12, 13, 14, 24], "epsilon": 9, "threshold": [9, 24], "constraint": [9, 10, 12, 13, 14, 24], "evaluate_constraint_funct": [9, 10, 23], "y_pred": [9, 16, 18, 21], "test_label": 9, "fairlearn_constraint_nam": [9, 14], "epsilon_ev": 9, "eval_method": 9, "nativ": 9, "sensitive_featur": 9, "evalu": [9, 10, 12, 13, 14, 23, 24], "function": [9, 10, 12, 13, 14, 15, 20, 24], "1d": 9, "arrai": [9, 16, 18, 21, 24], "same": [9, 20, 24], "shape": [9, 20], "default": [9, 12, 13, 14, 24], "two": [9, 24], "option": [9, 10, 12, 13, 14, 20, 24], "column": 9, "ar": [9, 12, 13, 14, 20, 23, 24], "consid": [9, 24], "sensit": [9, 20], "get_fairlearn_predict": [9, 23], "mitig": 9, "x_test_fairlearn": 9, "get": 9, "consist": 9, "potenti": 9, "more": [9, 24], "than": [9, 24], "one": [9, 24], "predictor": 9, "For": [9, 24], "non": 9, "zero": 9, "we": [9, 24], "figur": [9, 24], "how": [9, 24], "mani": [9, 24], "point": [9, 24], "normal": 9, "across": 9, "all": [9, 12, 24], "test": [9, 24], "run_fairlearn_tri": [9, 23], "i": [10, 12, 13, 14, 18, 19, 20, 21, 23, 24], "qsa": 10, "quasi": [10, 24], "algorithm": [10, 12, 13, 14, 23, 24], "solut": [10, 12, 13, 14, 17, 24], "constraint_eval_fn": [10, 12, 13, 14, 23], "constraint_eval_kwarg": [10, 12, 13, 14, 23], "helper": 10, "determin": [10, 24], "whether": [10, 13, 14, 24], "wa": [10, 24], "safe": [10, 24], "ground": [10, 12, 13, 14, 19, 24], "truth": [10, 12, 13, 14, 19, 24], "found": [10, 24], "dure": 10, "candid": [10, 12, 13, 14], "select": [10, 12, 13, 14], "given": [10, 24], "an": [10, 12, 13, 14, 23], "empti": [10, 12, 13, 14, 24], "pars": [10, 12, 13, 14, 24], "tree": [10, 12, 13, 14, 24], "dict": [10, 12, 13, 14], "keyword": [10, 12, 13, 14], "argument": [10, 12, 13, 14, 24], "pass": [10, 12, 13, 14, 24], "run_qsa_tri": [10, 23], "make": [11, 12, 13, 14, 20, 23, 24], "perf_eval_kwarg": [12, 13, 14, 23], "batch_epoch_dict": [12, 13, 14], "2": 12, "rate": [12, 21, 24], "3": [12, 24], "failur": [12, 24], "v": 12, "amount": [12, 24], "specif": [12, 13, 14], "number": [12, 13, 14, 20, 24], "time": [12, 13, 14, 24], "error": [12, 13, 14, 16, 21], "bar": [12, 13, 14], "proport": [12, 13, 14], "horizont": [12, 13, 14, 24], "axi": [12, 13, 14, 24], "obtain": [12, 13, 14, 24], "signatur": [12, 13, 14], "func": [12, 13, 14], "where": [12, 13, 14, 19], "worker": [12, 13, 14, 24], "multiprocess": [12, 13, 14], "If": [12, 13, 14, 23, 24], "provid": [12, 13, 14, 24], "extra": [12, 13, 14], "instruct": [12, 13, 14], "batch": [12, 13, 14], "n_epoch": [12, 13, 14], "frac": [12, 13, 14, 24], "make_plot": [12, 13, 14, 23, 24], "model_label_dict": [12, 13, 14], "fontsiz": [12, 13, 14], "accuraci": [12, 13, 14, 24], "performance_ylim": [12, 13, 14], "marker_s": [12, 13, 14], "20": [12, 13, 14], "save_format": [12, 13, 14], "pdf": [12, 13, 14], "show_titl": [12, 13, 14], "custom_titl": [12, 13, 14], "include_legend": [12, 13, 14], "savenam": [12, 13, 14], "dictionari": [12, 13, 14, 24], "kei": [12, 13, 14], "you": [12, 13, 14, 23, 24], "want": [12, 13, 14, 24], "shown": [12, 13, 14, 24], "legend": [12, 13, 14], "font": [12, 13, 14], "text": [12, 13, 14], "y": [12, 13, 14, 16, 18, 21], "path": [12, 13, 14], "disk": [12, 13, 14], "hyperparameter_and_setting_dict": 13, "plotgener": [13, 14, 23], "rl": [13, 24], "run_seldonian_experi": [13, 14, 23, 24], "attribut": [13, 14, 20], "assign": [13, 14], "displai": [13, 14], "stdout": [13, 14], "while": [13, 14, 24], "run_baseline_experi": [14, 23, 24], "run_fairlearn_experi": [14, 23], "fairlearn_sensitive_feature_nam": 14, "fairlearn_epsilon_ev": 14, "fairlearn_eval_kwarg": 14, "librari": [14, 15, 23, 24], "rest": 15, "calcul": [16, 19], "sampl": [16, 18, 24], "mean": 16, "squar": 16, "x_test": 17, "correct": 18, "best": [18, 21], "when": [18, 21, 24], "output": [18, 21], "expect": 19, "discount": 19, "episod": [19, 24], "j": 19, "save_dir": 20, "replac": [20, 24], "creat": [20, 24], "version": 20, "panda": 20, "datafram": 20, "origin": [20, 24], "file_format": 20, "format": 20, "pkl": [20, 24], "welcom": 23, "design": 23, "help": [23, 24], "safeti": [23, 24], "sourc": 23, "code": [23, 24], "host": 23, "github": 23, "heavi": 23, "engin": [23, 24], "core": [23, 24], "complet": 23, "new": [23, 24], "see": [23, 24], "overview": 23, "api": [23, 24], "base_exampl": 23, "baseexampl": 23, "random_classifi": 23, "weightedrandomclassifiermodel": 23, "baselineexperi": [23, 24], "fairlearnexperi": [23, 24], "seldonianexperi": 23, "generate_plot": 23, "rlplotgener": [23, 24], "supervisedplotgener": [23, 24], "util": 23, "mse": 23, "batch_predict": 23, "deterministic_accuraci": 23, "generate_episodes_and_calc_j": 23, "generate_resampled_dataset": 23, "probabilistic_accuraci": 23, "document": 24, "explain": 24, "sa": 24, "detail": 24, "descript": 24, "what": 24, "machin": 24, "toolkit": 24, "homepag": 24, "heavili": 24, "depend": 24, "A": 24, "wai": 24, "It": 24, "involv": 24, "increas": 24, "primari": 24, "satisfi": 24, "behavior": 24, "sometim": 24, "come": 24, "cost": 24, "reduc": 24, "can": 24, "understand": 24, "trade": 24, "off": 24, "cannot": 24, "No": 24, "some": 24, "despit": 24, "quantiti": 24, "assum": 24, "access": 24, "real": 24, "world": 24, "problem": 24, "set": 24, "typic": 24, "doe": 24, "instead": 24, "adopt": 24, "strategi": 24, "bootstrap": 24, "order": 24, "approxim": 24, "show": 24, "gpa": 24, "discuss": 24, "scienc": 24, "paper": 24, "top": 24, "panel": 24, "left": 24, "middl": 24, "right": 24, "train": 24, "thoma": 24, "et": 24, "al": 24, "2019": 24, "fair": 24, "case": 24, "dispar": 24, "impact": 24, "classif": 24, "green": 24, "dot": 24, "dash": 24, "sever": 24, "standard": 24, "ml": 24, "red": 24, "do": 24, "also": 24, "awar": 24, "blue": 24, "magenta": 24, "In": 24, "criteria": 24, "black": 24, "line": 24, "repres": 24, "confid": 24, "delta": 24, "05": 24, "regim": 24, "your": 24, "reinforc": 24, "either": 24, "both": 24, "describ": 24, "here": 24, "follow": 24, "requir": 24, "often": 24, "interfac": 24, "everyth": 24, "need": 24, "underli": 24, "etc": 24, "estim": 24, "uncertainti": 24, "multipli": 24, "within": 24, "differ": 24, "dimens": 24, "At": 24, "generate_episod": 24, "polici": 24, "parallel": 24, "multipl": 24, "avail": 24, "becaus": 24, "independ": 24, "other": 24, "embarrassingli": 24, "program": 24, "less": 24, "max": 24, "specifi": 24, "must": 24, "explicitli": 24, "nsf": 24, "them": 24, "built": 24, "custom": 24, "length": 24, "call": 24, "plot_gener": 24, "easi": 24, "develop": 24, "easili": 24, "add": 24, "own": 24, "ad": 24, "alreadi": 24, "logist": 24, "regress": 24, "random": 24, "p": 24, "everi": 24, "abov": 24, "would": 24, "simpli": 24, "block": 24, "like": 24, "That": 24, "thei": 24, "anoth": 24, "narrow": 24, "rang": 24, "progress": 24, "structur": 24, "insid": 24, "look": 24, "after": 24, "via": 24, "qsa_result": 24, "trial_data": 24, "data_frac_0": 24, "0010_trial_0": 24, "0010_trial_1": 24, "0010_trial_2": 24, "0010_trial_3": 24, "0010_trial_4": 24, "0022_trial_0": 24, "0022_trial_1": 24, "0022_trial_2": 24, "0022_trial_3": 24, "0022_trial_4": 24, "0046_trial_0": 24, "0046_trial_1": 24, "0046_trial_2": 24, "0046_trial_3": 24, "0046_trial_4": 24, "0050_trial_0": 24, "0100_trial_0": 24, "0100_trial_1": 24, "0100_trial_2": 24, "0100_trial_3": 24, "0100_trial_4": 24, "0215_trial_0": 24, "0215_trial_1": 24, "0215_trial_2": 24, "0215_trial_3": 24, "0215_trial_4": 24, "0464_trial_0": 24, "0464_trial_1": 24, "0464_trial_2": 24, "0464_trial_3": 24, "0464_trial_4": 24, "1000_trial_0": 24, "1000_trial_1": 24, "1000_trial_2": 24, "1000_trial_3": 24, "1000_trial_4": 24, "2154_trial_0": 24, "2154_trial_1": 24, "2154_trial_2": 24, "2154_trial_3": 24, "2154_trial_4": 24, "4642_trial_0": 24, "4642_trial_1": 24, "4642_trial_2": 24, "4642_trial_3": 24, "4642_trial_4": 24, "data_frac_1": 24, "0000_trial_0": 24, "0000_trial_1": 24, "0000_trial_2": 24, "0000_trial_3": 24, "0000_trial_4": 24, "resampled_dataset": 24, "resampled_data_trial0": 24, "resampled_data_trial1": 24, "resampled_data_trial2": 24, "resampled_data_trial3": 24, "resampled_data_trial4": 24, "np": 24, "logspac": 24, "10": 24, "log": 24, "space": 24, "start": 24, "001": 24, "end": 24, "As": 24, "50": 24, "boolean": 24, "flag": 24, "fail": 24, "content": 24, "6105_trial36": 24, "passed_safeti": 24, "6105402296585326": 24, "36": 24, "6746247014792527": 24, "level": 24, "folder": 24, "_result": 24, "logistic_regression_result": 24, "its": 24, "separ": 24, "curv": 24, "autom": 24, "loan": 24, "approv": 24, "system": 24, "tutori": 24}, "objects": {"": [[0, 0, 0, "-", "experiments"]], "experiments": [[1, 0, 0, "-", "base_example"], [3, 0, 0, "-", "baselines"], [6, 0, 0, "-", "experiments"], [11, 0, 0, "-", "generate_plots"], [15, 0, 0, "-", "utils"]], "experiments.base_example": [[2, 1, 1, "", "BaseExample"]], "experiments.base_example.BaseExample": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "__repr__"], [2, 2, 1, "", "run"]], "experiments.baselines": [[4, 0, 0, "-", "random_classifiers"]], "experiments.baselines.random_classifiers": [[5, 1, 1, "", "WeightedRandomClassifierModel"]], "experiments.baselines.random_classifiers.WeightedRandomClassifierModel": [[5, 2, 1, "", "__init__"], [5, 2, 1, "", "__repr__"], [5, 2, 1, "", "predict"]], "experiments.experiments": [[7, 1, 1, "", "BaselineExperiment"], [8, 1, 1, "", "Experiment"], [9, 1, 1, "", "FairlearnExperiment"], [10, 1, 1, "", "SeldonianExperiment"]], "experiments.experiments.BaselineExperiment": [[7, 2, 1, "", "__init__"], [7, 2, 1, "", "__repr__"], [7, 2, 1, "", "aggregate_results"], [7, 2, 1, "", "run_baseline_trial"], [7, 2, 1, "", "run_experiment"], [7, 2, 1, "", "write_trial_result"]], "experiments.experiments.Experiment": [[8, 2, 1, "", "__init__"], [8, 2, 1, "", "__repr__"], [8, 2, 1, "", "aggregate_results"], [8, 2, 1, "", "write_trial_result"]], "experiments.experiments.FairlearnExperiment": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "__repr__"], [9, 2, 1, "", "aggregate_results"], [9, 2, 1, "", "evaluate_constraint_function"], [9, 2, 1, "", "get_fairlearn_predictions"], [9, 2, 1, "", "run_experiment"], [9, 2, 1, "", "run_fairlearn_trial"], [9, 2, 1, "", "write_trial_result"]], "experiments.experiments.SeldonianExperiment": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "__repr__"], [10, 2, 1, "", "aggregate_results"], [10, 2, 1, "", "evaluate_constraint_functions"], [10, 2, 1, "", "run_QSA_trial"], [10, 2, 1, "", "run_experiment"], [10, 2, 1, "", "write_trial_result"]], "experiments.generate_plots": [[12, 1, 1, "", "PlotGenerator"], [13, 1, 1, "", "RLPlotGenerator"], [14, 1, 1, "", "SupervisedPlotGenerator"]], "experiments.generate_plots.PlotGenerator": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "__repr__"], [12, 2, 1, "", "make_plots"]], "experiments.generate_plots.RLPlotGenerator": [[13, 2, 1, "", "__init__"], [13, 2, 1, "", "__repr__"], [13, 2, 1, "", "make_plots"], [13, 2, 1, "", "run_seldonian_experiment"]], "experiments.generate_plots.SupervisedPlotGenerator": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "__repr__"], [14, 2, 1, "", "make_plots"], [14, 2, 1, "", "run_baseline_experiment"], [14, 2, 1, "", "run_fairlearn_experiment"], [14, 2, 1, "", "run_seldonian_experiment"]], "experiments.utils": [[16, 3, 1, "", "MSE"], [17, 3, 1, "", "batch_predictions"], [18, 3, 1, "", "deterministic_accuracy"], [19, 3, 1, "", "generate_episodes_and_calc_J"], [20, 3, 1, "", "generate_resampled_datasets"], [21, 3, 1, "", "probabilistic_accuracy"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "titleterms": {"experi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24], "base_exampl": [1, 2], "baseexampl": 2, "baselin": [3, 4, 5, 24], "random_classifi": [4, 5], "weightedrandomclassifiermodel": 5, "baselineexperi": 7, "fairlearnexperi": 9, "seldonianexperi": 10, "generate_plot": [11, 12, 13, 14], "plotgener": 12, "rlplotgener": 13, "supervisedplotgener": 14, "util": [15, 16, 17, 18, 19, 20, 21], "mse": 16, "batch_predict": 17, "deterministic_accuraci": 18, "generate_episodes_and_calc_j": 19, "generate_resampled_dataset": 20, "probabilistic_accuraci": 21, "api": 22, "seldonian": [23, 24], "document": 23, "tabl": 23, "content": 23, "overview": 24, "three": 24, "plot": 24, "gener": 24, "spec": 24, "object": 24, "n_trial": 24, "data_frac": 24, "datagen_method": 24, "n_worker": 24, "perf_eval_fn": 24, "perf_eval_kwarg": 24, "constraint_eval_fn": 24, "constraint_eval_kwarg": 24, "results_dir": 24, "file": 24, "an": 24}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"experiments": [[0, "module-experiments"]], "experiments.base_example": [[1, "module-experiments.base_example"]], "experiments.base_example.BaseExample": [[2, "experiments-base-example-baseexample"]], "experiments.baselines": [[3, "module-experiments.baselines"]], "experiments.baselines.random_classifiers": [[4, "module-experiments.baselines.random_classifiers"]], "experiments.baselines.random_classifiers.WeightedRandomClassifierModel": [[5, "experiments-baselines-random-classifiers-weightedrandomclassifiermodel"]], "experiments.experiments": [[6, "module-experiments.experiments"]], "experiments.experiments.BaselineExperiment": [[7, "experiments-experiments-baselineexperiment"]], "experiments.experiments.Experiment": [[8, "experiments-experiments-experiment"]], "experiments.experiments.FairlearnExperiment": [[9, "experiments-experiments-fairlearnexperiment"]], "experiments.experiments.SeldonianExperiment": [[10, "experiments-experiments-seldonianexperiment"]], "experiments.generate_plots": [[11, "module-experiments.generate_plots"]], "experiments.generate_plots.PlotGenerator": [[12, "experiments-generate-plots-plotgenerator"]], "experiments.generate_plots.RLPlotGenerator": [[13, "experiments-generate-plots-rlplotgenerator"]], "experiments.generate_plots.SupervisedPlotGenerator": [[14, "experiments-generate-plots-supervisedplotgenerator"]], "experiments.utils": [[15, "module-experiments.utils"]], "experiments.utils.MSE": [[16, "experiments-utils-mse"]], "experiments.utils.batch_predictions": [[17, "experiments-utils-batch-predictions"]], "experiments.utils.deterministic_accuracy": [[18, "experiments-utils-deterministic-accuracy"]], "experiments.utils.generate_episodes_and_calc_J": [[19, "experiments-utils-generate-episodes-and-calc-j"]], "experiments.utils.generate_resampled_datasets": [[20, "experiments-utils-generate-resampled-datasets"]], "experiments.utils.probabilistic_accuracy": [[21, "experiments-utils-probabilistic-accuracy"]], "API": [[22, "api"]], "Seldonian Experiments documentation": [[23, "seldonian-experiments-documentation"]], "Table of contents": [[23, "table-of-contents"]], "Overview": [[24, "overview"]], "Seldonian experiments": [[24, "seldonian-experiments"]], "Three Plots": [[24, "three-plots"]], "Plot generator": [[24, "plot-generator"]], "Spec object": [[24, "spec-object"]], "n_trials": [[24, "n-trials"]], "data_fracs": [[24, "data-fracs"]], "datagen_method": [[24, "datagen-method"]], "n_workers": [[24, "n-workers"]], "perf_eval_fn": [[24, "perf-eval-fn"]], "perf_eval_kwargs": [[24, "perf-eval-kwargs"]], "constraint_eval_fns": [[24, "constraint-eval-fns"]], "constraint_eval_kwargs": [[24, "constraint-eval-kwargs"]], "results_dir": [[24, "results-dir"]], "Baselines": [[24, "baselines"]], "Files generated in an experiment": [[24, "files-generated-in-an-experiment"]]}, "indexentries": {"experiments": [[0, "module-experiments"]], "module": [[0, "module-experiments"], [1, "module-experiments.base_example"], [3, "module-experiments.baselines"], [4, "module-experiments.baselines.random_classifiers"], [6, "module-experiments.experiments"], [11, "module-experiments.generate_plots"], [15, "module-experiments.utils"]], "experiments.base_example": [[1, "module-experiments.base_example"]], "baseexample (class in experiments.base_example)": [[2, "experiments.base_example.BaseExample"]], "__init__() (baseexample method)": [[2, "experiments.base_example.BaseExample.__init__"]], "__repr__() (baseexample method)": [[2, "experiments.base_example.BaseExample.__repr__"]], "run() (baseexample method)": [[2, "experiments.base_example.BaseExample.run"]], "experiments.baselines": [[3, "module-experiments.baselines"]], "experiments.baselines.random_classifiers": [[4, "module-experiments.baselines.random_classifiers"]], "weightedrandomclassifiermodel (class in experiments.baselines.random_classifiers)": [[5, "experiments.baselines.random_classifiers.WeightedRandomClassifierModel"]], "__init__() (weightedrandomclassifiermodel method)": [[5, "experiments.baselines.random_classifiers.WeightedRandomClassifierModel.__init__"]], "__repr__() (weightedrandomclassifiermodel method)": [[5, "experiments.baselines.random_classifiers.WeightedRandomClassifierModel.__repr__"]], "predict() (weightedrandomclassifiermodel method)": [[5, "experiments.baselines.random_classifiers.WeightedRandomClassifierModel.predict"]], "experiments.experiments": [[6, "module-experiments.experiments"]], "baselineexperiment (class in experiments.experiments)": [[7, "experiments.experiments.BaselineExperiment"]], "__init__() (baselineexperiment method)": [[7, "experiments.experiments.BaselineExperiment.__init__"]], "__repr__() (baselineexperiment method)": [[7, "experiments.experiments.BaselineExperiment.__repr__"]], "aggregate_results() (baselineexperiment method)": [[7, "experiments.experiments.BaselineExperiment.aggregate_results"]], "run_baseline_trial() (baselineexperiment method)": [[7, "experiments.experiments.BaselineExperiment.run_baseline_trial"]], "run_experiment() (baselineexperiment method)": [[7, "experiments.experiments.BaselineExperiment.run_experiment"]], "write_trial_result() (baselineexperiment method)": [[7, "experiments.experiments.BaselineExperiment.write_trial_result"]], "experiment (class in experiments.experiments)": [[8, "experiments.experiments.Experiment"]], "__init__() (experiment method)": [[8, "experiments.experiments.Experiment.__init__"]], "__repr__() (experiment method)": [[8, "experiments.experiments.Experiment.__repr__"]], "aggregate_results() (experiment method)": [[8, "experiments.experiments.Experiment.aggregate_results"]], "write_trial_result() (experiment method)": [[8, "experiments.experiments.Experiment.write_trial_result"]], "fairlearnexperiment (class in experiments.experiments)": [[9, "experiments.experiments.FairlearnExperiment"]], "__init__() (fairlearnexperiment method)": [[9, "experiments.experiments.FairlearnExperiment.__init__"]], "__repr__() (fairlearnexperiment method)": [[9, "experiments.experiments.FairlearnExperiment.__repr__"]], "aggregate_results() (fairlearnexperiment method)": [[9, "experiments.experiments.FairlearnExperiment.aggregate_results"]], "evaluate_constraint_function() (fairlearnexperiment method)": [[9, "experiments.experiments.FairlearnExperiment.evaluate_constraint_function"]], "get_fairlearn_predictions() (fairlearnexperiment method)": [[9, "experiments.experiments.FairlearnExperiment.get_fairlearn_predictions"]], "run_experiment() (fairlearnexperiment method)": [[9, "experiments.experiments.FairlearnExperiment.run_experiment"]], "run_fairlearn_trial() (fairlearnexperiment method)": [[9, "experiments.experiments.FairlearnExperiment.run_fairlearn_trial"]], "write_trial_result() (fairlearnexperiment method)": [[9, "experiments.experiments.FairlearnExperiment.write_trial_result"]], "seldonianexperiment (class in experiments.experiments)": [[10, "experiments.experiments.SeldonianExperiment"]], "__init__() (seldonianexperiment method)": [[10, "experiments.experiments.SeldonianExperiment.__init__"]], "__repr__() (seldonianexperiment method)": [[10, "experiments.experiments.SeldonianExperiment.__repr__"]], "aggregate_results() (seldonianexperiment method)": [[10, "experiments.experiments.SeldonianExperiment.aggregate_results"]], "evaluate_constraint_functions() (seldonianexperiment method)": [[10, "experiments.experiments.SeldonianExperiment.evaluate_constraint_functions"]], "run_qsa_trial() (seldonianexperiment method)": [[10, "experiments.experiments.SeldonianExperiment.run_QSA_trial"]], "run_experiment() (seldonianexperiment method)": [[10, "experiments.experiments.SeldonianExperiment.run_experiment"]], "write_trial_result() (seldonianexperiment method)": [[10, "experiments.experiments.SeldonianExperiment.write_trial_result"]], "experiments.generate_plots": [[11, "module-experiments.generate_plots"]], "plotgenerator (class in experiments.generate_plots)": [[12, "experiments.generate_plots.PlotGenerator"]], "__init__() (plotgenerator method)": [[12, "experiments.generate_plots.PlotGenerator.__init__"]], "__repr__() (plotgenerator method)": [[12, "experiments.generate_plots.PlotGenerator.__repr__"]], "make_plots() (plotgenerator method)": [[12, "experiments.generate_plots.PlotGenerator.make_plots"]], "rlplotgenerator (class in experiments.generate_plots)": [[13, "experiments.generate_plots.RLPlotGenerator"]], "__init__() (rlplotgenerator method)": [[13, "experiments.generate_plots.RLPlotGenerator.__init__"]], "__repr__() (rlplotgenerator method)": [[13, "experiments.generate_plots.RLPlotGenerator.__repr__"]], "make_plots() (rlplotgenerator method)": [[13, "experiments.generate_plots.RLPlotGenerator.make_plots"]], "run_seldonian_experiment() (rlplotgenerator method)": [[13, "experiments.generate_plots.RLPlotGenerator.run_seldonian_experiment"]], "supervisedplotgenerator (class in experiments.generate_plots)": [[14, "experiments.generate_plots.SupervisedPlotGenerator"]], "__init__() (supervisedplotgenerator method)": [[14, "experiments.generate_plots.SupervisedPlotGenerator.__init__"]], "__repr__() (supervisedplotgenerator method)": [[14, "experiments.generate_plots.SupervisedPlotGenerator.__repr__"]], "make_plots() (supervisedplotgenerator method)": [[14, "experiments.generate_plots.SupervisedPlotGenerator.make_plots"]], "run_baseline_experiment() (supervisedplotgenerator method)": [[14, "experiments.generate_plots.SupervisedPlotGenerator.run_baseline_experiment"]], "run_fairlearn_experiment() (supervisedplotgenerator method)": [[14, "experiments.generate_plots.SupervisedPlotGenerator.run_fairlearn_experiment"]], "run_seldonian_experiment() (supervisedplotgenerator method)": [[14, "experiments.generate_plots.SupervisedPlotGenerator.run_seldonian_experiment"]], "experiments.utils": [[15, "module-experiments.utils"]], "mse() (in module experiments.utils)": [[16, "experiments.utils.MSE"]], "batch_predictions() (in module experiments.utils)": [[17, "experiments.utils.batch_predictions"]], "deterministic_accuracy() (in module experiments.utils)": [[18, "experiments.utils.deterministic_accuracy"]], "generate_episodes_and_calc_j() (in module experiments.utils)": [[19, "experiments.utils.generate_episodes_and_calc_J"]], "generate_resampled_datasets() (in module experiments.utils)": [[20, "experiments.utils.generate_resampled_datasets"]], "probabilistic_accuracy() (in module experiments.utils)": [[21, "experiments.utils.probabilistic_accuracy"]]}})