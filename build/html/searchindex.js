Search.setIndex({"docnames": ["_autosummary/experiments", "_autosummary/experiments.base_example", "_autosummary/experiments.base_example.BaseExample", "_autosummary/experiments.baselines", "_autosummary/experiments.baselines.linear_regression", "_autosummary/experiments.baselines.linear_regression.LinearRegressionBaseline", "_autosummary/experiments.baselines.logistic_regression", "_autosummary/experiments.baselines.logistic_regression.BinaryLogisticRegressionBaseline", "_autosummary/experiments.baselines.random_classifiers", "_autosummary/experiments.baselines.random_classifiers.UniformRandomClassifierBaseline", "_autosummary/experiments.baselines.random_classifiers.WeightedRandomClassifierBaseline", "_autosummary/experiments.experiment_utils", "_autosummary/experiments.experiment_utils.batch_predictions", "_autosummary/experiments.experiment_utils.generate_episodes_and_calc_J", "_autosummary/experiments.experiment_utils.generate_resampled_datasets", "_autosummary/experiments.experiment_utils.has_failed", "_autosummary/experiments.experiment_utils.load_resampled_dataset", "_autosummary/experiments.experiment_utils.make_batch_epoch_dict_fixedniter", "_autosummary/experiments.experiment_utils.make_batch_epoch_dict_min_sample_repeat", "_autosummary/experiments.experiment_utils.prep_feat_labels", "_autosummary/experiments.experiment_utils.setup_SA_spec_for_exp", "_autosummary/experiments.experiments", "_autosummary/experiments.experiments.BaselineExperiment", "_autosummary/experiments.experiments.Experiment", "_autosummary/experiments.experiments.FairlearnExperiment", "_autosummary/experiments.experiments.SeldonianExperiment", "_autosummary/experiments.generate_plots", "_autosummary/experiments.generate_plots.PlotGenerator", "_autosummary/experiments.generate_plots.RLPlotGenerator", "_autosummary/experiments.generate_plots.SupervisedPlotGenerator", "_autosummary/experiments.headless_example", "_autosummary/experiments.headless_example.HeadlessExample", "_autosummary/experiments.perf_eval_funcs", "_autosummary/experiments.perf_eval_funcs.MSE", "_autosummary/experiments.perf_eval_funcs.binary_logistic_loss", "_autosummary/experiments.perf_eval_funcs.deterministic_accuracy", "_autosummary/experiments.perf_eval_funcs.multiclass_accuracy", "_autosummary/experiments.perf_eval_funcs.multiclass_logistic_loss", "_autosummary/experiments.perf_eval_funcs.probabilistic_accuracy", "api", "index", "overview"], "filenames": ["_autosummary/experiments.rst", "_autosummary/experiments.base_example.rst", "_autosummary/experiments.base_example.BaseExample.rst", "_autosummary/experiments.baselines.rst", "_autosummary/experiments.baselines.linear_regression.rst", "_autosummary/experiments.baselines.linear_regression.LinearRegressionBaseline.rst", "_autosummary/experiments.baselines.logistic_regression.rst", "_autosummary/experiments.baselines.logistic_regression.BinaryLogisticRegressionBaseline.rst", "_autosummary/experiments.baselines.random_classifiers.rst", "_autosummary/experiments.baselines.random_classifiers.UniformRandomClassifierBaseline.rst", "_autosummary/experiments.baselines.random_classifiers.WeightedRandomClassifierBaseline.rst", "_autosummary/experiments.experiment_utils.rst", "_autosummary/experiments.experiment_utils.batch_predictions.rst", "_autosummary/experiments.experiment_utils.generate_episodes_and_calc_J.rst", "_autosummary/experiments.experiment_utils.generate_resampled_datasets.rst", "_autosummary/experiments.experiment_utils.has_failed.rst", "_autosummary/experiments.experiment_utils.load_resampled_dataset.rst", "_autosummary/experiments.experiment_utils.make_batch_epoch_dict_fixedniter.rst", "_autosummary/experiments.experiment_utils.make_batch_epoch_dict_min_sample_repeat.rst", "_autosummary/experiments.experiment_utils.prep_feat_labels.rst", "_autosummary/experiments.experiment_utils.setup_SA_spec_for_exp.rst", "_autosummary/experiments.experiments.rst", "_autosummary/experiments.experiments.BaselineExperiment.rst", "_autosummary/experiments.experiments.Experiment.rst", "_autosummary/experiments.experiments.FairlearnExperiment.rst", "_autosummary/experiments.experiments.SeldonianExperiment.rst", "_autosummary/experiments.generate_plots.rst", "_autosummary/experiments.generate_plots.PlotGenerator.rst", "_autosummary/experiments.generate_plots.RLPlotGenerator.rst", "_autosummary/experiments.generate_plots.SupervisedPlotGenerator.rst", "_autosummary/experiments.headless_example.rst", "_autosummary/experiments.headless_example.HeadlessExample.rst", "_autosummary/experiments.perf_eval_funcs.rst", "_autosummary/experiments.perf_eval_funcs.MSE.rst", "_autosummary/experiments.perf_eval_funcs.binary_logistic_loss.rst", "_autosummary/experiments.perf_eval_funcs.deterministic_accuracy.rst", "_autosummary/experiments.perf_eval_funcs.multiclass_accuracy.rst", "_autosummary/experiments.perf_eval_funcs.multiclass_logistic_loss.rst", "_autosummary/experiments.perf_eval_funcs.probabilistic_accuracy.rst", "api.rst", "index.rst", "overview.rst"], "titles": ["experiments", "experiments.base_example", "experiments.base_example.BaseExample", "experiments.baselines", "experiments.baselines.linear_regression", "experiments.baselines.linear_regression.LinearRegressionBaseline", "experiments.baselines.logistic_regression", "experiments.baselines.logistic_regression.BinaryLogisticRegressionBaseline", "experiments.baselines.random_classifiers", "experiments.baselines.random_classifiers.UniformRandomClassifierBaseline", "experiments.baselines.random_classifiers.WeightedRandomClassifierBaseline", "experiments.experiment_utils", "experiments.experiment_utils.batch_predictions", "experiments.experiment_utils.generate_episodes_and_calc_J", "experiments.experiment_utils.generate_resampled_datasets", "experiments.experiment_utils.has_failed", "experiments.experiment_utils.load_resampled_dataset", "experiments.experiment_utils.make_batch_epoch_dict_fixedniter", "experiments.experiment_utils.make_batch_epoch_dict_min_sample_repeat", "experiments.experiment_utils.prep_feat_labels", "experiments.experiment_utils.setup_SA_spec_for_exp", "experiments.experiments", "experiments.experiments.BaselineExperiment", "experiments.experiments.Experiment", "experiments.experiments.FairlearnExperiment", "experiments.experiments.SeldonianExperiment", "experiments.generate_plots", "experiments.generate_plots.PlotGenerator", "experiments.generate_plots.RLPlotGenerator", "experiments.generate_plots.SupervisedPlotGenerator", "experiments.headless_example", "experiments.headless_example.HeadlessExample", "experiments.perf_eval_funcs", "experiments.perf_eval_funcs.MSE", "experiments.perf_eval_funcs.binary_logistic_loss", "experiments.perf_eval_funcs.deterministic_accuracy", "experiments.perf_eval_funcs.multiclass_accuracy", "experiments.perf_eval_funcs.multiclass_logistic_loss", "experiments.perf_eval_funcs.probabilistic_accuracy", "API", "Seldonian Experiments documentation", "Overview"], "terms": {"modul": [0, 1, 3, 21, 26, 30], "run": [0, 1, 2, 17, 18, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 40, 41], "seldonian": [0, 19, 21, 22, 25, 27, 28, 29], "gener": [0, 13, 14, 16, 27, 28, 29, 40], "three": [0, 2, 26, 27, 28, 29, 31, 40], "plot": [0, 2, 15, 26, 27, 28, 29, 31, 40], "contain": [1, 19, 30, 41], "base": [1, 2, 5, 7, 9, 10, 22, 23, 24, 25, 27, 28, 29, 30, 31], "class": [1, 2, 4, 5, 6, 7, 8, 9, 10, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 36, 37, 41], "exampl": [1, 2, 30, 31, 41], "spec": [2, 20, 27, 28, 29, 31, 40], "object": [2, 19, 23, 27, 28, 29, 40], "__init__": [2, 5, 7, 9, 10, 22, 23, 24, 25, 27, 28, 29, 31, 40], "__repr__": [2, 5, 7, 9, 10, 22, 23, 24, 25, 27, 28, 29, 31, 40], "return": [2, 5, 7, 9, 10, 13, 15, 17, 18, 19, 22, 23, 24, 25, 27, 28, 29, 31, 37, 41], "repr": [2, 5, 7, 9, 10, 22, 23, 24, 25, 27, 28, 29, 31], "self": [2, 5, 7, 9, 10, 22, 23, 24, 25, 27, 28, 29, 31], "method": [2, 5, 7, 9, 10, 22, 23, 24, 25, 27, 28, 29, 31, 41], "n_trial": [2, 14, 16, 27, 28, 29, 31, 40], "data_frac": [2, 16, 17, 18, 20, 22, 24, 25, 27, 28, 29, 31, 40], "results_dir": [2, 16, 20, 22, 23, 24, 25, 27, 28, 29, 31, 40], "perf_eval_fn": [2, 27, 28, 29, 31, 40], "n_worker": [2, 27, 28, 29, 31, 40], "1": [2, 7, 17, 18, 24, 27, 31, 35, 36, 38, 41], "datagen_method": [2, 20, 27, 28, 29, 31, 40], "resampl": [2, 14, 16, 27, 28, 29, 31, 41], "verbos": [2, 16, 22, 23, 24, 25, 28, 29, 31], "fals": [2, 15, 16, 19, 22, 23, 24, 25, 28, 29, 31, 41], "baselin": [2, 22, 23, 31, 40], "include_fairlearn_model": 2, "fairlearn_kwarg": 2, "performance_label": [2, 27, 28, 29, 31], "perform": [2, 27, 28, 29, 31, 40, 41], "performance_yscal": [2, 27, 28, 29, 31], "linear": [2, 5, 27, 28, 29, 31], "plot_savenam": [2, 31], "none": [2, 27, 28, 29, 31], "plot_fonts": [2, 31], "12": [2, 27, 28, 29, 31], "legend_fonts": [2, 27, 28, 29, 31], "8": [2, 27, 28, 29, 31], "thi": [2, 15, 16, 19, 31, 40, 41], "ani": [2, 22, 23, 24, 25, 31], "model": [2, 5, 7, 12, 15, 22, 23, 24, 25, 27, 28, 29, 31, 35, 36, 38, 41], "includ": [2, 7, 31, 41], "paramet": [2, 5, 7, 9, 10, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 27, 28, 29, 31, 33, 35, 36, 38, 41], "first": [2, 31, 41], "Then": [2, 31], "produc": [2, 31, 41], "linearregressionmodel": 5, "implement": [5, 7, 9, 10, 41], "classifi": [5, 7, 9, 10, 41], "alwai": [5, 9, 10], "predict": [5, 7, 9, 10, 24, 33, 35, 36, 38, 40, 41], "posit": [5, 7, 9, 10, 41], "ha": [5, 9, 10, 41], "prob": [5, 9, 10], "0": [5, 9, 10, 35, 41], "5": [5, 9, 10, 41], "regardless": [5, 9, 10, 41], "input": [5, 9, 10, 14, 16, 41], "fit": [5, 7, 40], "x": [5, 7, 9, 10], "y": [5, 7, 27, 28, 29, 33, 34, 35, 36, 37, 38], "train": [5, 7, 22, 40, 41], "us": [5, 7, 11, 14, 15, 16, 22, 24, 25, 27, 28, 29, 35, 36, 38, 40, 41], "featur": [5, 7, 9, 10, 14, 16, 19, 24], "label": [5, 7, 9, 10, 14, 16, 19, 24, 27, 28, 29, 33, 35, 36, 38], "pair": 5, "nxm": 5, "numpi": [5, 9, 10, 22, 25], "ndarrai": [5, 7, 9, 10, 17, 18, 22, 25], "nx1": 5, "weight": [5, 7, 9, 10, 22, 24, 25], "from": [5, 14, 22, 23, 24, 25, 27, 28, 29, 41], "type": [5, 7, 9, 10, 13, 22, 25, 37, 41], "theta": [5, 7, 9, 10, 27, 28, 29], "The": [5, 7, 9, 10, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 27, 28, 29, 35, 40, 41], "binarylogisticregressionmodel": 7, "logist": [7, 37, 41], "regress": [7, 41], "binari": [7, 38], "classif": [7, 36, 37, 38, 41], "let": 7, "i": [7, 13, 14, 15, 18, 25, 27, 28, 29, 35, 36, 38, 40, 41], "number": [7, 14, 17, 18, 19, 27, 28, 29, 41], "datapoint": 7, "j": [7, 13], "bia": 7, "term": 7, "provi": 7, "k": 7, "arrai": [7, 17, 18, 24, 33, 35, 36, 38, 41], "shape": [7, 14, 16, 24], "probabl": [7, 9, 10, 36, 38, 41], "have": [7, 9, 10, 41], "each": [7, 9, 10, 14, 16, 17, 18, 22, 23, 24, 25, 27, 28, 29, 36, 38, 41], "data": [7, 15, 16, 17, 18, 19, 22, 23, 24, 25, 27, 28, 29, 37, 41], "point": [7, 17, 18, 19, 24, 37, 41], "length": [7, 41], "observ": [7, 9, 10], "just": 7, "wrapper": 7, "parent": [7, 14, 22, 23, 24, 25], "2d": 7, "np": [7, 17, 18, 22, 25, 41], "1d": [7, 24], "randomclassifiermodel": [9, 10], "float": [9, 10, 13, 15, 16, 22, 24, 25, 27, 28, 29, 37], "overrid": 10, "child": 10, "util": [11, 14, 16, 19], "rest": 11, "librari": [11, 29, 40, 41], "function": [11, 14, 16, 17, 18, 19, 22, 24, 25, 27, 28, 29, 32, 41], "solut": [12, 22, 25, 27, 28, 29, 41], "x_test": 12, "kwarg": [12, 13, 20, 22, 23, 24, 25, 27, 28, 29, 33, 34, 35, 36, 37, 38], "calcul": [13, 33, 37], "expect": 13, "discount": 13, "episod": [13, 41], "where": [13, 17, 18, 27, 28, 29], "list": [13, 22, 23, 24, 25, 27, 28, 29, 41], "ground": [13, 22, 25, 27, 28, 29, 41], "truth": [13, 22, 25, 27, 28, 29, 41], "dataset": [14, 16, 19, 22, 24, 25, 27, 28, 29, 41], "save_dir": 14, "supervis": [14, 16, 22, 29, 41], "learn": [14, 16, 22, 41], "trial": [14, 16, 19, 22, 23, 24, 25, 27, 28, 29, 41], "replac": [14, 16, 41], "sensit": [14, 16, 19, 24], "attribut": [14, 16, 19, 28, 29], "creat": [14, 16, 41], "version": [14, 16], "same": [14, 16, 24, 41], "panda": 14, "datafram": 14, "origin": [14, 41], "which": [14, 16, 22, 23, 24, 25, 27, 28, 29, 41], "int": [14, 16, 17, 18, 19, 22, 24, 25, 27, 28, 29], "e": [14, 22, 23, 27, 28, 29, 41], "make": [14, 26, 27, 28, 29, 40, 41], "str": [14, 16, 22, 23, 24, 25, 27, 28, 29], "directori": [14, 16, 22, 23, 24, 25, 27, 28, 29, 41], "save": [14, 16, 22, 23, 24, 25, 27, 28, 29, 41], "file_format": 14, "format": 14, "option": [14, 24, 25, 27, 28, 29, 41], "ar": [14, 16, 17, 18, 24, 27, 28, 29, 40, 41], "csv": [14, 22, 23, 24, 25, 41], "pkl": [14, 41], "g": [15, 22, 23, 25, 27, 28, 29, 41], "condit": 15, "whether": [15, 19, 22, 25, 28, 29, 41], "valu": [15, 17, 18, 22, 24, 25, 27, 28, 29, 41], "unsaf": 15, "determin": [15, 22, 25, 41], "failur": [15, 27, 41], "rate": [15, 27, 36, 38, 41], "right": [15, 41], "most": 15, "behavior": [15, 41], "constraint": [15, 22, 24, 25, 27, 28, 29, 41], "evalu": [15, 22, 24, 25, 27, 28, 29, 40, 41], "true": [15, 22, 23, 24, 25, 27, 28, 29, 33, 35, 36, 38, 41], "safe": [15, 22, 25, 41], "trial_i": [16, 20, 22, 24, 25, 41], "result": [16, 22, 23, 24, 25, 27, 28, 29, 41], "index": [16, 22, 24, 25], "fraction": [16, 17, 18, 22, 24, 25, 27, 28, 29, 35, 41], "boolean": [16, 41], "flag": [16, 41], "niter": 17, "n_max": [17, 18], "batch_siz": [17, 18], "conveni": [17, 18], "figur": [17, 18, 24, 41], "out": [17, 18, 22, 23, 24, 25], "epoch": [17, 18], "necessari": [17, 18], "ensur": [17, 18], "total": [17, 18], "iter": [17, 18], "batch": [17, 18, 27, 28, 29], "size": [17, 18, 22, 24, 25, 27, 28, 29, 41], "fix": [17, 18], "you": [17, 18, 27, 28, 29, 40, 41], "want": [17, 18, 27, 28, 29, 41], "everi": [17, 18, 41], "d": [17, 18], "maximum": [17, 18], "optim": [17, 18], "process": [17, 18], "batch_epoch_dict": [17, 18, 20, 27, 28, 29, 31], "A": [17, 18, 41], "dictionari": [17, 18, 27, 28, 29, 41], "kei": [17, 18, 27, 28, 29], "num_epoch": [17, 18], "niter_min": 18, "num_repeat": 18, "frac": [18, 27, 28, 29, 41], "max": [18, 41], "": 18, "t": 18, "sampl": [18, 33, 35, 41], "seen": 18, "time": [18, 27, 28, 29, 41], "minimum": 18, "must": [18, 41], "trial_dataset": 19, "n_point": 19, "include_sensitive_attr": 19, "prepar": 19, "given": [19, 22, 25, 41], "bool": [19, 22, 23, 24, 25, 28, 29], "prep": 19, "well": 19, "regim": [20, 41], "perf_eval_kwarg": [20, 27, 28, 29, 31, 40], "baseline_model": [22, 29], "against": [22, 41], "compar": [22, 41], "model_nam": [22, 23, 25, 41], "string": [22, 23, 25], "name": [22, 23, 24, 25, 27, 28, 29, 41], "logistic_regress": [22, 23, 40, 41], "experiment": [22, 23, 24, 25], "aggregate_result": [22, 23, 24, 25, 40], "group": [22, 23, 24, 25], "togeth": [22, 23, 24, 25], "file": [22, 23, 24, 25, 27, 28, 29, 40], "singl": [22, 23, 24, 25, 41], "evaluate_constraint_funct": [22, 24, 25, 40], "constraint_eval_fn": [22, 25, 27, 28, 29, 40], "constraint_eval_kwarg": [22, 25, 27, 28, 29, 31, 40], "helper": [22, 25], "wa": [22, 25, 41], "found": [22, 25, 41], "dure": [22, 25], "an": [22, 25, 27, 28, 29, 40], "empti": [22, 25, 27, 28, 29, 41], "default": [22, 24, 27, 28, 29, 41], "pars": [22, 25, 27, 28, 29, 41], "tree": [22, 25, 27, 28, 29, 41], "dict": [22, 25, 27, 28, 29], "keyword": [22, 25, 27, 28, 29], "argument": [22, 25, 27, 28, 29, 41], "pass": [22, 25, 27, 28, 29, 41], "vector": [22, 25], "run_baseline_tri": [22, 40], "current": [22, 25, 41], "onli": [22, 25, 35, 38, 41], "support": [22, 41], "overal": [22, 24, 25, 27, 28, 29], "run_experi": [22, 24, 25, 40], "write_trial_result": [22, 23, 24, 25, 40], "colnam": [22, 23, 24, 25], "trial_dir": [22, 23, 24, 25], "write": [22, 23, 24, 25], "inform": [22, 23, 24, 25], "item": [22, 23, 24, 25], "These": [22, 23, 24, 25], "compris": [22, 23, 24, 25, 41], "header": [22, 23, 24, 25], "print": [22, 23, 24, 25], "filenam": [22, 23, 24, 25, 27, 28, 29], "fairlearn_epsilon_constraint": [24, 29], "fairlearn": [24, 29, 41], "epsilon": 24, "threshold": [24, 41], "y_pred": [24, 33, 34, 35, 36, 37, 38], "test_label": 24, "fairlearn_constraint_nam": [24, 29], "epsilon_ev": 24, "eval_method": 24, "nativ": 24, "sensitive_featur": 24, "two": [24, 41], "column": 24, "consid": [24, 41], "get_fairlearn_predict": [24, 40], "mitig": 24, "x_test_fairlearn": 24, "get": 24, "consist": 24, "potenti": 24, "more": [24, 41], "than": [24, 41], "one": [24, 41], "predictor": 24, "For": [24, 36, 38, 41], "non": 24, "zero": 24, "we": [24, 41], "how": [24, 41], "mani": [24, 41], "normal": 24, "across": 24, "all": [24, 27, 37, 41], "test": [24, 41], "run_fairlearn_tri": [24, 40], "qsa": 25, "quasi": [25, 41], "algorithm": [25, 27, 28, 29, 40, 41], "candid": [25, 27, 28, 29], "select": [25, 27, 28, 29], "run_qsa_tri": [25, 40], "2": 27, "3": [27, 41], "v": 27, "amount": [27, 41], "specif": [27, 28, 29], "error": [27, 28, 29, 33, 36, 38], "bar": [27, 28, 29], "proport": [27, 28, 29], "horizont": [27, 28, 29, 41], "axi": [27, 28, 29, 41], "obtain": [27, 28, 29, 41], "signatur": [27, 28, 29], "func": [27, 28, 29], "worker": [27, 28, 29, 41], "multiprocess": [27, 28, 29], "If": [27, 28, 29, 40, 41], "provid": [27, 28, 29, 41], "extra": [27, 28, 29], "instruct": [27, 28, 29], "n_epoch": [27, 28, 29], "make_plot": [27, 28, 29, 40, 41], "model_label_dict": [27, 28, 29, 31], "fontsiz": [27, 28, 29], "accuraci": [27, 28, 29, 41], "performance_ylim": [27, 28, 29], "marker_s": [27, 28, 29], "20": [27, 28, 29], "save_format": [27, 28, 29], "pdf": [27, 28, 29], "show_titl": [27, 28, 29], "custom_titl": [27, 28, 29], "include_legend": [27, 28, 29], "savenam": [27, 28, 29], "shown": [27, 28, 29, 41], "legend": [27, 28, 29], "font": [27, 28, 29], "text": [27, 28, 29], "path": [27, 28, 29], "disk": [27, 28, 29], "hyperparameter_and_setting_dict": 28, "plotgener": [28, 29, 40], "rl": [28, 41], "run_seldonian_experi": [28, 29, 40, 41], "assign": [28, 29], "displai": [28, 29], "stdout": [28, 29], "while": [28, 29, 41], "run_baseline_experi": [29, 40, 41], "run_fairlearn_experi": [29, 40], "fairlearn_sensitive_feature_nam": 29, "fairlearn_epsilon_ev": 29, "fairlearn_eval_kwarg": 29, "run_headless_seldonian_experi": [29, 40], "full_pretraining_model": [29, 31], "initial_state_dict": 29, "headless_pretraining_model": [29, 31], "head_layer_nam": [29, 31], "latent_feature_shap": [29, 31], "loss_func_pretrain": [29, 31], "learning_rate_pretrain": [29, 31], "pretraining_devic": [29, 31], "batch_epoch_dict_pretrain": [29, 31], "safety_batch_size_pretrain": [29, 31], "1000": 29, "headless": [29, 31], "baseexampl": [31, 40], "mean": 33, "squar": 33, "correct": 35, "best": 35, "when": [35, 36, 38, 41], "output": [35, 36, 38], "multi": [36, 37], "dimension": [36, 38], "averag": 37, "loss": 37, "over": 37, "welcom": 40, "design": 40, "help": [40, 41], "safeti": [40, 41], "sourc": 40, "code": [40, 41], "host": 40, "github": 40, "heavi": 40, "engin": [40, 41], "core": [40, 41], "complet": 40, "new": [40, 41], "see": [40, 41], "overview": 40, "api": [40, 41], "base_exampl": 40, "linear_regress": 40, "linearregressionbaselin": 40, "binarylogisticregressionbaselin": 40, "random_classifi": 40, "uniformrandomclassifierbaselin": 40, "weightedrandomclassifierbaselin": 40, "experiment_util": 40, "batch_predict": 40, "generate_episodes_and_calc_j": 40, "generate_resampled_dataset": 40, "has_fail": 40, "load_resampled_dataset": 40, "make_batch_epoch_dict_fixednit": 40, "make_batch_epoch_dict_min_sample_repeat": 40, "prep_feat_label": 40, "setup_sa_spec_for_exp": 40, "baselineexperi": [40, 41], "fairlearnexperi": [40, 41], "seldonianexperi": 40, "generate_plot": 40, "rlplotgener": [40, 41], "supervisedplotgener": [40, 41], "headless_exampl": 40, "headlessexampl": 40, "perf_eval_func": 40, "mse": 40, "binary_logistic_loss": 40, "deterministic_accuraci": 40, "multiclass_accuraci": 40, "multiclass_logistic_loss": 40, "probabilistic_accuraci": 40, "document": 41, "explain": 41, "sa": 41, "detail": 41, "descript": 41, "what": 41, "machin": 41, "toolkit": 41, "homepag": 41, "heavili": 41, "depend": 41, "wai": 41, "It": 41, "involv": 41, "increas": 41, "some": 41, "indic": 41, "satisfi": 41, "sometim": 41, "come": 41, "cost": 41, "reduc": 41, "can": 41, "understand": 41, "trade": 41, "off": 41, "cannot": 41, "No": 41, "despit": 41, "quantiti": 41, "assum": 41, "access": 41, "real": 41, "world": 41, "problem": 41, "set": 41, "typic": 41, "doe": 41, "instead": 41, "adopt": 41, "strategi": 41, "bootstrap": 41, "order": 41, "approxim": 41, "show": 41, "gpa": 41, "discuss": 41, "scienc": 41, "paper": 41, "top": 41, "panel": 41, "left": 41, "middl": 41, "thoma": 41, "et": 41, "al": 41, "2019": 41, "fair": 41, "case": 41, "dispar": 41, "impact": 41, "green": 41, "dot": 41, "dash": 41, "sever": 41, "standard": 41, "ml": 41, "red": 41, "do": 41, "also": 41, "awar": 41, "blue": 41, "magenta": 41, "In": 41, "criteria": 41, "black": 41, "line": 41, "repres": 41, "confid": 41, "delta": 41, "05": 41, "your": 41, "reinforc": 41, "either": 41, "both": 41, "describ": 41, "here": 41, "follow": 41, "requir": 41, "often": 41, "interfac": 41, "everyth": 41, "need": 41, "underli": 41, "etc": 41, "estim": 41, "uncertainti": 41, "multipli": 41, "within": 41, "differ": 41, "dimens": 41, "At": 41, "generate_episod": 41, "polici": 41, "parallel": 41, "multipl": 41, "avail": 41, "becaus": 41, "independ": 41, "other": 41, "embarrassingli": 41, "program": 41, "less": 41, "primari": 41, "specifi": 41, "explicitli": 41, "nsf": 41, "them": 41, "built": 41, "custom": 41, "call": 41, "plot_gener": 41, "easi": 41, "develop": 41, "easili": 41, "add": 41, "own": 41, "ad": 41, "alreadi": 41, "random": 41, "p": 41, "abov": 41, "would": 41, "simpli": 41, "block": 41, "like": 41, "That": 41, "thei": 41, "anoth": 41, "narrow": 41, "rang": 41, "progress": 41, "structur": 41, "insid": 41, "look": 41, "after": 41, "via": 41, "qsa_result": 41, "trial_data": 41, "data_frac_0": 41, "0010_trial_0": 41, "0010_trial_1": 41, "0010_trial_2": 41, "0010_trial_3": 41, "0010_trial_4": 41, "0022_trial_0": 41, "0022_trial_1": 41, "0022_trial_2": 41, "0022_trial_3": 41, "0022_trial_4": 41, "0046_trial_0": 41, "0046_trial_1": 41, "0046_trial_2": 41, "0046_trial_3": 41, "0046_trial_4": 41, "0050_trial_0": 41, "0100_trial_0": 41, "0100_trial_1": 41, "0100_trial_2": 41, "0100_trial_3": 41, "0100_trial_4": 41, "0215_trial_0": 41, "0215_trial_1": 41, "0215_trial_2": 41, "0215_trial_3": 41, "0215_trial_4": 41, "0464_trial_0": 41, "0464_trial_1": 41, "0464_trial_2": 41, "0464_trial_3": 41, "0464_trial_4": 41, "1000_trial_0": 41, "1000_trial_1": 41, "1000_trial_2": 41, "1000_trial_3": 41, "1000_trial_4": 41, "2154_trial_0": 41, "2154_trial_1": 41, "2154_trial_2": 41, "2154_trial_3": 41, "2154_trial_4": 41, "4642_trial_0": 41, "4642_trial_1": 41, "4642_trial_2": 41, "4642_trial_3": 41, "4642_trial_4": 41, "data_frac_1": 41, "0000_trial_0": 41, "0000_trial_1": 41, "0000_trial_2": 41, "0000_trial_3": 41, "0000_trial_4": 41, "resampled_dataset": 41, "resampled_data_trial0": 41, "resampled_data_trial1": 41, "resampled_data_trial2": 41, "resampled_data_trial3": 41, "resampled_data_trial4": 41, "logspac": 41, "10": 41, "log": 41, "space": 41, "start": 41, "001": 41, "end": 41, "As": 41, "50": 41, "fail": 41, "content": 41, "6105_trial36": 41, "passed_safeti": 41, "6105402296585326": 41, "36": 41, "6746247014792527": 41, "level": 41, "folder": 41, "_result": 41, "logistic_regression_result": 41, "its": 41, "separ": 41, "curv": 41, "autom": 41, "loan": 41, "approv": 41, "system": 41, "tutori": 41}, "objects": {"": [[0, 0, 0, "-", "experiments"]], "experiments": [[1, 0, 0, "-", "base_example"], [3, 0, 0, "-", "baselines"], [11, 0, 0, "-", "experiment_utils"], [21, 0, 0, "-", "experiments"], [26, 0, 0, "-", "generate_plots"], [30, 0, 0, "-", "headless_example"], [32, 0, 0, "-", "perf_eval_funcs"]], "experiments.base_example": [[2, 1, 1, "", "BaseExample"]], "experiments.base_example.BaseExample": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "__repr__"], [2, 2, 1, "", "run"]], "experiments.baselines": [[4, 0, 0, "-", "linear_regression"], [6, 0, 0, "-", "logistic_regression"], [8, 0, 0, "-", "random_classifiers"]], "experiments.baselines.linear_regression": [[5, 1, 1, "", "LinearRegressionBaseline"]], "experiments.baselines.linear_regression.LinearRegressionBaseline": [[5, 2, 1, "", "__init__"], [5, 2, 1, "", "__repr__"], [5, 2, 1, "", "fit"], [5, 2, 1, "", "predict"]], "experiments.baselines.logistic_regression": [[7, 1, 1, "", "BinaryLogisticRegressionBaseline"]], "experiments.baselines.logistic_regression.BinaryLogisticRegressionBaseline": [[7, 2, 1, "", "__init__"], [7, 2, 1, "", "__repr__"], [7, 2, 1, "", "fit"], [7, 2, 1, "", "predict"], [7, 2, 1, "", "train"]], "experiments.baselines.random_classifiers": [[9, 1, 1, "", "UniformRandomClassifierBaseline"], [10, 1, 1, "", "WeightedRandomClassifierBaseline"]], "experiments.baselines.random_classifiers.UniformRandomClassifierBaseline": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "__repr__"], [9, 2, 1, "", "predict"]], "experiments.baselines.random_classifiers.WeightedRandomClassifierBaseline": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "__repr__"], [10, 2, 1, "", "predict"]], "experiments.experiment_utils": [[12, 3, 1, "", "batch_predictions"], [13, 3, 1, "", "generate_episodes_and_calc_J"], [14, 3, 1, "", "generate_resampled_datasets"], [15, 3, 1, "", "has_failed"], [16, 3, 1, "", "load_resampled_dataset"], [17, 3, 1, "", "make_batch_epoch_dict_fixedniter"], [18, 3, 1, "", "make_batch_epoch_dict_min_sample_repeat"], [19, 3, 1, "", "prep_feat_labels"], [20, 3, 1, "", "setup_SA_spec_for_exp"]], "experiments.experiments": [[22, 1, 1, "", "BaselineExperiment"], [23, 1, 1, "", "Experiment"], [24, 1, 1, "", "FairlearnExperiment"], [25, 1, 1, "", "SeldonianExperiment"]], "experiments.experiments.BaselineExperiment": [[22, 2, 1, "", "__init__"], [22, 2, 1, "", "__repr__"], [22, 2, 1, "", "aggregate_results"], [22, 2, 1, "", "evaluate_constraint_functions"], [22, 2, 1, "", "run_baseline_trial"], [22, 2, 1, "", "run_experiment"], [22, 2, 1, "", "write_trial_result"]], "experiments.experiments.Experiment": [[23, 2, 1, "", "__init__"], [23, 2, 1, "", "__repr__"], [23, 2, 1, "", "aggregate_results"], [23, 2, 1, "", "write_trial_result"]], "experiments.experiments.FairlearnExperiment": [[24, 2, 1, "", "__init__"], [24, 2, 1, "", "__repr__"], [24, 2, 1, "", "aggregate_results"], [24, 2, 1, "", "evaluate_constraint_function"], [24, 2, 1, "", "get_fairlearn_predictions"], [24, 2, 1, "", "run_experiment"], [24, 2, 1, "", "run_fairlearn_trial"], [24, 2, 1, "", "write_trial_result"]], "experiments.experiments.SeldonianExperiment": [[25, 2, 1, "", "__init__"], [25, 2, 1, "", "__repr__"], [25, 2, 1, "", "aggregate_results"], [25, 2, 1, "", "evaluate_constraint_functions"], [25, 2, 1, "", "run_QSA_trial"], [25, 2, 1, "", "run_experiment"], [25, 2, 1, "", "write_trial_result"]], "experiments.generate_plots": [[27, 1, 1, "", "PlotGenerator"], [28, 1, 1, "", "RLPlotGenerator"], [29, 1, 1, "", "SupervisedPlotGenerator"]], "experiments.generate_plots.PlotGenerator": [[27, 2, 1, "", "__init__"], [27, 2, 1, "", "__repr__"], [27, 2, 1, "", "make_plots"]], "experiments.generate_plots.RLPlotGenerator": [[28, 2, 1, "", "__init__"], [28, 2, 1, "", "__repr__"], [28, 2, 1, "", "make_plots"], [28, 2, 1, "", "run_seldonian_experiment"]], "experiments.generate_plots.SupervisedPlotGenerator": [[29, 2, 1, "", "__init__"], [29, 2, 1, "", "__repr__"], [29, 2, 1, "", "make_plots"], [29, 2, 1, "", "run_baseline_experiment"], [29, 2, 1, "", "run_fairlearn_experiment"], [29, 2, 1, "", "run_headless_seldonian_experiment"], [29, 2, 1, "", "run_seldonian_experiment"]], "experiments.headless_example": [[31, 1, 1, "", "HeadlessExample"]], "experiments.headless_example.HeadlessExample": [[31, 2, 1, "", "__init__"], [31, 2, 1, "", "__repr__"], [31, 2, 1, "", "run"]], "experiments.perf_eval_funcs": [[33, 3, 1, "", "MSE"], [34, 3, 1, "", "binary_logistic_loss"], [35, 3, 1, "", "deterministic_accuracy"], [36, 3, 1, "", "multiclass_accuracy"], [37, 3, 1, "", "multiclass_logistic_loss"], [38, 3, 1, "", "probabilistic_accuracy"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "titleterms": {"experi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41], "base_exampl": [1, 2], "baseexampl": 2, "baselin": [3, 4, 5, 6, 7, 8, 9, 10, 41], "linear_regress": [4, 5], "linearregressionbaselin": 5, "logistic_regress": [6, 7], "binarylogisticregressionbaselin": 7, "random_classifi": [8, 9, 10], "uniformrandomclassifierbaselin": 9, "weightedrandomclassifierbaselin": 10, "experiment_util": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "batch_predict": 12, "generate_episodes_and_calc_j": 13, "generate_resampled_dataset": 14, "has_fail": 15, "load_resampled_dataset": 16, "make_batch_epoch_dict_fixednit": 17, "make_batch_epoch_dict_min_sample_repeat": 18, "prep_feat_label": 19, "setup_sa_spec_for_exp": 20, "baselineexperi": 22, "fairlearnexperi": 24, "seldonianexperi": 25, "generate_plot": [26, 27, 28, 29], "plotgener": 27, "rlplotgener": 28, "supervisedplotgener": 29, "headless_exampl": [30, 31], "headlessexampl": 31, "perf_eval_func": [32, 33, 34, 35, 36, 37, 38], "mse": 33, "binary_logistic_loss": 34, "deterministic_accuraci": 35, "multiclass_accuraci": 36, "multiclass_logistic_loss": 37, "probabilistic_accuraci": 38, "api": 39, "seldonian": [40, 41], "document": 40, "tabl": 40, "content": 40, "overview": 41, "three": 41, "plot": 41, "gener": 41, "spec": 41, "object": 41, "n_trial": 41, "data_frac": 41, "datagen_method": 41, "n_worker": 41, "perf_eval_fn": 41, "perf_eval_kwarg": 41, "constraint_eval_fn": 41, "constraint_eval_kwarg": 41, "results_dir": 41, "file": 41, "an": 41}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"experiments": [[0, "module-experiments"]], "experiments.base_example": [[1, "module-experiments.base_example"]], "experiments.base_example.BaseExample": [[2, "experiments-base-example-baseexample"]], "experiments.baselines": [[3, "module-experiments.baselines"]], "experiments.baselines.linear_regression": [[4, "module-experiments.baselines.linear_regression"]], "experiments.baselines.linear_regression.LinearRegressionBaseline": [[5, "experiments-baselines-linear-regression-linearregressionbaseline"]], "experiments.baselines.logistic_regression": [[6, "module-experiments.baselines.logistic_regression"]], "experiments.baselines.logistic_regression.BinaryLogisticRegressionBaseline": [[7, "experiments-baselines-logistic-regression-binarylogisticregressionbaseline"]], "experiments.baselines.random_classifiers": [[8, "module-experiments.baselines.random_classifiers"]], "experiments.baselines.random_classifiers.UniformRandomClassifierBaseline": [[9, "experiments-baselines-random-classifiers-uniformrandomclassifierbaseline"]], "experiments.baselines.random_classifiers.WeightedRandomClassifierBaseline": [[10, "experiments-baselines-random-classifiers-weightedrandomclassifierbaseline"]], "experiments.experiment_utils": [[11, "module-experiments.experiment_utils"]], "experiments.experiment_utils.batch_predictions": [[12, "experiments-experiment-utils-batch-predictions"]], "experiments.experiment_utils.generate_episodes_and_calc_J": [[13, "experiments-experiment-utils-generate-episodes-and-calc-j"]], "experiments.experiment_utils.generate_resampled_datasets": [[14, "experiments-experiment-utils-generate-resampled-datasets"]], "experiments.experiment_utils.has_failed": [[15, "experiments-experiment-utils-has-failed"]], "experiments.experiment_utils.load_resampled_dataset": [[16, "experiments-experiment-utils-load-resampled-dataset"]], "experiments.experiment_utils.make_batch_epoch_dict_fixedniter": [[17, "experiments-experiment-utils-make-batch-epoch-dict-fixedniter"]], "experiments.experiment_utils.make_batch_epoch_dict_min_sample_repeat": [[18, "experiments-experiment-utils-make-batch-epoch-dict-min-sample-repeat"]], "experiments.experiment_utils.prep_feat_labels": [[19, "experiments-experiment-utils-prep-feat-labels"]], "experiments.experiment_utils.setup_SA_spec_for_exp": [[20, "experiments-experiment-utils-setup-sa-spec-for-exp"]], "experiments.experiments": [[21, "module-experiments.experiments"]], "experiments.experiments.BaselineExperiment": [[22, "experiments-experiments-baselineexperiment"]], "experiments.experiments.Experiment": [[23, "experiments-experiments-experiment"]], "experiments.experiments.FairlearnExperiment": [[24, "experiments-experiments-fairlearnexperiment"]], "experiments.experiments.SeldonianExperiment": [[25, "experiments-experiments-seldonianexperiment"]], "experiments.generate_plots": [[26, "module-experiments.generate_plots"]], "experiments.generate_plots.PlotGenerator": [[27, "experiments-generate-plots-plotgenerator"]], "experiments.generate_plots.RLPlotGenerator": [[28, "experiments-generate-plots-rlplotgenerator"]], "experiments.generate_plots.SupervisedPlotGenerator": [[29, "experiments-generate-plots-supervisedplotgenerator"]], "experiments.headless_example": [[30, "module-experiments.headless_example"]], "experiments.headless_example.HeadlessExample": [[31, "experiments-headless-example-headlessexample"]], "experiments.perf_eval_funcs": [[32, "module-experiments.perf_eval_funcs"]], "experiments.perf_eval_funcs.MSE": [[33, "experiments-perf-eval-funcs-mse"]], "experiments.perf_eval_funcs.binary_logistic_loss": [[34, "experiments-perf-eval-funcs-binary-logistic-loss"]], "experiments.perf_eval_funcs.deterministic_accuracy": [[35, "experiments-perf-eval-funcs-deterministic-accuracy"]], "experiments.perf_eval_funcs.multiclass_accuracy": [[36, "experiments-perf-eval-funcs-multiclass-accuracy"]], "experiments.perf_eval_funcs.multiclass_logistic_loss": [[37, "experiments-perf-eval-funcs-multiclass-logistic-loss"]], "experiments.perf_eval_funcs.probabilistic_accuracy": [[38, "experiments-perf-eval-funcs-probabilistic-accuracy"]], "API": [[39, "api"]], "Seldonian Experiments documentation": [[40, "seldonian-experiments-documentation"]], "Table of contents": [[40, "table-of-contents"]], "Overview": [[41, "overview"]], "Seldonian experiments": [[41, "seldonian-experiments"]], "Three Plots": [[41, "three-plots"]], "Plot generator": [[41, "plot-generator"]], "Spec object": [[41, "spec-object"]], "n_trials": [[41, "n-trials"]], "data_fracs": [[41, "data-fracs"]], "datagen_method": [[41, "datagen-method"]], "n_workers": [[41, "n-workers"]], "perf_eval_fn": [[41, "perf-eval-fn"]], "perf_eval_kwargs": [[41, "perf-eval-kwargs"]], "constraint_eval_fns": [[41, "constraint-eval-fns"]], "constraint_eval_kwargs": [[41, "constraint-eval-kwargs"]], "results_dir": [[41, "results-dir"]], "Baselines": [[41, "baselines"]], "Files generated in an experiment": [[41, "files-generated-in-an-experiment"]]}, "indexentries": {"experiments": [[0, "module-experiments"]], "module": [[0, "module-experiments"], [1, "module-experiments.base_example"], [3, "module-experiments.baselines"], [4, "module-experiments.baselines.linear_regression"], [6, "module-experiments.baselines.logistic_regression"], [8, "module-experiments.baselines.random_classifiers"], [11, "module-experiments.experiment_utils"], [21, "module-experiments.experiments"], [26, "module-experiments.generate_plots"], [30, "module-experiments.headless_example"], [32, "module-experiments.perf_eval_funcs"]], "experiments.base_example": [[1, "module-experiments.base_example"]], "baseexample (class in experiments.base_example)": [[2, "experiments.base_example.BaseExample"]], "__init__() (baseexample method)": [[2, "experiments.base_example.BaseExample.__init__"]], "__repr__() (baseexample method)": [[2, "experiments.base_example.BaseExample.__repr__"]], "run() (baseexample method)": [[2, "experiments.base_example.BaseExample.run"]], "experiments.baselines": [[3, "module-experiments.baselines"]], "experiments.baselines.linear_regression": [[4, "module-experiments.baselines.linear_regression"]], "linearregressionbaseline (class in experiments.baselines.linear_regression)": [[5, "experiments.baselines.linear_regression.LinearRegressionBaseline"]], "__init__() (linearregressionbaseline method)": [[5, "experiments.baselines.linear_regression.LinearRegressionBaseline.__init__"]], "__repr__() (linearregressionbaseline method)": [[5, "experiments.baselines.linear_regression.LinearRegressionBaseline.__repr__"]], "fit() (linearregressionbaseline method)": [[5, "experiments.baselines.linear_regression.LinearRegressionBaseline.fit"]], "predict() (linearregressionbaseline method)": [[5, "experiments.baselines.linear_regression.LinearRegressionBaseline.predict"]], "experiments.baselines.logistic_regression": [[6, "module-experiments.baselines.logistic_regression"]], "binarylogisticregressionbaseline (class in experiments.baselines.logistic_regression)": [[7, "experiments.baselines.logistic_regression.BinaryLogisticRegressionBaseline"]], "__init__() (binarylogisticregressionbaseline method)": [[7, "experiments.baselines.logistic_regression.BinaryLogisticRegressionBaseline.__init__"]], "__repr__() (binarylogisticregressionbaseline method)": [[7, "experiments.baselines.logistic_regression.BinaryLogisticRegressionBaseline.__repr__"]], "fit() (binarylogisticregressionbaseline method)": [[7, "experiments.baselines.logistic_regression.BinaryLogisticRegressionBaseline.fit"]], "predict() (binarylogisticregressionbaseline method)": [[7, "experiments.baselines.logistic_regression.BinaryLogisticRegressionBaseline.predict"]], "train() (binarylogisticregressionbaseline method)": [[7, "experiments.baselines.logistic_regression.BinaryLogisticRegressionBaseline.train"]], "experiments.baselines.random_classifiers": [[8, "module-experiments.baselines.random_classifiers"]], "uniformrandomclassifierbaseline (class in experiments.baselines.random_classifiers)": [[9, "experiments.baselines.random_classifiers.UniformRandomClassifierBaseline"]], "__init__() (uniformrandomclassifierbaseline method)": [[9, "experiments.baselines.random_classifiers.UniformRandomClassifierBaseline.__init__"]], "__repr__() (uniformrandomclassifierbaseline method)": [[9, "experiments.baselines.random_classifiers.UniformRandomClassifierBaseline.__repr__"]], "predict() (uniformrandomclassifierbaseline method)": [[9, "experiments.baselines.random_classifiers.UniformRandomClassifierBaseline.predict"]], "weightedrandomclassifierbaseline (class in experiments.baselines.random_classifiers)": [[10, "experiments.baselines.random_classifiers.WeightedRandomClassifierBaseline"]], "__init__() (weightedrandomclassifierbaseline method)": [[10, "experiments.baselines.random_classifiers.WeightedRandomClassifierBaseline.__init__"]], "__repr__() (weightedrandomclassifierbaseline method)": [[10, "experiments.baselines.random_classifiers.WeightedRandomClassifierBaseline.__repr__"]], "predict() (weightedrandomclassifierbaseline method)": [[10, "experiments.baselines.random_classifiers.WeightedRandomClassifierBaseline.predict"]], "experiments.experiment_utils": [[11, "module-experiments.experiment_utils"]], "batch_predictions() (in module experiments.experiment_utils)": [[12, "experiments.experiment_utils.batch_predictions"]], "generate_episodes_and_calc_j() (in module experiments.experiment_utils)": [[13, "experiments.experiment_utils.generate_episodes_and_calc_J"]], "generate_resampled_datasets() (in module experiments.experiment_utils)": [[14, "experiments.experiment_utils.generate_resampled_datasets"]], "has_failed() (in module experiments.experiment_utils)": [[15, "experiments.experiment_utils.has_failed"]], "load_resampled_dataset() (in module experiments.experiment_utils)": [[16, "experiments.experiment_utils.load_resampled_dataset"]], "make_batch_epoch_dict_fixedniter() (in module experiments.experiment_utils)": [[17, "experiments.experiment_utils.make_batch_epoch_dict_fixedniter"]], "make_batch_epoch_dict_min_sample_repeat() (in module experiments.experiment_utils)": [[18, "experiments.experiment_utils.make_batch_epoch_dict_min_sample_repeat"]], "prep_feat_labels() (in module experiments.experiment_utils)": [[19, "experiments.experiment_utils.prep_feat_labels"]], "setup_sa_spec_for_exp() (in module experiments.experiment_utils)": [[20, "experiments.experiment_utils.setup_SA_spec_for_exp"]], "experiments.experiments": [[21, "module-experiments.experiments"]], "baselineexperiment (class in experiments.experiments)": [[22, "experiments.experiments.BaselineExperiment"]], "__init__() (baselineexperiment method)": [[22, "experiments.experiments.BaselineExperiment.__init__"]], "__repr__() (baselineexperiment method)": [[22, "experiments.experiments.BaselineExperiment.__repr__"]], "aggregate_results() (baselineexperiment method)": [[22, "experiments.experiments.BaselineExperiment.aggregate_results"]], "evaluate_constraint_functions() (baselineexperiment method)": [[22, "experiments.experiments.BaselineExperiment.evaluate_constraint_functions"]], "run_baseline_trial() (baselineexperiment method)": [[22, "experiments.experiments.BaselineExperiment.run_baseline_trial"]], "run_experiment() (baselineexperiment method)": [[22, "experiments.experiments.BaselineExperiment.run_experiment"]], "write_trial_result() (baselineexperiment method)": [[22, "experiments.experiments.BaselineExperiment.write_trial_result"]], "experiment (class in experiments.experiments)": [[23, "experiments.experiments.Experiment"]], "__init__() (experiment method)": [[23, "experiments.experiments.Experiment.__init__"]], "__repr__() (experiment method)": [[23, "experiments.experiments.Experiment.__repr__"]], "aggregate_results() (experiment method)": [[23, "experiments.experiments.Experiment.aggregate_results"]], "write_trial_result() (experiment method)": [[23, "experiments.experiments.Experiment.write_trial_result"]], "fairlearnexperiment (class in experiments.experiments)": [[24, "experiments.experiments.FairlearnExperiment"]], "__init__() (fairlearnexperiment method)": [[24, "experiments.experiments.FairlearnExperiment.__init__"]], "__repr__() (fairlearnexperiment method)": [[24, "experiments.experiments.FairlearnExperiment.__repr__"]], "aggregate_results() (fairlearnexperiment method)": [[24, "experiments.experiments.FairlearnExperiment.aggregate_results"]], "evaluate_constraint_function() (fairlearnexperiment method)": [[24, "experiments.experiments.FairlearnExperiment.evaluate_constraint_function"]], "get_fairlearn_predictions() (fairlearnexperiment method)": [[24, "experiments.experiments.FairlearnExperiment.get_fairlearn_predictions"]], "run_experiment() (fairlearnexperiment method)": [[24, "experiments.experiments.FairlearnExperiment.run_experiment"]], "run_fairlearn_trial() (fairlearnexperiment method)": [[24, "experiments.experiments.FairlearnExperiment.run_fairlearn_trial"]], "write_trial_result() (fairlearnexperiment method)": [[24, "experiments.experiments.FairlearnExperiment.write_trial_result"]], "seldonianexperiment (class in experiments.experiments)": [[25, "experiments.experiments.SeldonianExperiment"]], "__init__() (seldonianexperiment method)": [[25, "experiments.experiments.SeldonianExperiment.__init__"]], "__repr__() (seldonianexperiment method)": [[25, "experiments.experiments.SeldonianExperiment.__repr__"]], "aggregate_results() (seldonianexperiment method)": [[25, "experiments.experiments.SeldonianExperiment.aggregate_results"]], "evaluate_constraint_functions() (seldonianexperiment method)": [[25, "experiments.experiments.SeldonianExperiment.evaluate_constraint_functions"]], "run_qsa_trial() (seldonianexperiment method)": [[25, "experiments.experiments.SeldonianExperiment.run_QSA_trial"]], "run_experiment() (seldonianexperiment method)": [[25, "experiments.experiments.SeldonianExperiment.run_experiment"]], "write_trial_result() (seldonianexperiment method)": [[25, "experiments.experiments.SeldonianExperiment.write_trial_result"]], "experiments.generate_plots": [[26, "module-experiments.generate_plots"]], "plotgenerator (class in experiments.generate_plots)": [[27, "experiments.generate_plots.PlotGenerator"]], "__init__() (plotgenerator method)": [[27, "experiments.generate_plots.PlotGenerator.__init__"]], "__repr__() (plotgenerator method)": [[27, "experiments.generate_plots.PlotGenerator.__repr__"]], "make_plots() (plotgenerator method)": [[27, "experiments.generate_plots.PlotGenerator.make_plots"]], "rlplotgenerator (class in experiments.generate_plots)": [[28, "experiments.generate_plots.RLPlotGenerator"]], "__init__() (rlplotgenerator method)": [[28, "experiments.generate_plots.RLPlotGenerator.__init__"]], "__repr__() (rlplotgenerator method)": [[28, "experiments.generate_plots.RLPlotGenerator.__repr__"]], "make_plots() (rlplotgenerator method)": [[28, "experiments.generate_plots.RLPlotGenerator.make_plots"]], "run_seldonian_experiment() (rlplotgenerator method)": [[28, "experiments.generate_plots.RLPlotGenerator.run_seldonian_experiment"]], "supervisedplotgenerator (class in experiments.generate_plots)": [[29, "experiments.generate_plots.SupervisedPlotGenerator"]], "__init__() (supervisedplotgenerator method)": [[29, "experiments.generate_plots.SupervisedPlotGenerator.__init__"]], "__repr__() (supervisedplotgenerator method)": [[29, "experiments.generate_plots.SupervisedPlotGenerator.__repr__"]], "make_plots() (supervisedplotgenerator method)": [[29, "experiments.generate_plots.SupervisedPlotGenerator.make_plots"]], "run_baseline_experiment() (supervisedplotgenerator method)": [[29, "experiments.generate_plots.SupervisedPlotGenerator.run_baseline_experiment"]], "run_fairlearn_experiment() (supervisedplotgenerator method)": [[29, "experiments.generate_plots.SupervisedPlotGenerator.run_fairlearn_experiment"]], "run_headless_seldonian_experiment() (supervisedplotgenerator method)": [[29, "experiments.generate_plots.SupervisedPlotGenerator.run_headless_seldonian_experiment"]], "run_seldonian_experiment() (supervisedplotgenerator method)": [[29, "experiments.generate_plots.SupervisedPlotGenerator.run_seldonian_experiment"]], "experiments.headless_example": [[30, "module-experiments.headless_example"]], "headlessexample (class in experiments.headless_example)": [[31, "experiments.headless_example.HeadlessExample"]], "__init__() (headlessexample method)": [[31, "experiments.headless_example.HeadlessExample.__init__"]], "__repr__() (headlessexample method)": [[31, "experiments.headless_example.HeadlessExample.__repr__"]], "run() (headlessexample method)": [[31, "experiments.headless_example.HeadlessExample.run"]], "experiments.perf_eval_funcs": [[32, "module-experiments.perf_eval_funcs"]], "mse() (in module experiments.perf_eval_funcs)": [[33, "experiments.perf_eval_funcs.MSE"]], "binary_logistic_loss() (in module experiments.perf_eval_funcs)": [[34, "experiments.perf_eval_funcs.binary_logistic_loss"]], "deterministic_accuracy() (in module experiments.perf_eval_funcs)": [[35, "experiments.perf_eval_funcs.deterministic_accuracy"]], "multiclass_accuracy() (in module experiments.perf_eval_funcs)": [[36, "experiments.perf_eval_funcs.multiclass_accuracy"]], "multiclass_logistic_loss() (in module experiments.perf_eval_funcs)": [[37, "experiments.perf_eval_funcs.multiclass_logistic_loss"]], "probabilistic_accuracy() (in module experiments.perf_eval_funcs)": [[38, "experiments.perf_eval_funcs.probabilistic_accuracy"]]}})