Search.setIndex({"docnames": ["_autosummary/experiments", "_autosummary/experiments.base_example", "_autosummary/experiments.base_example.BaseExample", "_autosummary/experiments.baselines", "_autosummary/experiments.baselines.random_classifiers", "_autosummary/experiments.baselines.random_classifiers.WeightedRandomClassifierModel", "_autosummary/experiments.experiments", "_autosummary/experiments.experiments.BaselineExperiment", "_autosummary/experiments.experiments.Experiment", "_autosummary/experiments.experiments.FairlearnExperiment", "_autosummary/experiments.experiments.SeldonianExperiment", "_autosummary/experiments.generate_plots", "_autosummary/experiments.generate_plots.PlotGenerator", "_autosummary/experiments.generate_plots.RLPlotGenerator", "_autosummary/experiments.generate_plots.SupervisedPlotGenerator", "_autosummary/experiments.headless_example", "_autosummary/experiments.headless_example.HeadlessExample", "_autosummary/experiments.utils", "_autosummary/experiments.utils.MSE", "_autosummary/experiments.utils.batch_predictions", "_autosummary/experiments.utils.binary_logistic_loss", "_autosummary/experiments.utils.deterministic_accuracy", "_autosummary/experiments.utils.generate_episodes_and_calc_J", "_autosummary/experiments.utils.generate_resampled_datasets", "_autosummary/experiments.utils.make_batch_epoch_dict_fixedniter", "_autosummary/experiments.utils.make_batch_epoch_dict_min_sample_repeat", "_autosummary/experiments.utils.multiclass_accuracy", "_autosummary/experiments.utils.multiclass_logistic_loss", "_autosummary/experiments.utils.probabilistic_accuracy", "api", "index", "overview"], "filenames": ["_autosummary/experiments.rst", "_autosummary/experiments.base_example.rst", "_autosummary/experiments.base_example.BaseExample.rst", "_autosummary/experiments.baselines.rst", "_autosummary/experiments.baselines.random_classifiers.rst", "_autosummary/experiments.baselines.random_classifiers.WeightedRandomClassifierModel.rst", "_autosummary/experiments.experiments.rst", "_autosummary/experiments.experiments.BaselineExperiment.rst", "_autosummary/experiments.experiments.Experiment.rst", "_autosummary/experiments.experiments.FairlearnExperiment.rst", "_autosummary/experiments.experiments.SeldonianExperiment.rst", "_autosummary/experiments.generate_plots.rst", "_autosummary/experiments.generate_plots.PlotGenerator.rst", "_autosummary/experiments.generate_plots.RLPlotGenerator.rst", "_autosummary/experiments.generate_plots.SupervisedPlotGenerator.rst", "_autosummary/experiments.headless_example.rst", "_autosummary/experiments.headless_example.HeadlessExample.rst", "_autosummary/experiments.utils.rst", "_autosummary/experiments.utils.MSE.rst", "_autosummary/experiments.utils.batch_predictions.rst", "_autosummary/experiments.utils.binary_logistic_loss.rst", "_autosummary/experiments.utils.deterministic_accuracy.rst", "_autosummary/experiments.utils.generate_episodes_and_calc_J.rst", "_autosummary/experiments.utils.generate_resampled_datasets.rst", "_autosummary/experiments.utils.make_batch_epoch_dict_fixedniter.rst", "_autosummary/experiments.utils.make_batch_epoch_dict_min_sample_repeat.rst", "_autosummary/experiments.utils.multiclass_accuracy.rst", "_autosummary/experiments.utils.multiclass_logistic_loss.rst", "_autosummary/experiments.utils.probabilistic_accuracy.rst", "api.rst", "index.rst", "overview.rst"], "titles": ["experiments", "experiments.base_example", "experiments.base_example.BaseExample", "experiments.baselines", "experiments.baselines.random_classifiers", "experiments.baselines.random_classifiers.WeightedRandomClassifierModel", "experiments.experiments", "experiments.experiments.BaselineExperiment", "experiments.experiments.Experiment", "experiments.experiments.FairlearnExperiment", "experiments.experiments.SeldonianExperiment", "experiments.generate_plots", "experiments.generate_plots.PlotGenerator", "experiments.generate_plots.RLPlotGenerator", "experiments.generate_plots.SupervisedPlotGenerator", "experiments.headless_example", "experiments.headless_example.HeadlessExample", "experiments.utils", "experiments.utils.MSE", "experiments.utils.batch_predictions", "experiments.utils.binary_logistic_loss", "experiments.utils.deterministic_accuracy", "experiments.utils.generate_episodes_and_calc_J", "experiments.utils.generate_resampled_datasets", "experiments.utils.make_batch_epoch_dict_fixedniter", "experiments.utils.make_batch_epoch_dict_min_sample_repeat", "experiments.utils.multiclass_accuracy", "experiments.utils.multiclass_logistic_loss", "experiments.utils.probabilistic_accuracy", "API", "Seldonian Experiments documentation", "Overview"], "terms": {"modul": [0, 1, 3, 6, 11, 15], "run": [0, 1, 2, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 24, 25, 30, 31], "seldonian": [0, 6, 7, 10, 12, 13, 14], "gener": [0, 12, 13, 14, 22, 23, 30], "three": [0, 2, 11, 12, 13, 14, 16, 30], "plot": [0, 2, 11, 12, 13, 14, 16, 30], "contain": [1, 15, 31], "base": [1, 2, 5, 7, 8, 9, 10, 12, 13, 14, 15, 16], "class": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 26, 27, 31], "exampl": [1, 2, 15, 16, 31], "spec": [2, 12, 13, 14, 16, 30], "object": [2, 8, 12, 13, 14, 30], "__init__": [2, 5, 7, 8, 9, 10, 12, 13, 14, 16, 30], "__repr__": [2, 5, 7, 8, 9, 10, 12, 13, 14, 16, 30], "return": [2, 5, 7, 8, 9, 10, 12, 13, 14, 16, 22, 24, 25, 27, 31], "repr": [2, 5, 7, 8, 9, 10, 12, 13, 14, 16], "self": [2, 5, 7, 8, 9, 10, 12, 13, 14, 16], "method": [2, 5, 7, 8, 9, 10, 12, 13, 14, 16, 31], "n_trial": [2, 12, 13, 14, 16, 23, 30], "data_frac": [2, 7, 9, 10, 12, 13, 14, 16, 24, 25, 30], "results_dir": [2, 7, 8, 9, 10, 12, 13, 14, 16, 30], "perf_eval_fn": [2, 12, 13, 14, 16, 30], "n_worker": [2, 12, 13, 14, 16, 30], "1": [2, 9, 12, 16, 21, 24, 25, 26, 28, 31], "datagen_method": [2, 12, 13, 14, 16, 30], "resampl": [2, 12, 13, 14, 16, 23, 31], "verbos": [2, 7, 8, 9, 10, 13, 14, 16], "fals": [2, 7, 8, 9, 10, 13, 14, 16, 31], "baselin": [2, 7, 8, 14, 16, 30], "include_fairlearn_model": 2, "fairlearn_kwarg": 2, "performance_label": [2, 12, 13, 14, 16], "perform": [2, 12, 13, 14, 16, 30, 31], "performance_yscal": [2, 12, 13, 14, 16], "linear": [2, 12, 13, 14, 16], "plot_savenam": [2, 16], "none": [2, 12, 13, 14, 16], "plot_fonts": [2, 16], "12": [2, 12, 13, 14, 16], "legend_fonts": [2, 12, 13, 14, 16], "8": [2, 12, 13, 14, 16], "thi": [2, 16, 30, 31], "ani": [2, 7, 8, 9, 10, 16], "model": [2, 7, 8, 9, 10, 12, 13, 14, 16, 19, 21, 26, 28, 31], "includ": [2, 16, 31], "paramet": [2, 5, 7, 8, 9, 10, 12, 13, 14, 16, 18, 21, 23, 24, 25, 26, 28, 31], "first": [2, 16, 31], "Then": [2, 16], "produc": [2, 16, 31], "weight": [5, 9, 10], "classificationmodel": 5, "implement": [5, 31], "classifi": [5, 31], "alwai": 5, "predict": [5, 9, 18, 21, 26, 28, 30, 31], "posit": [5, 31], "ha": [5, 31], "prob": 5, "0": [5, 21, 31], "5": [5, 31], "regardless": [5, 31], "input": [5, 23, 31], "theta": [5, 12, 13, 14], "x": 5, "probabl": [5, 26, 28, 31], "have": [5, 31], "label": [5, 9, 12, 13, 14, 18, 21, 23, 26, 28], "numpi": [5, 10], "ndarrai": [5, 10, 24, 25], "The": [5, 7, 8, 9, 10, 12, 13, 14, 21, 23, 24, 25, 30, 31], "featur": [5, 9, 23], "each": [5, 7, 8, 9, 10, 12, 13, 14, 23, 24, 25, 26, 28, 31], "observ": 5, "type": [5, 22, 27, 31], "float": [5, 7, 9, 10, 12, 13, 14, 22, 27], "model_nam": [7, 8, 10, 14, 31], "against": [7, 31], "which": [7, 8, 9, 10, 12, 13, 14, 23, 31], "compar": [7, 31], "str": [7, 8, 9, 10, 12, 13, 14, 23], "string": [7, 8, 10], "name": [7, 8, 9, 10, 12, 13, 14, 31], "e": [7, 8, 12, 13, 14, 23, 31], "g": [7, 8, 12, 13, 14, 31], "logistic_regress": [7, 8, 31], "parent": [7, 8, 9, 10, 23], "directori": [7, 8, 9, 10, 12, 13, 14, 23, 31], "save": [7, 8, 9, 10, 12, 13, 14, 23, 31], "experiment": [7, 8, 9, 10], "result": [7, 8, 9, 10, 12, 13, 14, 31], "aggregate_result": [7, 8, 9, 10, 30], "kwarg": [7, 8, 9, 10, 12, 13, 14, 18, 19, 20, 21, 22, 26, 27, 28], "group": [7, 8, 9, 10], "togeth": [7, 8, 9, 10], "data": [7, 8, 9, 10, 12, 13, 14, 24, 25, 27, 31], "trial": [7, 8, 9, 10, 12, 13, 14, 23, 31], "file": [7, 8, 9, 10, 12, 13, 14, 30], "singl": [7, 8, 9, 10, 31], "csv": [7, 8, 9, 10, 23, 31], "run_baseline_tri": [7, 30], "trial_i": [7, 9, 10, 31], "current": [7, 10, 31], "onli": [7, 10, 21, 28, 31], "support": [7, 31], "supervis": [7, 14, 23, 31], "learn": [7, 23, 31], "fraction": [7, 9, 10, 12, 13, 14, 21, 24, 25, 31], "overal": [7, 9, 10, 12, 13, 14], "dataset": [7, 9, 10, 12, 13, 14, 23, 31], "size": [7, 9, 10, 12, 13, 14, 24, 25, 31], "us": [7, 9, 10, 12, 13, 14, 17, 21, 23, 26, 28, 30, 31], "int": [7, 9, 10, 12, 13, 14, 23, 24, 25], "index": [7, 9, 10], "run_experi": [7, 9, 10, 30], "write_trial_result": [7, 8, 9, 10, 30], "colnam": [7, 8, 9, 10], "trial_dir": [7, 8, 9, 10], "write": [7, 8, 9, 10], "out": [7, 8, 9, 10, 24, 25], "from": [7, 8, 9, 10, 12, 13, 14, 23, 31], "list": [7, 8, 9, 10, 12, 13, 14, 22, 31], "inform": [7, 8, 9, 10], "item": [7, 8, 9, 10], "These": [7, 8, 9, 10], "compris": [7, 8, 9, 10, 31], "header": [7, 8, 9, 10], "bool": [7, 8, 9, 10, 13, 14], "true": [7, 8, 9, 10, 12, 13, 14, 18, 21, 26, 28, 31], "print": [7, 8, 9, 10], "filenam": [7, 8, 9, 10, 12, 13, 14], "fairlearn_epsilon_constraint": [9, 14], "fairlearn": [9, 14, 31], "valu": [9, 12, 13, 14, 24, 25, 31], "epsilon": 9, "threshold": [9, 31], "constraint": [9, 10, 12, 13, 14, 31], "evaluate_constraint_funct": [9, 10, 30], "y_pred": [9, 18, 20, 21, 26, 27, 28], "test_label": 9, "fairlearn_constraint_nam": [9, 14], "epsilon_ev": 9, "eval_method": 9, "nativ": 9, "sensitive_featur": 9, "evalu": [9, 10, 12, 13, 14, 30, 31], "function": [9, 10, 12, 13, 14, 17, 23, 24, 25, 31], "1d": 9, "arrai": [9, 18, 21, 24, 25, 26, 28, 31], "same": [9, 23, 31], "shape": [9, 23], "default": [9, 12, 13, 14, 31], "two": [9, 31], "option": [9, 10, 12, 13, 14, 23, 31], "column": 9, "ar": [9, 12, 13, 14, 23, 24, 25, 30, 31], "consid": [9, 31], "sensit": [9, 23], "get_fairlearn_predict": [9, 30], "mitig": 9, "x_test_fairlearn": 9, "get": 9, "consist": 9, "potenti": 9, "more": [9, 31], "than": [9, 31], "one": [9, 31], "predictor": 9, "For": [9, 26, 28, 31], "non": 9, "zero": 9, "we": [9, 31], "figur": [9, 24, 25, 31], "how": [9, 31], "mani": [9, 31], "point": [9, 24, 25, 27, 31], "normal": 9, "across": 9, "all": [9, 12, 27, 31], "test": [9, 31], "run_fairlearn_tri": [9, 30], "i": [10, 12, 13, 14, 21, 22, 23, 25, 26, 28, 30, 31], "qsa": 10, "quasi": [10, 31], "algorithm": [10, 12, 13, 14, 30, 31], "solut": [10, 12, 13, 14, 19, 31], "constraint_eval_fn": [10, 12, 13, 14, 30], "constraint_eval_kwarg": [10, 12, 13, 14, 30], "helper": 10, "determin": [10, 31], "whether": [10, 13, 14, 31], "wa": [10, 31], "safe": [10, 31], "ground": [10, 12, 13, 14, 22, 31], "truth": [10, 12, 13, 14, 22, 31], "found": [10, 31], "dure": 10, "candid": [10, 12, 13, 14], "select": [10, 12, 13, 14], "given": [10, 31], "an": [10, 12, 13, 14, 30], "empti": [10, 12, 13, 14, 31], "pars": [10, 12, 13, 14, 31], "tree": [10, 12, 13, 14, 31], "dict": [10, 12, 13, 14], "keyword": [10, 12, 13, 14], "argument": [10, 12, 13, 14, 31], "pass": [10, 12, 13, 14, 31], "run_qsa_tri": [10, 30], "make": [11, 12, 13, 14, 23, 30, 31], "perf_eval_kwarg": [12, 13, 14, 16, 30], "batch_epoch_dict": [12, 13, 14, 16, 24, 25], "2": 12, "rate": [12, 26, 28, 31], "3": [12, 31], "failur": [12, 31], "v": 12, "amount": [12, 31], "specif": [12, 13, 14], "number": [12, 13, 14, 23, 24, 25, 31], "time": [12, 13, 14, 25, 31], "error": [12, 13, 14, 18, 26, 28], "bar": [12, 13, 14], "proport": [12, 13, 14], "horizont": [12, 13, 14, 31], "axi": [12, 13, 14, 31], "obtain": [12, 13, 14, 31], "signatur": [12, 13, 14], "func": [12, 13, 14], "where": [12, 13, 14, 22, 24, 25], "worker": [12, 13, 14, 31], "multiprocess": [12, 13, 14], "If": [12, 13, 14, 30, 31], "provid": [12, 13, 14, 31], "extra": [12, 13, 14], "instruct": [12, 13, 14], "batch": [12, 13, 14, 24, 25], "n_epoch": [12, 13, 14], "frac": [12, 13, 14, 25, 31], "make_plot": [12, 13, 14, 30, 31], "model_label_dict": [12, 13, 14], "fontsiz": [12, 13, 14], "accuraci": [12, 13, 14, 31], "performance_ylim": [12, 13, 14], "marker_s": [12, 13, 14], "20": [12, 13, 14], "save_format": [12, 13, 14], "pdf": [12, 13, 14], "show_titl": [12, 13, 14], "custom_titl": [12, 13, 14], "include_legend": [12, 13, 14], "savenam": [12, 13, 14], "dictionari": [12, 13, 14, 24, 25, 31], "kei": [12, 13, 14, 24, 25], "you": [12, 13, 14, 24, 25, 30, 31], "want": [12, 13, 14, 24, 25, 31], "shown": [12, 13, 14, 31], "legend": [12, 13, 14], "font": [12, 13, 14], "text": [12, 13, 14], "y": [12, 13, 14, 18, 20, 21, 26, 27, 28], "path": [12, 13, 14], "disk": [12, 13, 14], "hyperparameter_and_setting_dict": 13, "plotgener": [13, 14, 30], "rl": [13, 31], "run_seldonian_experi": [13, 14, 30, 31], "attribut": [13, 14, 23], "assign": [13, 14], "displai": [13, 14], "stdout": [13, 14], "while": [13, 14, 31], "run_baseline_experi": [14, 30, 31], "run_fairlearn_experi": [14, 30], "fairlearn_sensitive_feature_nam": 14, "fairlearn_epsilon_ev": 14, "fairlearn_eval_kwarg": 14, "librari": [14, 17, 30, 31], "run_headless_seldonian_experi": [14, 30], "full_pretraining_model": [14, 16], "initial_state_dict": 14, "headless_pretraining_model": [14, 16], "head_layer_nam": [14, 16], "latent_feature_shap": [14, 16], "loss_func_pretrain": [14, 16], "learning_rate_pretrain": [14, 16], "pretraining_devic": [14, 16], "batch_epoch_dict_pretrain": [14, 16], "safety_batch_size_pretrain": [14, 16], "1000": 14, "headless": [14, 16], "baseexampl": [16, 30], "rest": 17, "calcul": [18, 22, 27], "sampl": [18, 21, 25, 31], "mean": 18, "squar": 18, "x_test": 19, "correct": 21, "best": 21, "when": [21, 26, 28, 31], "output": [21, 26, 28], "expect": 22, "discount": 22, "episod": [22, 31], "j": 22, "save_dir": 23, "replac": [23, 31], "creat": [23, 31], "version": 23, "panda": 23, "datafram": 23, "origin": [23, 31], "file_format": 23, "format": 23, "pkl": [23, 31], "niter": 24, "n_max": [24, 25], "batch_siz": [24, 25], "conveni": [24, 25], "epoch": [24, 25], "necessari": [24, 25], "ensur": [24, 25], "total": [24, 25], "iter": [24, 25], "fix": [24, 25], "everi": [24, 25, 31], "np": [24, 25, 31], "d": [24, 25], "maximum": [24, 25], "optim": [24, 25], "process": [24, 25], "A": [24, 25, 31], "num_epoch": [24, 25], "niter_min": 25, "num_repeat": 25, "max": [25, 31], "": 25, "t": 25, "seen": 25, "minimum": 25, "must": [25, 31], "multi": [26, 27], "classif": [26, 27, 28, 31], "dimension": [26, 28], "averag": 27, "logist": [27, 31], "loss": 27, "over": 27, "binari": 28, "welcom": 30, "design": 30, "help": [30, 31], "safeti": [30, 31], "sourc": 30, "code": [30, 31], "host": 30, "github": 30, "heavi": 30, "engin": [30, 31], "core": [30, 31], "complet": 30, "new": [30, 31], "see": [30, 31], "overview": 30, "api": [30, 31], "base_exampl": 30, "random_classifi": 30, "weightedrandomclassifiermodel": 30, "baselineexperi": [30, 31], "fairlearnexperi": [30, 31], "seldonianexperi": 30, "generate_plot": 30, "rlplotgener": [30, 31], "supervisedplotgener": [30, 31], "headless_exampl": 30, "headlessexampl": 30, "util": 30, "mse": 30, "batch_predict": 30, "binary_logistic_loss": 30, "deterministic_accuraci": 30, "generate_episodes_and_calc_j": 30, "generate_resampled_dataset": 30, "make_batch_epoch_dict_fixednit": 30, "make_batch_epoch_dict_min_sample_repeat": 30, "multiclass_accuraci": 30, "multiclass_logistic_loss": 30, "probabilistic_accuraci": 30, "document": 31, "explain": 31, "sa": 31, "detail": 31, "descript": 31, "what": 31, "machin": 31, "toolkit": 31, "homepag": 31, "heavili": 31, "depend": 31, "wai": 31, "It": 31, "involv": 31, "increas": 31, "primari": 31, "satisfi": 31, "behavior": 31, "sometim": 31, "come": 31, "cost": 31, "reduc": 31, "can": 31, "understand": 31, "trade": 31, "off": 31, "cannot": 31, "No": 31, "some": 31, "despit": 31, "quantiti": 31, "assum": 31, "access": 31, "real": 31, "world": 31, "problem": 31, "set": 31, "typic": 31, "doe": 31, "instead": 31, "adopt": 31, "strategi": 31, "bootstrap": 31, "order": 31, "approxim": 31, "show": 31, "gpa": 31, "discuss": 31, "scienc": 31, "paper": 31, "top": 31, "panel": 31, "left": 31, "middl": 31, "right": 31, "train": 31, "thoma": 31, "et": 31, "al": 31, "2019": 31, "fair": 31, "case": 31, "dispar": 31, "impact": 31, "green": 31, "dot": 31, "dash": 31, "sever": 31, "standard": 31, "ml": 31, "red": 31, "do": 31, "also": 31, "awar": 31, "blue": 31, "magenta": 31, "In": 31, "criteria": 31, "black": 31, "line": 31, "repres": 31, "confid": 31, "delta": 31, "05": 31, "regim": 31, "your": 31, "reinforc": 31, "either": 31, "both": 31, "describ": 31, "here": 31, "follow": 31, "requir": 31, "often": 31, "interfac": 31, "everyth": 31, "need": 31, "underli": 31, "etc": 31, "estim": 31, "uncertainti": 31, "multipli": 31, "within": 31, "differ": 31, "dimens": 31, "At": 31, "generate_episod": 31, "polici": 31, "parallel": 31, "multipl": 31, "avail": 31, "becaus": 31, "independ": 31, "other": 31, "embarrassingli": 31, "program": 31, "less": 31, "specifi": 31, "explicitli": 31, "nsf": 31, "them": 31, "built": 31, "custom": 31, "length": 31, "call": 31, "plot_gener": 31, "easi": 31, "develop": 31, "easili": 31, "add": 31, "own": 31, "ad": 31, "alreadi": 31, "regress": 31, "random": 31, "p": 31, "abov": 31, "would": 31, "simpli": 31, "block": 31, "like": 31, "That": 31, "thei": 31, "anoth": 31, "narrow": 31, "rang": 31, "progress": 31, "structur": 31, "insid": 31, "look": 31, "after": 31, "via": 31, "qsa_result": 31, "trial_data": 31, "data_frac_0": 31, "0010_trial_0": 31, "0010_trial_1": 31, "0010_trial_2": 31, "0010_trial_3": 31, "0010_trial_4": 31, "0022_trial_0": 31, "0022_trial_1": 31, "0022_trial_2": 31, "0022_trial_3": 31, "0022_trial_4": 31, "0046_trial_0": 31, "0046_trial_1": 31, "0046_trial_2": 31, "0046_trial_3": 31, "0046_trial_4": 31, "0050_trial_0": 31, "0100_trial_0": 31, "0100_trial_1": 31, "0100_trial_2": 31, "0100_trial_3": 31, "0100_trial_4": 31, "0215_trial_0": 31, "0215_trial_1": 31, "0215_trial_2": 31, "0215_trial_3": 31, "0215_trial_4": 31, "0464_trial_0": 31, "0464_trial_1": 31, "0464_trial_2": 31, "0464_trial_3": 31, "0464_trial_4": 31, "1000_trial_0": 31, "1000_trial_1": 31, "1000_trial_2": 31, "1000_trial_3": 31, "1000_trial_4": 31, "2154_trial_0": 31, "2154_trial_1": 31, "2154_trial_2": 31, "2154_trial_3": 31, "2154_trial_4": 31, "4642_trial_0": 31, "4642_trial_1": 31, "4642_trial_2": 31, "4642_trial_3": 31, "4642_trial_4": 31, "data_frac_1": 31, "0000_trial_0": 31, "0000_trial_1": 31, "0000_trial_2": 31, "0000_trial_3": 31, "0000_trial_4": 31, "resampled_dataset": 31, "resampled_data_trial0": 31, "resampled_data_trial1": 31, "resampled_data_trial2": 31, "resampled_data_trial3": 31, "resampled_data_trial4": 31, "logspac": 31, "10": 31, "log": 31, "space": 31, "start": 31, "001": 31, "end": 31, "As": 31, "50": 31, "boolean": 31, "flag": 31, "fail": 31, "content": 31, "6105_trial36": 31, "passed_safeti": 31, "6105402296585326": 31, "36": 31, "6746247014792527": 31, "level": 31, "folder": 31, "_result": 31, "logistic_regression_result": 31, "its": 31, "separ": 31, "curv": 31, "autom": 31, "loan": 31, "approv": 31, "system": 31, "tutori": 31}, "objects": {"": [[0, 0, 0, "-", "experiments"]], "experiments": [[1, 0, 0, "-", "base_example"], [3, 0, 0, "-", "baselines"], [6, 0, 0, "-", "experiments"], [11, 0, 0, "-", "generate_plots"], [15, 0, 0, "-", "headless_example"], [17, 0, 0, "-", "utils"]], "experiments.base_example": [[2, 1, 1, "", "BaseExample"]], "experiments.base_example.BaseExample": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "__repr__"], [2, 2, 1, "", "run"]], "experiments.baselines": [[4, 0, 0, "-", "random_classifiers"]], "experiments.baselines.random_classifiers": [[5, 1, 1, "", "WeightedRandomClassifierModel"]], "experiments.baselines.random_classifiers.WeightedRandomClassifierModel": [[5, 2, 1, "", "__init__"], [5, 2, 1, "", "__repr__"], [5, 2, 1, "", "predict"]], "experiments.experiments": [[7, 1, 1, "", "BaselineExperiment"], [8, 1, 1, "", "Experiment"], [9, 1, 1, "", "FairlearnExperiment"], [10, 1, 1, "", "SeldonianExperiment"]], "experiments.experiments.BaselineExperiment": [[7, 2, 1, "", "__init__"], [7, 2, 1, "", "__repr__"], [7, 2, 1, "", "aggregate_results"], [7, 2, 1, "", "run_baseline_trial"], [7, 2, 1, "", "run_experiment"], [7, 2, 1, "", "write_trial_result"]], "experiments.experiments.Experiment": [[8, 2, 1, "", "__init__"], [8, 2, 1, "", "__repr__"], [8, 2, 1, "", "aggregate_results"], [8, 2, 1, "", "write_trial_result"]], "experiments.experiments.FairlearnExperiment": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "__repr__"], [9, 2, 1, "", "aggregate_results"], [9, 2, 1, "", "evaluate_constraint_function"], [9, 2, 1, "", "get_fairlearn_predictions"], [9, 2, 1, "", "run_experiment"], [9, 2, 1, "", "run_fairlearn_trial"], [9, 2, 1, "", "write_trial_result"]], "experiments.experiments.SeldonianExperiment": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "__repr__"], [10, 2, 1, "", "aggregate_results"], [10, 2, 1, "", "evaluate_constraint_functions"], [10, 2, 1, "", "run_QSA_trial"], [10, 2, 1, "", "run_experiment"], [10, 2, 1, "", "write_trial_result"]], "experiments.generate_plots": [[12, 1, 1, "", "PlotGenerator"], [13, 1, 1, "", "RLPlotGenerator"], [14, 1, 1, "", "SupervisedPlotGenerator"]], "experiments.generate_plots.PlotGenerator": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "__repr__"], [12, 2, 1, "", "make_plots"]], "experiments.generate_plots.RLPlotGenerator": [[13, 2, 1, "", "__init__"], [13, 2, 1, "", "__repr__"], [13, 2, 1, "", "make_plots"], [13, 2, 1, "", "run_seldonian_experiment"]], "experiments.generate_plots.SupervisedPlotGenerator": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "__repr__"], [14, 2, 1, "", "make_plots"], [14, 2, 1, "", "run_baseline_experiment"], [14, 2, 1, "", "run_fairlearn_experiment"], [14, 2, 1, "", "run_headless_seldonian_experiment"], [14, 2, 1, "", "run_seldonian_experiment"]], "experiments.headless_example": [[16, 1, 1, "", "HeadlessExample"]], "experiments.headless_example.HeadlessExample": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "__repr__"], [16, 2, 1, "", "run"]], "experiments.utils": [[18, 3, 1, "", "MSE"], [19, 3, 1, "", "batch_predictions"], [20, 3, 1, "", "binary_logistic_loss"], [21, 3, 1, "", "deterministic_accuracy"], [22, 3, 1, "", "generate_episodes_and_calc_J"], [23, 3, 1, "", "generate_resampled_datasets"], [24, 3, 1, "", "make_batch_epoch_dict_fixedniter"], [25, 3, 1, "", "make_batch_epoch_dict_min_sample_repeat"], [26, 3, 1, "", "multiclass_accuracy"], [27, 3, 1, "", "multiclass_logistic_loss"], [28, 3, 1, "", "probabilistic_accuracy"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "titleterms": {"experi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31], "base_exampl": [1, 2], "baseexampl": 2, "baselin": [3, 4, 5, 31], "random_classifi": [4, 5], "weightedrandomclassifiermodel": 5, "baselineexperi": 7, "fairlearnexperi": 9, "seldonianexperi": 10, "generate_plot": [11, 12, 13, 14], "plotgener": 12, "rlplotgener": 13, "supervisedplotgener": 14, "headless_exampl": [15, 16], "headlessexampl": 16, "util": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "mse": 18, "batch_predict": 19, "binary_logistic_loss": 20, "deterministic_accuraci": 21, "generate_episodes_and_calc_j": 22, "generate_resampled_dataset": 23, "make_batch_epoch_dict_fixednit": 24, "make_batch_epoch_dict_min_sample_repeat": 25, "multiclass_accuraci": 26, "multiclass_logistic_loss": 27, "probabilistic_accuraci": 28, "api": 29, "seldonian": [30, 31], "document": 30, "tabl": 30, "content": 30, "overview": 31, "three": 31, "plot": 31, "gener": 31, "spec": 31, "object": 31, "n_trial": 31, "data_frac": 31, "datagen_method": 31, "n_worker": 31, "perf_eval_fn": 31, "perf_eval_kwarg": 31, "constraint_eval_fn": 31, "constraint_eval_kwarg": 31, "results_dir": 31, "file": 31, "an": 31}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"experiments": [[0, "module-experiments"]], "experiments.base_example": [[1, "module-experiments.base_example"]], "experiments.base_example.BaseExample": [[2, "experiments-base-example-baseexample"]], "experiments.baselines": [[3, "module-experiments.baselines"]], "experiments.baselines.random_classifiers": [[4, "module-experiments.baselines.random_classifiers"]], "experiments.baselines.random_classifiers.WeightedRandomClassifierModel": [[5, "experiments-baselines-random-classifiers-weightedrandomclassifiermodel"]], "experiments.experiments": [[6, "module-experiments.experiments"]], "experiments.experiments.BaselineExperiment": [[7, "experiments-experiments-baselineexperiment"]], "experiments.experiments.Experiment": [[8, "experiments-experiments-experiment"]], "experiments.experiments.FairlearnExperiment": [[9, "experiments-experiments-fairlearnexperiment"]], "experiments.experiments.SeldonianExperiment": [[10, "experiments-experiments-seldonianexperiment"]], "experiments.generate_plots": [[11, "module-experiments.generate_plots"]], "experiments.generate_plots.PlotGenerator": [[12, "experiments-generate-plots-plotgenerator"]], "experiments.generate_plots.RLPlotGenerator": [[13, "experiments-generate-plots-rlplotgenerator"]], "experiments.generate_plots.SupervisedPlotGenerator": [[14, "experiments-generate-plots-supervisedplotgenerator"]], "experiments.headless_example": [[15, "module-experiments.headless_example"]], "experiments.headless_example.HeadlessExample": [[16, "experiments-headless-example-headlessexample"]], "experiments.utils": [[17, "module-experiments.utils"]], "experiments.utils.MSE": [[18, "experiments-utils-mse"]], "experiments.utils.batch_predictions": [[19, "experiments-utils-batch-predictions"]], "experiments.utils.binary_logistic_loss": [[20, "experiments-utils-binary-logistic-loss"]], "experiments.utils.deterministic_accuracy": [[21, "experiments-utils-deterministic-accuracy"]], "experiments.utils.generate_episodes_and_calc_J": [[22, "experiments-utils-generate-episodes-and-calc-j"]], "experiments.utils.generate_resampled_datasets": [[23, "experiments-utils-generate-resampled-datasets"]], "experiments.utils.make_batch_epoch_dict_fixedniter": [[24, "experiments-utils-make-batch-epoch-dict-fixedniter"]], "experiments.utils.make_batch_epoch_dict_min_sample_repeat": [[25, "experiments-utils-make-batch-epoch-dict-min-sample-repeat"]], "experiments.utils.multiclass_accuracy": [[26, "experiments-utils-multiclass-accuracy"]], "experiments.utils.multiclass_logistic_loss": [[27, "experiments-utils-multiclass-logistic-loss"]], "experiments.utils.probabilistic_accuracy": [[28, "experiments-utils-probabilistic-accuracy"]], "API": [[29, "api"]], "Seldonian Experiments documentation": [[30, "seldonian-experiments-documentation"]], "Table of contents": [[30, "table-of-contents"]], "Overview": [[31, "overview"]], "Seldonian experiments": [[31, "seldonian-experiments"]], "Three Plots": [[31, "three-plots"]], "Plot generator": [[31, "plot-generator"]], "Spec object": [[31, "spec-object"]], "n_trials": [[31, "n-trials"]], "data_fracs": [[31, "data-fracs"]], "datagen_method": [[31, "datagen-method"]], "n_workers": [[31, "n-workers"]], "perf_eval_fn": [[31, "perf-eval-fn"]], "perf_eval_kwargs": [[31, "perf-eval-kwargs"]], "constraint_eval_fns": [[31, "constraint-eval-fns"]], "constraint_eval_kwargs": [[31, "constraint-eval-kwargs"]], "results_dir": [[31, "results-dir"]], "Baselines": [[31, "baselines"]], "Files generated in an experiment": [[31, "files-generated-in-an-experiment"]]}, "indexentries": {"experiments": [[0, "module-experiments"]], "module": [[0, "module-experiments"], [1, "module-experiments.base_example"], [3, "module-experiments.baselines"], [4, "module-experiments.baselines.random_classifiers"], [6, "module-experiments.experiments"], [11, "module-experiments.generate_plots"], [15, "module-experiments.headless_example"], [17, "module-experiments.utils"]], "experiments.base_example": [[1, "module-experiments.base_example"]], "baseexample (class in experiments.base_example)": [[2, "experiments.base_example.BaseExample"]], "__init__() (baseexample method)": [[2, "experiments.base_example.BaseExample.__init__"]], "__repr__() (baseexample method)": [[2, "experiments.base_example.BaseExample.__repr__"]], "run() (baseexample method)": [[2, "experiments.base_example.BaseExample.run"]], "experiments.baselines": [[3, "module-experiments.baselines"]], "experiments.baselines.random_classifiers": [[4, "module-experiments.baselines.random_classifiers"]], "weightedrandomclassifiermodel (class in experiments.baselines.random_classifiers)": [[5, "experiments.baselines.random_classifiers.WeightedRandomClassifierModel"]], "__init__() (weightedrandomclassifiermodel method)": [[5, "experiments.baselines.random_classifiers.WeightedRandomClassifierModel.__init__"]], "__repr__() (weightedrandomclassifiermodel method)": [[5, "experiments.baselines.random_classifiers.WeightedRandomClassifierModel.__repr__"]], "predict() (weightedrandomclassifiermodel method)": [[5, "experiments.baselines.random_classifiers.WeightedRandomClassifierModel.predict"]], "experiments.experiments": [[6, "module-experiments.experiments"]], "baselineexperiment (class in experiments.experiments)": [[7, "experiments.experiments.BaselineExperiment"]], "__init__() (baselineexperiment method)": [[7, "experiments.experiments.BaselineExperiment.__init__"]], "__repr__() (baselineexperiment method)": [[7, "experiments.experiments.BaselineExperiment.__repr__"]], "aggregate_results() (baselineexperiment method)": [[7, "experiments.experiments.BaselineExperiment.aggregate_results"]], "run_baseline_trial() (baselineexperiment method)": [[7, "experiments.experiments.BaselineExperiment.run_baseline_trial"]], "run_experiment() (baselineexperiment method)": [[7, "experiments.experiments.BaselineExperiment.run_experiment"]], "write_trial_result() (baselineexperiment method)": [[7, "experiments.experiments.BaselineExperiment.write_trial_result"]], "experiment (class in experiments.experiments)": [[8, "experiments.experiments.Experiment"]], "__init__() (experiment method)": [[8, "experiments.experiments.Experiment.__init__"]], "__repr__() (experiment method)": [[8, "experiments.experiments.Experiment.__repr__"]], "aggregate_results() (experiment method)": [[8, "experiments.experiments.Experiment.aggregate_results"]], "write_trial_result() (experiment method)": [[8, "experiments.experiments.Experiment.write_trial_result"]], "fairlearnexperiment (class in experiments.experiments)": [[9, "experiments.experiments.FairlearnExperiment"]], "__init__() (fairlearnexperiment method)": [[9, "experiments.experiments.FairlearnExperiment.__init__"]], "__repr__() (fairlearnexperiment method)": [[9, "experiments.experiments.FairlearnExperiment.__repr__"]], "aggregate_results() (fairlearnexperiment method)": [[9, "experiments.experiments.FairlearnExperiment.aggregate_results"]], "evaluate_constraint_function() (fairlearnexperiment method)": [[9, "experiments.experiments.FairlearnExperiment.evaluate_constraint_function"]], "get_fairlearn_predictions() (fairlearnexperiment method)": [[9, "experiments.experiments.FairlearnExperiment.get_fairlearn_predictions"]], "run_experiment() (fairlearnexperiment method)": [[9, "experiments.experiments.FairlearnExperiment.run_experiment"]], "run_fairlearn_trial() (fairlearnexperiment method)": [[9, "experiments.experiments.FairlearnExperiment.run_fairlearn_trial"]], "write_trial_result() (fairlearnexperiment method)": [[9, "experiments.experiments.FairlearnExperiment.write_trial_result"]], "seldonianexperiment (class in experiments.experiments)": [[10, "experiments.experiments.SeldonianExperiment"]], "__init__() (seldonianexperiment method)": [[10, "experiments.experiments.SeldonianExperiment.__init__"]], "__repr__() (seldonianexperiment method)": [[10, "experiments.experiments.SeldonianExperiment.__repr__"]], "aggregate_results() (seldonianexperiment method)": [[10, "experiments.experiments.SeldonianExperiment.aggregate_results"]], "evaluate_constraint_functions() (seldonianexperiment method)": [[10, "experiments.experiments.SeldonianExperiment.evaluate_constraint_functions"]], "run_qsa_trial() (seldonianexperiment method)": [[10, "experiments.experiments.SeldonianExperiment.run_QSA_trial"]], "run_experiment() (seldonianexperiment method)": [[10, "experiments.experiments.SeldonianExperiment.run_experiment"]], "write_trial_result() (seldonianexperiment method)": [[10, "experiments.experiments.SeldonianExperiment.write_trial_result"]], "experiments.generate_plots": [[11, "module-experiments.generate_plots"]], "plotgenerator (class in experiments.generate_plots)": [[12, "experiments.generate_plots.PlotGenerator"]], "__init__() (plotgenerator method)": [[12, "experiments.generate_plots.PlotGenerator.__init__"]], "__repr__() (plotgenerator method)": [[12, "experiments.generate_plots.PlotGenerator.__repr__"]], "make_plots() (plotgenerator method)": [[12, "experiments.generate_plots.PlotGenerator.make_plots"]], "rlplotgenerator (class in experiments.generate_plots)": [[13, "experiments.generate_plots.RLPlotGenerator"]], "__init__() (rlplotgenerator method)": [[13, "experiments.generate_plots.RLPlotGenerator.__init__"]], "__repr__() (rlplotgenerator method)": [[13, "experiments.generate_plots.RLPlotGenerator.__repr__"]], "make_plots() (rlplotgenerator method)": [[13, "experiments.generate_plots.RLPlotGenerator.make_plots"]], "run_seldonian_experiment() (rlplotgenerator method)": [[13, "experiments.generate_plots.RLPlotGenerator.run_seldonian_experiment"]], "supervisedplotgenerator (class in experiments.generate_plots)": [[14, "experiments.generate_plots.SupervisedPlotGenerator"]], "__init__() (supervisedplotgenerator method)": [[14, "experiments.generate_plots.SupervisedPlotGenerator.__init__"]], "__repr__() (supervisedplotgenerator method)": [[14, "experiments.generate_plots.SupervisedPlotGenerator.__repr__"]], "make_plots() (supervisedplotgenerator method)": [[14, "experiments.generate_plots.SupervisedPlotGenerator.make_plots"]], "run_baseline_experiment() (supervisedplotgenerator method)": [[14, "experiments.generate_plots.SupervisedPlotGenerator.run_baseline_experiment"]], "run_fairlearn_experiment() (supervisedplotgenerator method)": [[14, "experiments.generate_plots.SupervisedPlotGenerator.run_fairlearn_experiment"]], "run_headless_seldonian_experiment() (supervisedplotgenerator method)": [[14, "experiments.generate_plots.SupervisedPlotGenerator.run_headless_seldonian_experiment"]], "run_seldonian_experiment() (supervisedplotgenerator method)": [[14, "experiments.generate_plots.SupervisedPlotGenerator.run_seldonian_experiment"]], "experiments.headless_example": [[15, "module-experiments.headless_example"]], "headlessexample (class in experiments.headless_example)": [[16, "experiments.headless_example.HeadlessExample"]], "__init__() (headlessexample method)": [[16, "experiments.headless_example.HeadlessExample.__init__"]], "__repr__() (headlessexample method)": [[16, "experiments.headless_example.HeadlessExample.__repr__"]], "run() (headlessexample method)": [[16, "experiments.headless_example.HeadlessExample.run"]], "experiments.utils": [[17, "module-experiments.utils"]], "mse() (in module experiments.utils)": [[18, "experiments.utils.MSE"]], "batch_predictions() (in module experiments.utils)": [[19, "experiments.utils.batch_predictions"]], "binary_logistic_loss() (in module experiments.utils)": [[20, "experiments.utils.binary_logistic_loss"]], "deterministic_accuracy() (in module experiments.utils)": [[21, "experiments.utils.deterministic_accuracy"]], "generate_episodes_and_calc_j() (in module experiments.utils)": [[22, "experiments.utils.generate_episodes_and_calc_J"]], "generate_resampled_datasets() (in module experiments.utils)": [[23, "experiments.utils.generate_resampled_datasets"]], "make_batch_epoch_dict_fixedniter() (in module experiments.utils)": [[24, "experiments.utils.make_batch_epoch_dict_fixedniter"]], "make_batch_epoch_dict_min_sample_repeat() (in module experiments.utils)": [[25, "experiments.utils.make_batch_epoch_dict_min_sample_repeat"]], "multiclass_accuracy() (in module experiments.utils)": [[26, "experiments.utils.multiclass_accuracy"]], "multiclass_logistic_loss() (in module experiments.utils)": [[27, "experiments.utils.multiclass_logistic_loss"]], "probabilistic_accuracy() (in module experiments.utils)": [[28, "experiments.utils.probabilistic_accuracy"]]}})