Search.setIndex({"docnames": ["_autosummary/experiments", "_autosummary/experiments.baselines", "_autosummary/experiments.baselines.decision_tree", "_autosummary/experiments.baselines.decision_tree.DecisionTreeClassifierBaseline", "_autosummary/experiments.baselines.linear_regression", "_autosummary/experiments.baselines.linear_regression.LinearRegressionBaseline", "_autosummary/experiments.baselines.logistic_regression", "_autosummary/experiments.baselines.logistic_regression.BinaryLogisticRegressionBaseline", "_autosummary/experiments.baselines.random_classifiers", "_autosummary/experiments.baselines.random_classifiers.UniformRandomClassifierBaseline", "_autosummary/experiments.baselines.random_classifiers.WeightedRandomClassifierBaseline", "_autosummary/experiments.baselines.random_forest", "_autosummary/experiments.baselines.random_forest.RandomForestClassifierBaseline", "_autosummary/experiments.perf_eval_funcs", "_autosummary/experiments.perf_eval_funcs.MSE", "_autosummary/experiments.perf_eval_funcs.binary_logistic_loss", "_autosummary/experiments.perf_eval_funcs.deterministic_accuracy", "_autosummary/experiments.perf_eval_funcs.multiclass_accuracy", "_autosummary/experiments.perf_eval_funcs.multiclass_logistic_loss", "_autosummary/experiments.perf_eval_funcs.probabilistic_accuracy", "api", "index", "overview"], "filenames": ["_autosummary/experiments.rst", "_autosummary/experiments.baselines.rst", "_autosummary/experiments.baselines.decision_tree.rst", "_autosummary/experiments.baselines.decision_tree.DecisionTreeClassifierBaseline.rst", "_autosummary/experiments.baselines.linear_regression.rst", "_autosummary/experiments.baselines.linear_regression.LinearRegressionBaseline.rst", "_autosummary/experiments.baselines.logistic_regression.rst", "_autosummary/experiments.baselines.logistic_regression.BinaryLogisticRegressionBaseline.rst", "_autosummary/experiments.baselines.random_classifiers.rst", "_autosummary/experiments.baselines.random_classifiers.UniformRandomClassifierBaseline.rst", "_autosummary/experiments.baselines.random_classifiers.WeightedRandomClassifierBaseline.rst", "_autosummary/experiments.baselines.random_forest.rst", "_autosummary/experiments.baselines.random_forest.RandomForestClassifierBaseline.rst", "_autosummary/experiments.perf_eval_funcs.rst", "_autosummary/experiments.perf_eval_funcs.MSE.rst", "_autosummary/experiments.perf_eval_funcs.binary_logistic_loss.rst", "_autosummary/experiments.perf_eval_funcs.deterministic_accuracy.rst", "_autosummary/experiments.perf_eval_funcs.multiclass_accuracy.rst", "_autosummary/experiments.perf_eval_funcs.multiclass_logistic_loss.rst", "_autosummary/experiments.perf_eval_funcs.probabilistic_accuracy.rst", "api.rst", "index.rst", "overview.rst"], "titles": ["experiments", "experiments.baselines", "experiments.baselines.decision_tree", "experiments.baselines.decision_tree.DecisionTreeClassifierBaseline", "experiments.baselines.linear_regression", "experiments.baselines.linear_regression.LinearRegressionBaseline", "experiments.baselines.logistic_regression", "experiments.baselines.logistic_regression.BinaryLogisticRegressionBaseline", "experiments.baselines.random_classifiers", "experiments.baselines.random_classifiers.UniformRandomClassifierBaseline", "experiments.baselines.random_classifiers.WeightedRandomClassifierBaseline", "experiments.baselines.random_forest", "experiments.baselines.random_forest.RandomForestClassifierBaseline", "experiments.perf_eval_funcs", "experiments.perf_eval_funcs.MSE", "experiments.perf_eval_funcs.binary_logistic_loss", "experiments.perf_eval_funcs.deterministic_accuracy", "experiments.perf_eval_funcs.multiclass_accuracy", "experiments.perf_eval_funcs.multiclass_logistic_loss", "experiments.perf_eval_funcs.probabilistic_accuracy", "API", "Seldonian Experiments documentation", "Overview"], "terms": {"modul": [0, 1], "run": [0, 21, 22], "seldonian": 0, "gener": [0, 21], "three": [0, 21], "plot": [0, 21], "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 17, 18, 22], "base": [3, 5, 7, 9, 10, 12], "object": [3, 12, 21], "__init__": [3, 5, 7, 9, 10, 12, 21], "implement": [3, 5, 7, 9, 10, 12, 22], "random": [3, 12, 22], "forest": [3, 12], "classifi": [3, 5, 7, 9, 10, 12, 22], "binari": [3, 7, 12, 19], "classif": [3, 7, 12, 17, 18, 19, 22], "task": [3, 12], "__repr__": [3, 5, 7, 9, 10, 12, 21], "return": [3, 5, 7, 9, 10, 12, 18, 22], "repr": [3, 5, 7, 9, 10, 12], "self": [3, 5, 7, 9, 10, 12], "method": [3, 5, 7, 9, 10, 12, 22], "predict": [3, 5, 7, 9, 10, 12, 14, 16, 17, 19, 21, 22], "theta": [3, 5, 7, 9, 10, 12], "x": [3, 5, 7, 9, 10, 12], "us": [3, 5, 7, 12, 16, 17, 19, 21, 22], "train": [3, 5, 7, 12, 21, 22], "model": [3, 5, 7, 12, 16, 17, 19, 22], "posit": [3, 5, 7, 9, 10, 12, 22], "probabl": [3, 7, 9, 10, 12, 17, 19, 22], "isn": [3, 12], "t": [3, 12], "here": [3, 12, 22], "becaus": [3, 12, 22], "ar": [3, 12, 21, 22], "fit": [3, 5, 7, 12, 21], "paramet": [3, 5, 7, 9, 10, 12, 14, 16, 17, 19, 22], "param": [3, 12], "weight": [3, 5, 7, 9, 10, 12], "none": [3, 12], "thi": [3, 12, 21, 22], "case": [3, 12, 22], "featur": [3, 5, 7, 9, 10, 12], "type": [3, 5, 7, 9, 10, 12, 18, 22], "2d": [3, 7, 12], "np": [3, 7, 12, 22], "ndarrai": [3, 5, 7, 9, 10, 12], "y": [3, 5, 7, 12, 14, 15, 16, 17, 18, 19], "instanti": [3, 12], "new": [3, 12, 21, 22], "instanc": [3, 12], "data": [3, 7, 12, 18, 22], "label": [3, 5, 7, 9, 10, 12, 14, 16, 17, 19], "1d": [3, 7, 12], "linearregressionmodel": 5, "alwai": [5, 9, 10], "ha": [5, 9, 10, 22], "prob": [5, 9, 10], "0": [5, 9, 10, 16, 22], "5": [5, 9, 10, 22], "regardless": [5, 9, 10, 22], "input": [5, 9, 10, 22], "pair": 5, "nxm": 5, "numpi": [5, 9, 10], "nx1": 5, "from": [5, 22], "linear": 5, "The": [5, 7, 9, 10, 16, 21, 22], "binarylogisticregressionmodel": 7, "logist": [7, 18, 22], "regress": [7, 22], "let": 7, "i": [7, 16, 17, 19, 21, 22], "number": [7, 22], "datapoint": 7, "j": 7, "includ": [7, 22], "bia": 7, "term": 7, "provi": 7, "k": 7, "arrai": [7, 14, 16, 17, 19, 22], "shape": 7, "have": [7, 9, 10, 22], "each": [7, 9, 10, 17, 19, 22], "point": [7, 18, 22], "length": [7, 22], "1": [7, 16, 17, 19, 22], "observ": [7, 9, 10], "just": 7, "wrapper": 7, "parent": 7, "randomclassifiermodel": [9, 10], "float": [9, 10, 18], "overrid": 10, "child": 10, "n_estim": 12, "100": 12, "function": [13, 22], "y_pred": [14, 15, 16, 17, 18, 19], "kwarg": [14, 15, 16, 17, 18, 19], "calcul": [14, 18], "sampl": [14, 16, 22], "mean": 14, "squar": 14, "error": [14, 17, 19], "true": [14, 16, 17, 19, 22], "fraction": [16, 22], "correct": 16, "best": 16, "onli": [16, 19, 22], "when": [16, 17, 19, 22], "output": [16, 17, 19], "For": [17, 19, 22], "multi": [17, 18], "rate": [17, 19, 22], "dimension": [17, 19], "averag": 18, "loss": 18, "over": 18, "all": [18, 22], "welcom": 21, "librari": [21, 22], "design": 21, "help": [21, 22], "you": [21, 22], "evalu": [21, 22], "perform": [21, 22], "safeti": [21, 22], "algorithm": [21, 22], "sourc": 21, "code": [21, 22], "host": 21, "github": 21, "make": [21, 22], "heavi": 21, "engin": [21, 22], "core": [21, 22], "If": [21, 22], "complet": 21, "see": [21, 22], "overview": 21, "spec": 21, "n_trial": 21, "data_frac": 21, "datagen_method": 21, "n_worker": 21, "perf_eval_fn": 21, "perf_eval_kwarg": 21, "constraint_eval_fn": 21, "constraint_eval_kwarg": 21, "results_dir": 21, "baselin": 21, "file": 21, "an": 21, "api": [21, 22], "decision_tre": 21, "decisiontreeclassifierbaselin": 21, "linear_regress": 21, "linearregressionbaselin": 21, "logistic_regress": [21, 22], "binarylogisticregressionbaselin": 21, "random_classifi": 21, "uniformrandomclassifierbaselin": 21, "weightedrandomclassifierbaselin": 21, "random_forest": 21, "randomforestclassifierbaselin": 21, "perf_eval_func": 21, "mse": 21, "binary_logistic_loss": 21, "deterministic_accuraci": 21, "multiclass_accuraci": 21, "multiclass_logistic_loss": 21, "probabilistic_accuraci": 21, "document": 22, "explain": 22, "how": 22, "sa": 22, "detail": 22, "descript": 22, "what": 22, "machin": 22, "learn": 22, "toolkit": 22, "homepag": 22, "heavili": 22, "depend": 22, "A": 22, "wai": 22, "It": 22, "involv": 22, "mani": 22, "time": 22, "increas": 22, "amount": 22, "we": 22, "valu": 22, "some": 22, "indic": 22, "e": 22, "g": 22, "accuraci": 22, "solut": 22, "ground": 22, "truth": 22, "dataset": 22, "satisfi": 22, "behavior": 22, "constraint": 22, "sometim": 22, "come": 22, "cost": 22, "reduc": 22, "can": 22, "understand": 22, "trade": 22, "off": 22, "cannot": 22, "given": 22, "provid": 22, "No": 22, "found": 22, "failur": 22, "safe": 22, "despit": 22, "determin": 22, "pass": 22, "test": 22, "quantiti": 22, "against": 22, "horizont": 22, "axi": 22, "assum": 22, "access": 22, "real": 22, "world": 22, "problem": 22, "singl": 22, "set": 22, "one": 22, "typic": 22, "doe": 22, "instead": 22, "adopt": 22, "strategi": 22, "bootstrap": 22, "resampl": 22, "order": 22, "approxim": 22, "figur": 22, "show": 22, "gpa": 22, "discuss": 22, "scienc": 22, "paper": 22, "3": 22, "top": 22, "panel": 22, "left": 22, "middl": 22, "right": 22, "thoma": 22, "et": 22, "al": 22, "2019": 22, "wa": 22, "origin": 22, "fair": 22, "dispar": 22, "impact": 22, "two": 22, "green": 22, "dot": 22, "quasi": 22, "dash": 22, "compar": 22, "sever": 22, "standard": 22, "ml": 22, "red": 22, "do": 22, "also": 22, "shown": 22, "awar": 22, "fairlearn": 22, "blue": 22, "magenta": 22, "In": 22, "exampl": 22, "criteria": 22, "black": 22, "line": 22, "repres": 22, "confid": 22, "threshold": 22, "delta": 22, "05": 22, "regim": 22, "your": 22, "supervis": 22, "reinforc": 22, "rl": 22, "produc": 22, "either": 22, "supervisedplotgener": 22, "rlplotgener": 22, "while": 22, "both": 22, "describ": 22, "more": 22, "follow": 22, "requir": 22, "often": 22, "interfac": 22, "creat": 22, "contain": 22, "everyth": 22, "need": 22, "pars": 22, "tree": 22, "underli": 22, "etc": 22, "estim": 22, "uncertainti": 22, "list": 22, "size": 22, "which": 22, "multipli": 22, "compris": 22, "within": 22, "trial": 22, "current": 22, "support": 22, "option": 22, "replac": 22, "obtain": 22, "differ": 22, "same": 22, "dimens": 22, "At": 22, "frac": 22, "first": 22, "generate_episod": 22, "episod": 22, "polici": 22, "parallel": 22, "worker": 22, "multipl": 22, "avail": 22, "independ": 22, "other": 22, "embarrassingli": 22, "program": 22, "less": 22, "than": 22, "max": 22, "primari": 22, "specifi": 22, "must": 22, "explicitli": 22, "nsf": 22, "argument": 22, "them": 22, "dictionari": 22, "empti": 22, "default": 22, "built": 22, "custom": 22, "want": 22, "directori": 22, "save": 22, "result": 22, "call": 22, "plot_gener": 22, "run_seldonian_experi": 22, "make_plot": 22, "baselineexperi": 22, "easi": 22, "develop": 22, "easili": 22, "add": 22, "own": 22, "ad": 22, "alreadi": 22, "p": 22, "everi": 22, "abov": 22, "would": 22, "simpli": 22, "block": 22, "like": 22, "run_baseline_experi": 22, "model_nam": 22, "That": 22, "thei": 22, "fairlearnexperi": 22, "anoth": 22, "narrow": 22, "rang": 22, "progress": 22, "structur": 22, "insid": 22, "look": 22, "after": 22, "via": 22, "qsa_result": 22, "csv": 22, "trial_data": 22, "data_frac_0": 22, "0010_trial_0": 22, "0010_trial_1": 22, "0010_trial_2": 22, "0010_trial_3": 22, "0010_trial_4": 22, "0022_trial_0": 22, "0022_trial_1": 22, "0022_trial_2": 22, "0022_trial_3": 22, "0022_trial_4": 22, "0046_trial_0": 22, "0046_trial_1": 22, "0046_trial_2": 22, "0046_trial_3": 22, "0046_trial_4": 22, "0050_trial_0": 22, "0100_trial_0": 22, "0100_trial_1": 22, "0100_trial_2": 22, "0100_trial_3": 22, "0100_trial_4": 22, "0215_trial_0": 22, "0215_trial_1": 22, "0215_trial_2": 22, "0215_trial_3": 22, "0215_trial_4": 22, "0464_trial_0": 22, "0464_trial_1": 22, "0464_trial_2": 22, "0464_trial_3": 22, "0464_trial_4": 22, "1000_trial_0": 22, "1000_trial_1": 22, "1000_trial_2": 22, "1000_trial_3": 22, "1000_trial_4": 22, "2154_trial_0": 22, "2154_trial_1": 22, "2154_trial_2": 22, "2154_trial_3": 22, "2154_trial_4": 22, "4642_trial_0": 22, "4642_trial_1": 22, "4642_trial_2": 22, "4642_trial_3": 22, "4642_trial_4": 22, "data_frac_1": 22, "0000_trial_0": 22, "0000_trial_1": 22, "0000_trial_2": 22, "0000_trial_3": 22, "0000_trial_4": 22, "resampled_dataset": 22, "resampled_data_trial0": 22, "pkl": 22, "resampled_data_trial1": 22, "resampled_data_trial2": 22, "resampled_data_trial3": 22, "resampled_data_trial4": 22, "logspac": 22, "10": 22, "log": 22, "space": 22, "start": 22, "001": 22, "end": 22, "As": 22, "50": 22, "boolean": 22, "flag": 22, "whether": 22, "fail": 22, "content": 22, "6105_trial36": 22, "trial_i": 22, "passed_safeti": 22, "6105402296585326": 22, "36": 22, "6746247014792527": 22, "fals": 22, "level": 22, "folder": 22, "name": 22, "_result": 22, "logistic_regression_result": 22, "consid": 22, "its": 22, "separ": 22, "curv": 22, "autom": 22, "loan": 22, "approv": 22, "system": 22, "tutori": 22}, "objects": {"": [[0, 0, 0, "-", "experiments"]], "experiments": [[1, 0, 0, "-", "baselines"], [13, 0, 0, "-", "perf_eval_funcs"]], "experiments.baselines": [[2, 0, 0, "-", "decision_tree"], [4, 0, 0, "-", "linear_regression"], [6, 0, 0, "-", "logistic_regression"], [8, 0, 0, "-", "random_classifiers"], [11, 0, 0, "-", "random_forest"]], "experiments.baselines.decision_tree": [[3, 1, 1, "", "DecisionTreeClassifierBaseline"]], "experiments.baselines.decision_tree.DecisionTreeClassifierBaseline": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "__repr__"], [3, 2, 1, "", "predict"], [3, 2, 1, "", "train"]], "experiments.baselines.linear_regression": [[5, 1, 1, "", "LinearRegressionBaseline"]], "experiments.baselines.linear_regression.LinearRegressionBaseline": [[5, 2, 1, "", "__init__"], [5, 2, 1, "", "__repr__"], [5, 2, 1, "", "fit"], [5, 2, 1, "", "predict"]], "experiments.baselines.logistic_regression": [[7, 1, 1, "", "BinaryLogisticRegressionBaseline"]], "experiments.baselines.logistic_regression.BinaryLogisticRegressionBaseline": [[7, 2, 1, "", "__init__"], [7, 2, 1, "", "__repr__"], [7, 2, 1, "", "fit"], [7, 2, 1, "", "predict"], [7, 2, 1, "", "train"]], "experiments.baselines.random_classifiers": [[9, 1, 1, "", "UniformRandomClassifierBaseline"], [10, 1, 1, "", "WeightedRandomClassifierBaseline"]], "experiments.baselines.random_classifiers.UniformRandomClassifierBaseline": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "__repr__"], [9, 2, 1, "", "predict"]], "experiments.baselines.random_classifiers.WeightedRandomClassifierBaseline": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "__repr__"], [10, 2, 1, "", "predict"]], "experiments.baselines.random_forest": [[12, 1, 1, "", "RandomForestClassifierBaseline"]], "experiments.baselines.random_forest.RandomForestClassifierBaseline": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "__repr__"], [12, 2, 1, "", "predict"], [12, 2, 1, "", "train"]], "experiments.perf_eval_funcs": [[14, 3, 1, "", "MSE"], [15, 3, 1, "", "binary_logistic_loss"], [16, 3, 1, "", "deterministic_accuracy"], [17, 3, 1, "", "multiclass_accuracy"], [18, 3, 1, "", "multiclass_logistic_loss"], [19, 3, 1, "", "probabilistic_accuracy"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "titleterms": {"experi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22], "baselin": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 22], "decision_tre": [2, 3], "decisiontreeclassifierbaselin": 3, "linear_regress": [4, 5], "linearregressionbaselin": 5, "logistic_regress": [6, 7], "binarylogisticregressionbaselin": 7, "random_classifi": [8, 9, 10], "uniformrandomclassifierbaselin": 9, "weightedrandomclassifierbaselin": 10, "random_forest": [11, 12], "randomforestclassifierbaselin": 12, "perf_eval_func": [13, 14, 15, 16, 17, 18, 19], "mse": 14, "binary_logistic_loss": 15, "deterministic_accuraci": 16, "multiclass_accuraci": 17, "multiclass_logistic_loss": 18, "probabilistic_accuraci": 19, "api": 20, "seldonian": [21, 22], "document": 21, "tabl": 21, "content": 21, "overview": 22, "three": 22, "plot": 22, "gener": 22, "spec": 22, "object": 22, "n_trial": 22, "data_frac": 22, "datagen_method": 22, "n_worker": 22, "perf_eval_fn": 22, "perf_eval_kwarg": 22, "constraint_eval_fn": 22, "constraint_eval_kwarg": 22, "results_dir": 22, "file": 22, "an": 22}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 58}, "alltitles": {"experiments": [[0, "module-experiments"]], "experiments.baselines": [[1, "module-experiments.baselines"]], "experiments.baselines.decision_tree": [[2, "module-experiments.baselines.decision_tree"]], "experiments.baselines.decision_tree.DecisionTreeClassifierBaseline": [[3, "experiments-baselines-decision-tree-decisiontreeclassifierbaseline"]], "experiments.baselines.linear_regression": [[4, "module-experiments.baselines.linear_regression"]], "experiments.baselines.linear_regression.LinearRegressionBaseline": [[5, "experiments-baselines-linear-regression-linearregressionbaseline"]], "experiments.baselines.logistic_regression": [[6, "module-experiments.baselines.logistic_regression"]], "experiments.baselines.logistic_regression.BinaryLogisticRegressionBaseline": [[7, "experiments-baselines-logistic-regression-binarylogisticregressionbaseline"]], "experiments.baselines.random_classifiers": [[8, "module-experiments.baselines.random_classifiers"]], "experiments.baselines.random_classifiers.UniformRandomClassifierBaseline": [[9, "experiments-baselines-random-classifiers-uniformrandomclassifierbaseline"]], "experiments.baselines.random_classifiers.WeightedRandomClassifierBaseline": [[10, "experiments-baselines-random-classifiers-weightedrandomclassifierbaseline"]], "experiments.baselines.random_forest": [[11, "module-experiments.baselines.random_forest"]], "experiments.baselines.random_forest.RandomForestClassifierBaseline": [[12, "experiments-baselines-random-forest-randomforestclassifierbaseline"]], "experiments.perf_eval_funcs": [[13, "module-experiments.perf_eval_funcs"]], "experiments.perf_eval_funcs.MSE": [[14, "experiments-perf-eval-funcs-mse"]], "experiments.perf_eval_funcs.binary_logistic_loss": [[15, "experiments-perf-eval-funcs-binary-logistic-loss"]], "experiments.perf_eval_funcs.deterministic_accuracy": [[16, "experiments-perf-eval-funcs-deterministic-accuracy"]], "experiments.perf_eval_funcs.multiclass_accuracy": [[17, "experiments-perf-eval-funcs-multiclass-accuracy"]], "experiments.perf_eval_funcs.multiclass_logistic_loss": [[18, "experiments-perf-eval-funcs-multiclass-logistic-loss"]], "experiments.perf_eval_funcs.probabilistic_accuracy": [[19, "experiments-perf-eval-funcs-probabilistic-accuracy"]], "API": [[20, "api"]], "Seldonian Experiments documentation": [[21, "seldonian-experiments-documentation"]], "Table of contents": [[21, "table-of-contents"]], "Overview": [[22, "overview"]], "Seldonian experiments": [[22, "seldonian-experiments"]], "Three Plots": [[22, "three-plots"]], "Plot generator": [[22, "plot-generator"]], "Spec object": [[22, "spec-object"]], "n_trials": [[22, "n-trials"]], "data_fracs": [[22, "data-fracs"]], "datagen_method": [[22, "datagen-method"]], "n_workers": [[22, "n-workers"]], "perf_eval_fn": [[22, "perf-eval-fn"]], "perf_eval_kwargs": [[22, "perf-eval-kwargs"]], "constraint_eval_fns": [[22, "constraint-eval-fns"]], "constraint_eval_kwargs": [[22, "constraint-eval-kwargs"]], "results_dir": [[22, "results-dir"]], "Baselines": [[22, "baselines"]], "Files generated in an experiment": [[22, "files-generated-in-an-experiment"]]}, "indexentries": {"experiments": [[0, "module-experiments"]], "module": [[0, "module-experiments"], [1, "module-experiments.baselines"], [2, "module-experiments.baselines.decision_tree"], [4, "module-experiments.baselines.linear_regression"], [6, "module-experiments.baselines.logistic_regression"], [8, "module-experiments.baselines.random_classifiers"], [11, "module-experiments.baselines.random_forest"], [13, "module-experiments.perf_eval_funcs"]], "experiments.baselines": [[1, "module-experiments.baselines"]], "experiments.baselines.decision_tree": [[2, "module-experiments.baselines.decision_tree"]], "decisiontreeclassifierbaseline (class in experiments.baselines.decision_tree)": [[3, "experiments.baselines.decision_tree.DecisionTreeClassifierBaseline"]], "__init__() (decisiontreeclassifierbaseline method)": [[3, "experiments.baselines.decision_tree.DecisionTreeClassifierBaseline.__init__"]], "__repr__() (decisiontreeclassifierbaseline method)": [[3, "experiments.baselines.decision_tree.DecisionTreeClassifierBaseline.__repr__"]], "predict() (decisiontreeclassifierbaseline method)": [[3, "experiments.baselines.decision_tree.DecisionTreeClassifierBaseline.predict"]], "train() (decisiontreeclassifierbaseline method)": [[3, "experiments.baselines.decision_tree.DecisionTreeClassifierBaseline.train"]], "experiments.baselines.linear_regression": [[4, "module-experiments.baselines.linear_regression"]], "linearregressionbaseline (class in experiments.baselines.linear_regression)": [[5, "experiments.baselines.linear_regression.LinearRegressionBaseline"]], "__init__() (linearregressionbaseline method)": [[5, "experiments.baselines.linear_regression.LinearRegressionBaseline.__init__"]], "__repr__() (linearregressionbaseline method)": [[5, "experiments.baselines.linear_regression.LinearRegressionBaseline.__repr__"]], "fit() (linearregressionbaseline method)": [[5, "experiments.baselines.linear_regression.LinearRegressionBaseline.fit"]], "predict() (linearregressionbaseline method)": [[5, "experiments.baselines.linear_regression.LinearRegressionBaseline.predict"]], "experiments.baselines.logistic_regression": [[6, "module-experiments.baselines.logistic_regression"]], "binarylogisticregressionbaseline (class in experiments.baselines.logistic_regression)": [[7, "experiments.baselines.logistic_regression.BinaryLogisticRegressionBaseline"]], "__init__() (binarylogisticregressionbaseline method)": [[7, "experiments.baselines.logistic_regression.BinaryLogisticRegressionBaseline.__init__"]], "__repr__() (binarylogisticregressionbaseline method)": [[7, "experiments.baselines.logistic_regression.BinaryLogisticRegressionBaseline.__repr__"]], "fit() (binarylogisticregressionbaseline method)": [[7, "experiments.baselines.logistic_regression.BinaryLogisticRegressionBaseline.fit"]], "predict() (binarylogisticregressionbaseline method)": [[7, "experiments.baselines.logistic_regression.BinaryLogisticRegressionBaseline.predict"]], "train() (binarylogisticregressionbaseline method)": [[7, "experiments.baselines.logistic_regression.BinaryLogisticRegressionBaseline.train"]], "experiments.baselines.random_classifiers": [[8, "module-experiments.baselines.random_classifiers"]], "uniformrandomclassifierbaseline (class in experiments.baselines.random_classifiers)": [[9, "experiments.baselines.random_classifiers.UniformRandomClassifierBaseline"]], "__init__() (uniformrandomclassifierbaseline method)": [[9, "experiments.baselines.random_classifiers.UniformRandomClassifierBaseline.__init__"]], "__repr__() (uniformrandomclassifierbaseline method)": [[9, "experiments.baselines.random_classifiers.UniformRandomClassifierBaseline.__repr__"]], "predict() (uniformrandomclassifierbaseline method)": [[9, "experiments.baselines.random_classifiers.UniformRandomClassifierBaseline.predict"]], "weightedrandomclassifierbaseline (class in experiments.baselines.random_classifiers)": [[10, "experiments.baselines.random_classifiers.WeightedRandomClassifierBaseline"]], "__init__() (weightedrandomclassifierbaseline method)": [[10, "experiments.baselines.random_classifiers.WeightedRandomClassifierBaseline.__init__"]], "__repr__() (weightedrandomclassifierbaseline method)": [[10, "experiments.baselines.random_classifiers.WeightedRandomClassifierBaseline.__repr__"]], "predict() (weightedrandomclassifierbaseline method)": [[10, "experiments.baselines.random_classifiers.WeightedRandomClassifierBaseline.predict"]], "experiments.baselines.random_forest": [[11, "module-experiments.baselines.random_forest"]], "randomforestclassifierbaseline (class in experiments.baselines.random_forest)": [[12, "experiments.baselines.random_forest.RandomForestClassifierBaseline"]], "__init__() (randomforestclassifierbaseline method)": [[12, "experiments.baselines.random_forest.RandomForestClassifierBaseline.__init__"]], "__repr__() (randomforestclassifierbaseline method)": [[12, "experiments.baselines.random_forest.RandomForestClassifierBaseline.__repr__"]], "predict() (randomforestclassifierbaseline method)": [[12, "experiments.baselines.random_forest.RandomForestClassifierBaseline.predict"]], "train() (randomforestclassifierbaseline method)": [[12, "experiments.baselines.random_forest.RandomForestClassifierBaseline.train"]], "experiments.perf_eval_funcs": [[13, "module-experiments.perf_eval_funcs"]], "mse() (in module experiments.perf_eval_funcs)": [[14, "experiments.perf_eval_funcs.MSE"]], "binary_logistic_loss() (in module experiments.perf_eval_funcs)": [[15, "experiments.perf_eval_funcs.binary_logistic_loss"]], "deterministic_accuracy() (in module experiments.perf_eval_funcs)": [[16, "experiments.perf_eval_funcs.deterministic_accuracy"]], "multiclass_accuracy() (in module experiments.perf_eval_funcs)": [[17, "experiments.perf_eval_funcs.multiclass_accuracy"]], "multiclass_logistic_loss() (in module experiments.perf_eval_funcs)": [[18, "experiments.perf_eval_funcs.multiclass_logistic_loss"]], "probabilistic_accuracy() (in module experiments.perf_eval_funcs)": [[19, "experiments.perf_eval_funcs.probabilistic_accuracy"]]}})