Search.setIndex({"docnames": ["_autosummary/experiments", "_autosummary/experiments.experiments", "_autosummary/experiments.experiments.BaselineExperiment", "_autosummary/experiments.experiments.Experiment", "_autosummary/experiments.experiments.FairlearnExperiment", "_autosummary/experiments.experiments.SeldonianExperiment", "_autosummary/experiments.generate_plots", "_autosummary/experiments.generate_plots.PlotGenerator", "_autosummary/experiments.generate_plots.RLPlotGenerator", "_autosummary/experiments.generate_plots.SupervisedPlotGenerator", "_autosummary/experiments.utils", "_autosummary/experiments.utils.MSE", "_autosummary/experiments.utils.generate_episodes_and_calc_J", "_autosummary/experiments.utils.generate_resampled_datasets", "api", "index", "overview"], "filenames": ["_autosummary/experiments.rst", "_autosummary/experiments.experiments.rst", "_autosummary/experiments.experiments.BaselineExperiment.rst", "_autosummary/experiments.experiments.Experiment.rst", "_autosummary/experiments.experiments.FairlearnExperiment.rst", "_autosummary/experiments.experiments.SeldonianExperiment.rst", "_autosummary/experiments.generate_plots.rst", "_autosummary/experiments.generate_plots.PlotGenerator.rst", "_autosummary/experiments.generate_plots.RLPlotGenerator.rst", "_autosummary/experiments.generate_plots.SupervisedPlotGenerator.rst", "_autosummary/experiments.utils.rst", "_autosummary/experiments.utils.MSE.rst", "_autosummary/experiments.utils.generate_episodes_and_calc_J.rst", "_autosummary/experiments.utils.generate_resampled_datasets.rst", "api.rst", "index.rst", "overview.rst"], "titles": ["experiments", "experiments.experiments", "experiments.experiments.BaselineExperiment", "experiments.experiments.Experiment", "experiments.experiments.FairlearnExperiment", "experiments.experiments.SeldonianExperiment", "experiments.generate_plots", "experiments.generate_plots.PlotGenerator", "experiments.generate_plots.RLPlotGenerator", "experiments.generate_plots.SupervisedPlotGenerator", "experiments.utils", "experiments.utils.MSE", "experiments.utils.generate_episodes_and_calc_J", "experiments.utils.generate_resampled_datasets", "API", "Seldonian Experiments documentation", "Overview"], "terms": {"modul": [0, 1, 6], "run": [0, 1, 2, 3, 4, 5, 7, 8, 9, 15, 16], "seldonian": [0, 1, 2, 5, 7, 8, 9], "gener": [0, 7, 8, 9, 12, 13, 15], "three": [0, 6, 7, 8, 9, 15], "plot": [0, 6, 7, 8, 9, 15], "class": [1, 2, 3, 4, 5, 6, 7, 8, 9, 16], "model_nam": [2, 3, 5, 9, 16], "results_dir": [2, 3, 4, 5, 7, 8, 9, 15], "base": [2, 3, 4, 5, 7, 8, 9], "__init__": [2, 3, 4, 5, 7, 8, 9, 15], "baselin": [2, 3, 9, 15], "against": [2, 16], "which": [2, 3, 4, 5, 7, 8, 9, 13, 16], "compar": [2, 16], "paramet": [2, 3, 4, 5, 7, 8, 9, 11, 13, 16], "str": [2, 3, 4, 5, 7, 8, 9, 13], "The": [2, 3, 4, 5, 7, 8, 9, 13, 15, 16], "string": [2, 3, 5], "name": [2, 3, 4, 5, 9, 16], "model": [2, 3, 4, 5, 7, 8, 9, 16], "e": [2, 3, 7, 8, 9, 13, 16], "g": [2, 3, 7, 8, 9, 16], "logistic_regress": [2, 3, 16], "parent": [2, 3, 4, 5, 13], "directori": [2, 3, 4, 5, 7, 8, 9, 13, 16], "save": [2, 3, 4, 5, 7, 8, 9, 13, 16], "ani": [2, 3, 4, 5], "experiment": [2, 3, 4, 5], "result": [2, 3, 4, 5, 7, 8, 9, 16], "__repr__": [2, 3, 4, 5, 7, 8, 9, 15], "return": [2, 3, 4, 5, 7, 8, 9, 12, 16], "repr": [2, 3, 4, 5, 7, 8, 9], "self": [2, 3, 4, 5, 7, 8, 9], "method": [2, 3, 4, 5, 7, 8, 9, 16], "aggregate_result": [2, 3, 4, 5, 15], "kwarg": [2, 3, 4, 5, 7, 8, 9, 11, 12], "group": [2, 3, 4, 5], "togeth": [2, 3, 4, 5], "data": [2, 3, 4, 5, 7, 8, 9, 16], "each": [2, 3, 4, 5, 7, 8, 9, 13, 16], "trial": [2, 3, 4, 5, 7, 8, 9, 13, 16], "file": [2, 3, 4, 5, 7, 8, 9, 15], "singl": [2, 3, 4, 5, 16], "csv": [2, 3, 4, 5, 13, 16], "run_baseline_tri": [2, 15], "data_frac": [2, 4, 5, 7, 8, 9, 15], "trial_i": [2, 4, 5, 16], "float": [2, 4, 5, 7, 8, 9, 12], "fraction": [2, 4, 5, 7, 8, 9, 16], "overal": [2, 4, 5, 7, 8, 9], "dataset": [2, 4, 5, 7, 8, 9, 13, 16], "size": [2, 4, 5, 7, 8, 9, 16], "us": [2, 4, 5, 7, 8, 9, 10, 13, 15, 16], "int": [2, 4, 5, 7, 8, 9, 13], "index": [2, 4, 5], "run_experi": [2, 4, 5, 15], "write_trial_result": [2, 3, 4, 5, 15], "colnam": [2, 3, 4, 5], "trial_dir": [2, 3, 4, 5], "verbos": [2, 3, 4, 5, 8, 9], "fals": [2, 3, 4, 5, 8, 9, 16], "write": [2, 3, 4, 5], "out": [2, 3, 4, 5], "from": [2, 3, 4, 5, 7, 8, 9, 13, 16], "list": [2, 3, 4, 5, 7, 8, 9, 12, 16], "inform": [2, 3, 4, 5], "item": [2, 3, 4, 5], "These": [2, 3, 4, 5], "compris": [2, 3, 4, 5, 16], "header": [2, 3, 4, 5], "bool": [2, 3, 4, 5, 8, 9], "true": [2, 3, 4, 5, 7, 8, 9, 11, 16], "print": [2, 3, 4, 5], "filenam": [2, 3, 4, 5, 7, 8, 9], "object": [3, 7, 8, 9, 15], "fairlearn_epsilon_constraint": [4, 9], "fairlearn": [4, 9, 16], "valu": [4, 16], "epsilon": 4, "threshold": [4, 16], "constraint": [4, 5, 7, 8, 9, 16], "evaluate_constraint_funct": [4, 5, 15], "y_pred": [4, 11], "test_label": 4, "fairlearn_constraint_nam": [4, 9], "epsilon_ev": 4, "eval_method": 4, "nativ": 4, "sensitive_featur": 4, "evalu": [4, 5, 7, 8, 9, 15, 16], "function": [4, 5, 7, 8, 9, 10, 13, 16], "predict": [4, 11, 16], "1d": 4, "arrai": [4, 11, 16], "label": [4, 7, 8, 9, 11], "same": [4, 13, 16], "shape": [4, 13], "default": [4, 7, 8, 9, 16], "two": [4, 16], "option": [4, 5, 13, 16], "column": 4, "ar": [4, 7, 8, 9, 13, 15, 16], "consid": [4, 16], "sensit": 4, "get_fairlearn_predict": [4, 15], "mitig": 4, "x_test_fairlearn": 4, "get": 4, "consist": 4, "potenti": 4, "more": [4, 16], "than": [4, 16], "one": [4, 16], "predictor": 4, "mani": [4, 16], "weight": [4, 5], "For": [4, 16], "non": 4, "zero": 4, "proport": [4, 7, 8, 9], "point": [4, 16], "given": [4, 5, 16], "test": [4, 16], "featur": 4, "run_fairlearn_tri": [4, 15], "onli": [5, 16], "i": [5, 7, 8, 9, 12, 13, 15, 16], "current": [5, 16], "qsa": [5, 15], "quasi": [5, 16], "algorithm": [5, 7, 8, 9, 15, 16], "solut": [5, 7, 8, 9, 16], "constraint_eval_fn": [5, 7, 8, 9, 15], "constraint_eval_kwarg": [5, 7, 8, 9, 15], "helper": 5, "determin": [5, 16], "whether": [5, 8, 9, 16], "wa": [5, 16], "safe": [5, 16], "ground": [5, 7, 8, 9, 12, 16], "truth": [5, 7, 8, 9, 12, 16], "numpi": 5, "ndarrai": 5, "found": [5, 16], "dure": 5, "candid": [5, 7, 8, 9], "select": [5, 7, 8, 9], "an": [5, 7, 8, 9, 15], "empti": [5, 7, 8, 9, 16], "pars": [5, 7, 8, 9, 16], "tree": [5, 7, 8, 9, 16], "dict": [5, 7, 8, 9], "keyword": [5, 7, 8, 9], "argument": [5, 7, 8, 9, 16], "pass": [5, 7, 8, 9, 16], "make": [6, 7, 8, 9, 13, 15, 16], "spec": [7, 8, 9, 15], "n_trial": [7, 8, 9, 13, 15], "datagen_method": [7, 8, 9, 15], "perf_eval_fn": [7, 8, 9, 15], "n_worker": [7, 8, 9, 15], "perf_eval_kwarg": [7, 8, 9, 15], "1": [7, 16], "perform": [7, 8, 9, 15, 16], "2": 7, "rate": [7, 16], "3": [7, 16], "failur": [7, 16], "all": [7, 16], "v": 7, "amount": [7, 16], "specif": [7, 8, 9], "number": [7, 8, 9, 13, 16], "time": [7, 8, 9, 16], "error": [7, 8, 9, 11], "bar": [7, 8, 9], "horizont": [7, 8, 9, 16], "axi": [7, 8, 9, 16], "resampl": [7, 8, 9, 13, 16], "obtain": [7, 8, 9, 16], "signatur": [7, 8, 9], "func": [7, 8, 9], "theta": [7, 8, 9], "where": [7, 8, 9, 12], "worker": [7, 8, 9, 16], "multiprocess": [7, 8, 9], "If": [7, 8, 9, 15, 16], "provid": [7, 8, 9, 16], "extra": [7, 8, 9], "make_plot": [7, 8, 9, 15, 16], "fontsiz": [7, 8, 9], "12": [7, 8, 9], "legend_fonts": [7, 8, 9], "8": [7, 8, 9], "performance_label": [7, 8, 9], "accuraci": [7, 8, 9, 16], "marker_s": [7, 8, 9], "20": [7, 8, 9], "include_legend": [7, 8, 9], "savenam": [7, 8, 9], "none": [7, 8, 9], "font": [7, 8, 9], "text": [7, 8, 9], "legend": [7, 8, 9], "y": [7, 8, 9, 11], "you": [7, 8, 9, 15, 16], "want": [7, 8, 9, 16], "path": [7, 8, 9], "disk": [7, 8, 9], "hyperparameter_and_setting_dict": 8, "plotgener": [8, 9, 15], "rl": [8, 16], "run_seldonian_experi": [8, 9, 15, 16], "attribut": [8, 9], "assign": [8, 9], "displai": [8, 9], "stdout": [8, 9], "while": [8, 9, 16], "supervis": [9, 13, 16], "run_baseline_experi": [9, 15, 16], "run_fairlearn_experi": [9, 15], "fairlearn_sensitive_feature_nam": 9, "fairlearn_epsilon_ev": 9, "fairlearn_eval_kwarg": 9, "librari": [9, 10, 15, 16], "rest": 10, "calcul": [11, 12], "sampl": [11, 16], "mean": 11, "squar": 11, "expect": 12, "discount": 12, "episod": [12, 16], "j": 12, "type": [12, 16], "df": 13, "save_dir": 13, "file_format": 13, "learn": [13, 16], "replac": [13, 16], "panda": 13, "datafram": 13, "creat": [13, 16], "input": [13, 16], "origin": [13, 16], "format": 13, "pkl": [13, 16], "welcom": 15, "thi": [15, 16], "design": 15, "help": [15, 16], "safeti": [15, 16], "sourc": 15, "code": [15, 16], "host": 15, "github": 15, "heavi": 15, "engin": [15, 16], "core": [15, 16], "complet": 15, "new": [15, 16], "see": [15, 16], "overview": 15, "api": [15, 16], "baselineexperi": [15, 16], "fairlearnexperi": [15, 16], "seldonianexperi": 15, "generate_plot": 15, "rlplotgener": [15, 16], "supervisedplotgener": [15, 16], "util": 15, "mse": 15, "generate_episodes_and_calc_j": 15, "generate_resampled_dataset": 15, "document": 16, "explain": 16, "how": 16, "sa": 16, "detail": 16, "descript": 16, "what": 16, "machin": 16, "toolkit": 16, "homepag": 16, "heavili": 16, "depend": 16, "A": 16, "wai": 16, "It": 16, "involv": 16, "increas": 16, "we": 16, "primari": 16, "satisfi": 16, "behavior": 16, "sometim": 16, "come": 16, "cost": 16, "reduc": 16, "can": 16, "understand": 16, "trade": 16, "off": 16, "probabl": 16, "cannot": 16, "No": 16, "some": 16, "despit": 16, "quantiti": 16, "assum": 16, "access": 16, "real": 16, "world": 16, "problem": 16, "set": 16, "typic": 16, "doe": 16, "have": 16, "instead": 16, "adopt": 16, "strategi": 16, "bootstrap": 16, "order": 16, "approxim": 16, "figur": 16, "show": 16, "gpa": 16, "discuss": 16, "scienc": 16, "paper": 16, "top": 16, "panel": 16, "left": 16, "middl": 16, "right": 16, "train": 16, "thoma": 16, "et": 16, "al": 16, "2019": 16, "fair": 16, "case": 16, "dispar": 16, "impact": 16, "classif": 16, "green": 16, "dot": 16, "dash": 16, "sever": 16, "standard": 16, "ml": 16, "red": 16, "do": 16, "includ": 16, "also": 16, "shown": 16, "awar": 16, "blue": 16, "magenta": 16, "In": 16, "exampl": 16, "criteria": 16, "black": 16, "line": 16, "repres": 16, "confid": 16, "delta": 16, "0": 16, "05": 16, "regim": 16, "your": 16, "reinforc": 16, "produc": 16, "either": 16, "both": 16, "describ": 16, "here": 16, "regardless": 16, "follow": 16, "requir": 16, "often": 16, "interfac": 16, "contain": 16, "everyth": 16, "need": 16, "underli": 16, "etc": 16, "estim": 16, "uncertainti": 16, "multipli": 16, "within": 16, "support": 16, "differ": 16, "dimens": 16, "At": 16, "frac": 16, "first": 16, "generate_episod": 16, "polici": 16, "parallel": 16, "when": 16, "multipl": 16, "avail": 16, "becaus": 16, "independ": 16, "other": 16, "embarrassingli": 16, "program": 16, "less": 16, "max": 16, "specifi": 16, "must": 16, "explicitli": 16, "nsf": 16, "ha": 16, "them": 16, "dictionari": 16, "built": 16, "custom": 16, "length": 16, "call": 16, "plot_gener": 16, "easi": 16, "develop": 16, "easili": 16, "add": 16, "own": 16, "ad": 16, "alreadi": 16, "logist": 16, "regress": 16, "random": 16, "classifi": 16, "posit": 16, "p": 16, "5": 16, "everi": 16, "abov": 16, "would": 16, "simpli": 16, "block": 16, "like": 16, "That": 16, "thei": 16, "implement": 16, "anoth": 16, "narrow": 16, "rang": 16, "progress": 16, "structur": 16, "insid": 16, "look": 16, "after": 16, "via": 16, "qsa_result": 16, "trial_data": 16, "data_frac_0": 16, "0010_trial_0": 16, "0010_trial_1": 16, "0010_trial_2": 16, "0010_trial_3": 16, "0010_trial_4": 16, "0022_trial_0": 16, "0022_trial_1": 16, "0022_trial_2": 16, "0022_trial_3": 16, "0022_trial_4": 16, "0046_trial_0": 16, "0046_trial_1": 16, "0046_trial_2": 16, "0046_trial_3": 16, "0046_trial_4": 16, "0050_trial_0": 16, "0100_trial_0": 16, "0100_trial_1": 16, "0100_trial_2": 16, "0100_trial_3": 16, "0100_trial_4": 16, "0215_trial_0": 16, "0215_trial_1": 16, "0215_trial_2": 16, "0215_trial_3": 16, "0215_trial_4": 16, "0464_trial_0": 16, "0464_trial_1": 16, "0464_trial_2": 16, "0464_trial_3": 16, "0464_trial_4": 16, "1000_trial_0": 16, "1000_trial_1": 16, "1000_trial_2": 16, "1000_trial_3": 16, "1000_trial_4": 16, "2154_trial_0": 16, "2154_trial_1": 16, "2154_trial_2": 16, "2154_trial_3": 16, "2154_trial_4": 16, "4642_trial_0": 16, "4642_trial_1": 16, "4642_trial_2": 16, "4642_trial_3": 16, "4642_trial_4": 16, "data_frac_1": 16, "0000_trial_0": 16, "0000_trial_1": 16, "0000_trial_2": 16, "0000_trial_3": 16, "0000_trial_4": 16, "resampled_dataset": 16, "resampled_data_trial0": 16, "resampled_data_trial1": 16, "resampled_data_trial2": 16, "resampled_data_trial3": 16, "resampled_data_trial4": 16, "np": 16, "logspac": 16, "10": 16, "log": 16, "space": 16, "start": 16, "001": 16, "end": 16, "As": 16, "50": 16, "boolean": 16, "flag": 16, "fail": 16, "content": 16, "6105_trial36": 16, "passed_safeti": 16, "6105402296585326": 16, "36": 16, "6746247014792527": 16, "level": 16, "folder": 16, "_result": 16, "logistic_regression_result": 16, "its": 16, "separ": 16, "curv": 16, "autom": 16, "loan": 16, "approv": 16, "system": 16, "tutori": 16}, "objects": {"": [[0, 0, 0, "-", "experiments"]], "experiments": [[1, 0, 0, "-", "experiments"], [6, 0, 0, "-", "generate_plots"], [10, 0, 0, "-", "utils"]], "experiments.experiments": [[2, 1, 1, "", "BaselineExperiment"], [3, 1, 1, "", "Experiment"], [4, 1, 1, "", "FairlearnExperiment"], [5, 1, 1, "", "SeldonianExperiment"]], "experiments.experiments.BaselineExperiment": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "__repr__"], [2, 2, 1, "", "aggregate_results"], [2, 2, 1, "", "run_baseline_trial"], [2, 2, 1, "", "run_experiment"], [2, 2, 1, "", "write_trial_result"]], "experiments.experiments.Experiment": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "__repr__"], [3, 2, 1, "", "aggregate_results"], [3, 2, 1, "", "write_trial_result"]], "experiments.experiments.FairlearnExperiment": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "__repr__"], [4, 2, 1, "", "aggregate_results"], [4, 2, 1, "", "evaluate_constraint_function"], [4, 2, 1, "", "get_fairlearn_predictions"], [4, 2, 1, "", "run_experiment"], [4, 2, 1, "", "run_fairlearn_trial"], [4, 2, 1, "", "write_trial_result"]], "experiments.experiments.SeldonianExperiment": [[5, 2, 1, "", "QSA"], [5, 2, 1, "", "__init__"], [5, 2, 1, "", "__repr__"], [5, 2, 1, "", "aggregate_results"], [5, 2, 1, "", "evaluate_constraint_functions"], [5, 2, 1, "", "run_experiment"], [5, 2, 1, "", "write_trial_result"]], "experiments.generate_plots": [[7, 1, 1, "", "PlotGenerator"], [8, 1, 1, "", "RLPlotGenerator"], [9, 1, 1, "", "SupervisedPlotGenerator"]], "experiments.generate_plots.PlotGenerator": [[7, 2, 1, "", "__init__"], [7, 2, 1, "", "__repr__"], [7, 2, 1, "", "make_plots"]], "experiments.generate_plots.RLPlotGenerator": [[8, 2, 1, "", "__init__"], [8, 2, 1, "", "__repr__"], [8, 2, 1, "", "make_plots"], [8, 2, 1, "", "run_seldonian_experiment"]], "experiments.generate_plots.SupervisedPlotGenerator": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "__repr__"], [9, 2, 1, "", "make_plots"], [9, 2, 1, "", "run_baseline_experiment"], [9, 2, 1, "", "run_fairlearn_experiment"], [9, 2, 1, "", "run_seldonian_experiment"]], "experiments.utils": [[11, 3, 1, "", "MSE"], [12, 3, 1, "", "generate_episodes_and_calc_J"], [13, 3, 1, "", "generate_resampled_datasets"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "titleterms": {"experi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16], "baselineexperi": 2, "fairlearnexperi": 4, "seldonianexperi": 5, "generate_plot": [6, 7, 8, 9], "plotgener": 7, "rlplotgener": 8, "supervisedplotgener": 9, "util": [10, 11, 12, 13], "mse": 11, "generate_episodes_and_calc_j": 12, "generate_resampled_dataset": 13, "api": 14, "seldonian": [15, 16], "document": 15, "tabl": 15, "content": 15, "overview": 16, "three": 16, "plot": 16, "gener": 16, "spec": 16, "object": 16, "n_trial": 16, "data_frac": 16, "datagen_method": 16, "n_worker": 16, "perf_eval_fn": 16, "perf_eval_kwarg": 16, "constraint_eval_fn": 16, "constraint_eval_kwarg": 16, "results_dir": 16, "baselin": 16, "file": 16, "an": 16}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"experiments": [[0, "module-experiments"]], "experiments.experiments": [[1, "module-experiments.experiments"]], "experiments.experiments.BaselineExperiment": [[2, "experiments-experiments-baselineexperiment"]], "experiments.experiments.Experiment": [[3, "experiments-experiments-experiment"]], "experiments.experiments.FairlearnExperiment": [[4, "experiments-experiments-fairlearnexperiment"]], "experiments.experiments.SeldonianExperiment": [[5, "experiments-experiments-seldonianexperiment"]], "experiments.generate_plots": [[6, "module-experiments.generate_plots"]], "experiments.generate_plots.PlotGenerator": [[7, "experiments-generate-plots-plotgenerator"]], "experiments.generate_plots.RLPlotGenerator": [[8, "experiments-generate-plots-rlplotgenerator"]], "experiments.generate_plots.SupervisedPlotGenerator": [[9, "experiments-generate-plots-supervisedplotgenerator"]], "experiments.utils": [[10, "module-experiments.utils"]], "experiments.utils.MSE": [[11, "experiments-utils-mse"]], "experiments.utils.generate_episodes_and_calc_J": [[12, "experiments-utils-generate-episodes-and-calc-j"]], "experiments.utils.generate_resampled_datasets": [[13, "experiments-utils-generate-resampled-datasets"]], "API": [[14, "api"]], "Seldonian Experiments documentation": [[15, "seldonian-experiments-documentation"]], "Table of contents": [[15, "table-of-contents"]], "Overview": [[16, "overview"]], "Seldonian experiments": [[16, "seldonian-experiments"]], "Three Plots": [[16, "three-plots"]], "Plot generator": [[16, "plot-generator"]], "Spec object": [[16, "spec-object"]], "n_trials": [[16, "n-trials"]], "data_fracs": [[16, "data-fracs"]], "datagen_method": [[16, "datagen-method"]], "n_workers": [[16, "n-workers"]], "perf_eval_fn": [[16, "perf-eval-fn"]], "perf_eval_kwargs": [[16, "perf-eval-kwargs"]], "constraint_eval_fns": [[16, "constraint-eval-fns"]], "constraint_eval_kwargs": [[16, "constraint-eval-kwargs"]], "results_dir": [[16, "results-dir"]], "Baselines": [[16, "baselines"]], "Files generated in an experiment": [[16, "files-generated-in-an-experiment"]]}, "indexentries": {"experiments": [[0, "module-experiments"]], "module": [[0, "module-experiments"], [1, "module-experiments.experiments"], [6, "module-experiments.generate_plots"], [10, "module-experiments.utils"]], "experiments.experiments": [[1, "module-experiments.experiments"]], "baselineexperiment (class in experiments.experiments)": [[2, "experiments.experiments.BaselineExperiment"]], "__init__() (baselineexperiment method)": [[2, "experiments.experiments.BaselineExperiment.__init__"]], "__repr__() (baselineexperiment method)": [[2, "experiments.experiments.BaselineExperiment.__repr__"]], "aggregate_results() (baselineexperiment method)": [[2, "experiments.experiments.BaselineExperiment.aggregate_results"]], "run_baseline_trial() (baselineexperiment method)": [[2, "experiments.experiments.BaselineExperiment.run_baseline_trial"]], "run_experiment() (baselineexperiment method)": [[2, "experiments.experiments.BaselineExperiment.run_experiment"]], "write_trial_result() (baselineexperiment method)": [[2, "experiments.experiments.BaselineExperiment.write_trial_result"]], "experiment (class in experiments.experiments)": [[3, "experiments.experiments.Experiment"]], "__init__() (experiment method)": [[3, "experiments.experiments.Experiment.__init__"]], "__repr__() (experiment method)": [[3, "experiments.experiments.Experiment.__repr__"]], "aggregate_results() (experiment method)": [[3, "experiments.experiments.Experiment.aggregate_results"]], "write_trial_result() (experiment method)": [[3, "experiments.experiments.Experiment.write_trial_result"]], "fairlearnexperiment (class in experiments.experiments)": [[4, "experiments.experiments.FairlearnExperiment"]], "__init__() (fairlearnexperiment method)": [[4, "experiments.experiments.FairlearnExperiment.__init__"]], "__repr__() (fairlearnexperiment method)": [[4, "experiments.experiments.FairlearnExperiment.__repr__"]], "aggregate_results() (fairlearnexperiment method)": [[4, "experiments.experiments.FairlearnExperiment.aggregate_results"]], "evaluate_constraint_function() (fairlearnexperiment method)": [[4, "experiments.experiments.FairlearnExperiment.evaluate_constraint_function"]], "get_fairlearn_predictions() (fairlearnexperiment method)": [[4, "experiments.experiments.FairlearnExperiment.get_fairlearn_predictions"]], "run_experiment() (fairlearnexperiment method)": [[4, "experiments.experiments.FairlearnExperiment.run_experiment"]], "run_fairlearn_trial() (fairlearnexperiment method)": [[4, "experiments.experiments.FairlearnExperiment.run_fairlearn_trial"]], "write_trial_result() (fairlearnexperiment method)": [[4, "experiments.experiments.FairlearnExperiment.write_trial_result"]], "qsa() (seldonianexperiment method)": [[5, "experiments.experiments.SeldonianExperiment.QSA"]], "seldonianexperiment (class in experiments.experiments)": [[5, "experiments.experiments.SeldonianExperiment"]], "__init__() (seldonianexperiment method)": [[5, "experiments.experiments.SeldonianExperiment.__init__"]], "__repr__() (seldonianexperiment method)": [[5, "experiments.experiments.SeldonianExperiment.__repr__"]], "aggregate_results() (seldonianexperiment method)": [[5, "experiments.experiments.SeldonianExperiment.aggregate_results"]], "evaluate_constraint_functions() (seldonianexperiment method)": [[5, "experiments.experiments.SeldonianExperiment.evaluate_constraint_functions"]], "run_experiment() (seldonianexperiment method)": [[5, "experiments.experiments.SeldonianExperiment.run_experiment"]], "write_trial_result() (seldonianexperiment method)": [[5, "experiments.experiments.SeldonianExperiment.write_trial_result"]], "experiments.generate_plots": [[6, "module-experiments.generate_plots"]], "plotgenerator (class in experiments.generate_plots)": [[7, "experiments.generate_plots.PlotGenerator"]], "__init__() (plotgenerator method)": [[7, "experiments.generate_plots.PlotGenerator.__init__"]], "__repr__() (plotgenerator method)": [[7, "experiments.generate_plots.PlotGenerator.__repr__"]], "make_plots() (plotgenerator method)": [[7, "experiments.generate_plots.PlotGenerator.make_plots"]], "rlplotgenerator (class in experiments.generate_plots)": [[8, "experiments.generate_plots.RLPlotGenerator"]], "__init__() (rlplotgenerator method)": [[8, "experiments.generate_plots.RLPlotGenerator.__init__"]], "__repr__() (rlplotgenerator method)": [[8, "experiments.generate_plots.RLPlotGenerator.__repr__"]], "make_plots() (rlplotgenerator method)": [[8, "experiments.generate_plots.RLPlotGenerator.make_plots"]], "run_seldonian_experiment() (rlplotgenerator method)": [[8, "experiments.generate_plots.RLPlotGenerator.run_seldonian_experiment"]], "supervisedplotgenerator (class in experiments.generate_plots)": [[9, "experiments.generate_plots.SupervisedPlotGenerator"]], "__init__() (supervisedplotgenerator method)": [[9, "experiments.generate_plots.SupervisedPlotGenerator.__init__"]], "__repr__() (supervisedplotgenerator method)": [[9, "experiments.generate_plots.SupervisedPlotGenerator.__repr__"]], "make_plots() (supervisedplotgenerator method)": [[9, "experiments.generate_plots.SupervisedPlotGenerator.make_plots"]], "run_baseline_experiment() (supervisedplotgenerator method)": [[9, "experiments.generate_plots.SupervisedPlotGenerator.run_baseline_experiment"]], "run_fairlearn_experiment() (supervisedplotgenerator method)": [[9, "experiments.generate_plots.SupervisedPlotGenerator.run_fairlearn_experiment"]], "run_seldonian_experiment() (supervisedplotgenerator method)": [[9, "experiments.generate_plots.SupervisedPlotGenerator.run_seldonian_experiment"]], "experiments.utils": [[10, "module-experiments.utils"]], "mse() (in module experiments.utils)": [[11, "experiments.utils.MSE"]], "generate_episodes_and_calc_j() (in module experiments.utils)": [[12, "experiments.utils.generate_episodes_and_calc_J"]], "generate_resampled_datasets() (in module experiments.utils)": [[13, "experiments.utils.generate_resampled_datasets"]]}})